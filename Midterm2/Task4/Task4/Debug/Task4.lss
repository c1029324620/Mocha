
Task4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000048  00800100  00001a46  00001ada  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a46  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000038  00800148  00800148  00001b22  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001b22  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001b80  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  00001bc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001023  00000000  00000000  00001c78  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a8d  00000000  00000000  00002c9b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000075d  00000000  00000000  00003728  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000028c  00000000  00000000  00003e88  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000655  00000000  00000000  00004114  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000059c  00000000  00000000  00004769  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00004d05  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <__ctors_end>
       4:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
       8:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
       c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      10:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      14:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      18:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      1c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      20:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      24:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      28:	0c 94 1f 04 	jmp	0x83e	; 0x83e <__vector_10>
      2c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      30:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      34:	0c 94 9c 05 	jmp	0xb38	; 0xb38 <__vector_13>
      38:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      3c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      40:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      44:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      48:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      4c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      50:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      54:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      58:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      5c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      60:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      64:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      68:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      6c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      70:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      74:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      78:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      7c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      80:	0c 94 d2 04 	jmp	0x9a4	; 0x9a4 <__vector_32>
      84:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      88:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      8c:	0c 94 85 05 	jmp	0xb0a	; 0xb0a <__vector_35>
      90:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      94:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      98:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      9c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a0:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a4:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a8:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      ac:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      b0:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>

000000b4 <__trampolines_end>:
      b4:	6e 61       	ori	r22, 0x1E	; 30
      b6:	6e 00       	.word	0x006e	; ????

000000b8 <__c.2332>:
      b8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      c8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      d8:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      e8:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      f8:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     108:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     118:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     128:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     138:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     148:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     158:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     168:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     178:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     188:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     198:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1a8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001b6 <__ctors_end>:
     1b6:	11 24       	eor	r1, r1
     1b8:	1f be       	out	0x3f, r1	; 63
     1ba:	cf ef       	ldi	r28, 0xFF	; 255
     1bc:	d8 e0       	ldi	r29, 0x08	; 8
     1be:	de bf       	out	0x3e, r29	; 62
     1c0:	cd bf       	out	0x3d, r28	; 61

000001c2 <__do_copy_data>:
     1c2:	11 e0       	ldi	r17, 0x01	; 1
     1c4:	a0 e0       	ldi	r26, 0x00	; 0
     1c6:	b1 e0       	ldi	r27, 0x01	; 1
     1c8:	e6 e4       	ldi	r30, 0x46	; 70
     1ca:	fa e1       	ldi	r31, 0x1A	; 26
     1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <__do_copy_data+0x10>
     1ce:	05 90       	lpm	r0, Z+
     1d0:	0d 92       	st	X+, r0
     1d2:	a8 34       	cpi	r26, 0x48	; 72
     1d4:	b1 07       	cpc	r27, r17
     1d6:	d9 f7       	brne	.-10     	; 0x1ce <__do_copy_data+0xc>

000001d8 <__do_clear_bss>:
     1d8:	21 e0       	ldi	r18, 0x01	; 1
     1da:	a8 e4       	ldi	r26, 0x48	; 72
     1dc:	b1 e0       	ldi	r27, 0x01	; 1
     1de:	01 c0       	rjmp	.+2      	; 0x1e2 <.do_clear_bss_start>

000001e0 <.do_clear_bss_loop>:
     1e0:	1d 92       	st	X+, r1

000001e2 <.do_clear_bss_start>:
     1e2:	a0 38       	cpi	r26, 0x80	; 128
     1e4:	b2 07       	cpc	r27, r18
     1e6:	e1 f7       	brne	.-8      	; 0x1e0 <.do_clear_bss_loop>
     1e8:	0e 94 93 02 	call	0x526	; 0x526 <main>
     1ec:	0c 94 21 0d 	jmp	0x1a42	; 0x1a42 <_exit>

000001f0 <__bad_interrupt>:
     1f0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001f4 <USART_init>:
	char array1[32];
	sprintf(array1,"%i", adc_value);			//convert int to string
	USART_tx_string("ADC Value: ");		//print
	USART_tx_string(array1);
	USART_tx_string("\n");
}
     1f4:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     1f8:	87 e6       	ldi	r24, 0x67	; 103
     1fa:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     1fe:	86 e0       	ldi	r24, 0x06	; 6
     200:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     204:	88 e1       	ldi	r24, 0x18	; 24
     206:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     20a:	08 95       	ret

0000020c <USART_tx_string>:
     20c:	cf 93       	push	r28
     20e:	df 93       	push	r29
     210:	fc 01       	movw	r30, r24
     212:	20 81       	ld	r18, Z
     214:	22 23       	and	r18, r18
     216:	69 f0       	breq	.+26     	; 0x232 <USART_tx_string+0x26>
     218:	dc 01       	movw	r26, r24
     21a:	11 96       	adiw	r26, 0x01	; 1
     21c:	e0 ec       	ldi	r30, 0xC0	; 192
     21e:	f0 e0       	ldi	r31, 0x00	; 0
     220:	c6 ec       	ldi	r28, 0xC6	; 198
     222:	d0 e0       	ldi	r29, 0x00	; 0
     224:	90 81       	ld	r25, Z
     226:	95 ff       	sbrs	r25, 5
     228:	fd cf       	rjmp	.-6      	; 0x224 <USART_tx_string+0x18>
     22a:	28 83       	st	Y, r18
     22c:	2d 91       	ld	r18, X+
     22e:	21 11       	cpse	r18, r1
     230:	f9 cf       	rjmp	.-14     	; 0x224 <USART_tx_string+0x18>
     232:	df 91       	pop	r29
     234:	cf 91       	pop	r28
     236:	08 95       	ret

00000238 <adc_read>:
     238:	ea e7       	ldi	r30, 0x7A	; 122
     23a:	f0 e0       	ldi	r31, 0x00	; 0
     23c:	80 81       	ld	r24, Z
     23e:	80 64       	ori	r24, 0x40	; 64
     240:	80 83       	st	Z, r24
     242:	80 81       	ld	r24, Z
     244:	86 fd       	sbrc	r24, 6
     246:	fd cf       	rjmp	.-6      	; 0x242 <adc_read+0xa>
     248:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
     24c:	90 e0       	ldi	r25, 0x00	; 0
     24e:	90 93 77 01 	sts	0x0177, r25	; 0x800177 <adc_value+0x1>
     252:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <adc_value>
     256:	08 95       	ret

00000258 <display_duty>:

void display_duty()
{
     258:	0f 93       	push	r16
     25a:	1f 93       	push	r17
     25c:	cf 93       	push	r28
     25e:	df 93       	push	r29
     260:	cd b7       	in	r28, 0x3d	; 61
     262:	de b7       	in	r29, 0x3e	; 62
     264:	a0 97       	sbiw	r28, 0x20	; 32
     266:	0f b6       	in	r0, 0x3f	; 63
     268:	f8 94       	cli
     26a:	de bf       	out	0x3e, r29	; 62
     26c:	0f be       	out	0x3f, r0	; 63
     26e:	cd bf       	out	0x3d, r28	; 61
	char array1[32];
	sprintf(array1,"%f", DutyCycle);			//convert int to string
     270:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <DutyCycle>
     274:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <DutyCycle+0x1>
     278:	a0 91 74 01 	lds	r26, 0x0174	; 0x800174 <DutyCycle+0x2>
     27c:	b0 91 75 01 	lds	r27, 0x0175	; 0x800175 <DutyCycle+0x3>
     280:	bf 93       	push	r27
     282:	af 93       	push	r26
     284:	9f 93       	push	r25
     286:	8f 93       	push	r24
     288:	8f e0       	ldi	r24, 0x0F	; 15
     28a:	91 e0       	ldi	r25, 0x01	; 1
     28c:	9f 93       	push	r25
     28e:	8f 93       	push	r24
     290:	8e 01       	movw	r16, r28
     292:	0f 5f       	subi	r16, 0xFF	; 255
     294:	1f 4f       	sbci	r17, 0xFF	; 255
     296:	1f 93       	push	r17
     298:	0f 93       	push	r16
     29a:	0e 94 a1 0c 	call	0x1942	; 0x1942 <sprintf>
	USART_tx_string("Duty Cycle: ");		//print
     29e:	82 e1       	ldi	r24, 0x12	; 18
     2a0:	91 e0       	ldi	r25, 0x01	; 1
     2a2:	0e 94 06 01 	call	0x20c	; 0x20c <USART_tx_string>
	USART_tx_string(array1);
     2a6:	c8 01       	movw	r24, r16
     2a8:	0e 94 06 01 	call	0x20c	; 0x20c <USART_tx_string>
	USART_tx_string("\n");
     2ac:	85 e4       	ldi	r24, 0x45	; 69
     2ae:	91 e0       	ldi	r25, 0x01	; 1
     2b0:	0e 94 06 01 	call	0x20c	; 0x20c <USART_tx_string>
}
     2b4:	0f b6       	in	r0, 0x3f	; 63
     2b6:	f8 94       	cli
     2b8:	de bf       	out	0x3e, r29	; 62
     2ba:	0f be       	out	0x3f, r0	; 63
     2bc:	cd bf       	out	0x3d, r28	; 61
     2be:	a0 96       	adiw	r28, 0x20	; 32
     2c0:	0f b6       	in	r0, 0x3f	; 63
     2c2:	f8 94       	cli
     2c4:	de bf       	out	0x3e, r29	; 62
     2c6:	0f be       	out	0x3f, r0	; 63
     2c8:	cd bf       	out	0x3d, r28	; 61
     2ca:	df 91       	pop	r29
     2cc:	cf 91       	pop	r28
     2ce:	1f 91       	pop	r17
     2d0:	0f 91       	pop	r16
     2d2:	08 95       	ret

000002d4 <display_period>:
void display_period()
{
     2d4:	0f 93       	push	r16
     2d6:	1f 93       	push	r17
     2d8:	cf 93       	push	r28
     2da:	df 93       	push	r29
     2dc:	cd b7       	in	r28, 0x3d	; 61
     2de:	de b7       	in	r29, 0x3e	; 62
     2e0:	a0 97       	sbiw	r28, 0x20	; 32
     2e2:	0f b6       	in	r0, 0x3f	; 63
     2e4:	f8 94       	cli
     2e6:	de bf       	out	0x3e, r29	; 62
     2e8:	0f be       	out	0x3f, r0	; 63
     2ea:	cd bf       	out	0x3d, r28	; 61
	char array1[32];
	sprintf(array1,"%lu", Period);			//convert int to string
     2ec:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <Period+0x3>
     2f0:	8f 93       	push	r24
     2f2:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <Period+0x2>
     2f6:	8f 93       	push	r24
     2f8:	80 91 79 01 	lds	r24, 0x0179	; 0x800179 <Period+0x1>
     2fc:	8f 93       	push	r24
     2fe:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <Period>
     302:	8f 93       	push	r24
     304:	8f e1       	ldi	r24, 0x1F	; 31
     306:	91 e0       	ldi	r25, 0x01	; 1
     308:	9f 93       	push	r25
     30a:	8f 93       	push	r24
     30c:	8e 01       	movw	r16, r28
     30e:	0f 5f       	subi	r16, 0xFF	; 255
     310:	1f 4f       	sbci	r17, 0xFF	; 255
     312:	1f 93       	push	r17
     314:	0f 93       	push	r16
     316:	0e 94 a1 0c 	call	0x1942	; 0x1942 <sprintf>
	USART_tx_string("Period: ");		//print
     31a:	83 e2       	ldi	r24, 0x23	; 35
     31c:	91 e0       	ldi	r25, 0x01	; 1
     31e:	0e 94 06 01 	call	0x20c	; 0x20c <USART_tx_string>
	USART_tx_string(array1);
     322:	c8 01       	movw	r24, r16
     324:	0e 94 06 01 	call	0x20c	; 0x20c <USART_tx_string>
	USART_tx_string("\n");
     328:	85 e4       	ldi	r24, 0x45	; 69
     32a:	91 e0       	ldi	r25, 0x01	; 1
     32c:	0e 94 06 01 	call	0x20c	; 0x20c <USART_tx_string>
}
     330:	0f b6       	in	r0, 0x3f	; 63
     332:	f8 94       	cli
     334:	de bf       	out	0x3e, r29	; 62
     336:	0f be       	out	0x3f, r0	; 63
     338:	cd bf       	out	0x3d, r28	; 61
     33a:	a0 96       	adiw	r28, 0x20	; 32
     33c:	0f b6       	in	r0, 0x3f	; 63
     33e:	f8 94       	cli
     340:	de bf       	out	0x3e, r29	; 62
     342:	0f be       	out	0x3f, r0	; 63
     344:	cd bf       	out	0x3d, r28	; 61
     346:	df 91       	pop	r29
     348:	cf 91       	pop	r28
     34a:	1f 91       	pop	r17
     34c:	0f 91       	pop	r16
     34e:	08 95       	ret

00000350 <display_pulse>:

void display_pulse()
{
     350:	0f 93       	push	r16
     352:	1f 93       	push	r17
     354:	cf 93       	push	r28
     356:	df 93       	push	r29
     358:	cd b7       	in	r28, 0x3d	; 61
     35a:	de b7       	in	r29, 0x3e	; 62
     35c:	a0 97       	sbiw	r28, 0x20	; 32
     35e:	0f b6       	in	r0, 0x3f	; 63
     360:	f8 94       	cli
     362:	de bf       	out	0x3e, r29	; 62
     364:	0f be       	out	0x3f, r0	; 63
     366:	cd bf       	out	0x3d, r28	; 61
	char array1[32];
	sprintf(array1,"%lu", PulseWidth);			//convert int to string
     368:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <PulseWidth+0x3>
     36c:	8f 93       	push	r24
     36e:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <PulseWidth+0x2>
     372:	8f 93       	push	r24
     374:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <PulseWidth+0x1>
     378:	8f 93       	push	r24
     37a:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <PulseWidth>
     37e:	8f 93       	push	r24
     380:	8f e1       	ldi	r24, 0x1F	; 31
     382:	91 e0       	ldi	r25, 0x01	; 1
     384:	9f 93       	push	r25
     386:	8f 93       	push	r24
     388:	8e 01       	movw	r16, r28
     38a:	0f 5f       	subi	r16, 0xFF	; 255
     38c:	1f 4f       	sbci	r17, 0xFF	; 255
     38e:	1f 93       	push	r17
     390:	0f 93       	push	r16
     392:	0e 94 a1 0c 	call	0x1942	; 0x1942 <sprintf>
	USART_tx_string("Pulsewidth: ");		//print
     396:	8c e2       	ldi	r24, 0x2C	; 44
     398:	91 e0       	ldi	r25, 0x01	; 1
     39a:	0e 94 06 01 	call	0x20c	; 0x20c <USART_tx_string>
	USART_tx_string(array1);
     39e:	c8 01       	movw	r24, r16
     3a0:	0e 94 06 01 	call	0x20c	; 0x20c <USART_tx_string>
	USART_tx_string("\n");
     3a4:	85 e4       	ldi	r24, 0x45	; 69
     3a6:	91 e0       	ldi	r25, 0x01	; 1
     3a8:	0e 94 06 01 	call	0x20c	; 0x20c <USART_tx_string>
}
     3ac:	0f b6       	in	r0, 0x3f	; 63
     3ae:	f8 94       	cli
     3b0:	de bf       	out	0x3e, r29	; 62
     3b2:	0f be       	out	0x3f, r0	; 63
     3b4:	cd bf       	out	0x3d, r28	; 61
     3b6:	a0 96       	adiw	r28, 0x20	; 32
     3b8:	0f b6       	in	r0, 0x3f	; 63
     3ba:	f8 94       	cli
     3bc:	de bf       	out	0x3e, r29	; 62
     3be:	0f be       	out	0x3f, r0	; 63
     3c0:	cd bf       	out	0x3d, r28	; 61
     3c2:	df 91       	pop	r29
     3c4:	cf 91       	pop	r28
     3c6:	1f 91       	pop	r17
     3c8:	0f 91       	pop	r16
     3ca:	08 95       	ret

000003cc <init_adc>:


void init_adc()
{
	ADMUX = (0<<REFS1) |	//AVref
     3cc:	80 e6       	ldi	r24, 0x60	; 96
     3ce:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	(1<<REFS0) |
	(1<<ADLAR) |	//Left justified
	(0<<MUX2)  |	//ADC0 channel 0
	(0<<MUX1)  |
	(0<<MUX0);
	ADCSRA = (1<<ADEN) |	//Enable ADC
     3d2:	87 e8       	ldi	r24, 0x87	; 135
     3d4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     3d8:	08 95       	ret

000003da <init_timer1>:
}


void init_timer1()
{
	DDRB &= ~(1<<DDB0);		//PB0 as input for timer1 input capture
     3da:	20 98       	cbi	0x04, 0	; 4
	PORTB |= (0<<DDB0);		
     3dc:	85 b1       	in	r24, 0x05	; 5
     3de:	85 b9       	out	0x05, r24	; 5
	TCNT1 = 0;
     3e0:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     3e4:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
	TCCR1A = 0;
     3e8:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
	TCCR1B = (0<<ICNC1) | (1<<ICES1);		//RISING EDGE CAPTURE.
     3ec:	80 e4       	ldi	r24, 0x40	; 64
     3ee:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
	TCCR1C = 0;
     3f2:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__DATA_REGION_ORIGIN__+0x22>
	TIFR1 =(1<<ICF1)|(1<<TOV1);// clear pending
     3f6:	81 e2       	ldi	r24, 0x21	; 33
     3f8:	86 bb       	out	0x16, r24	; 22
	TIMSK1 = (1<<ICIE1)|(1<<TOIE1);// enable interrupt
     3fa:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
     3fe:	08 95       	ret

00000400 <init_timer3>:
}

void init_timer3()
{
	DDRE &= ~(1<<DDE2);			//PE2 as input for timer3 input capture
     400:	6a 98       	cbi	0x0d, 2	; 13
	PORTE |= (0<<2);
     402:	8e b1       	in	r24, 0x0e	; 14
     404:	8e b9       	out	0x0e, r24	; 14
	TCNT3 = 0;
     406:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__DATA_REGION_ORIGIN__+0x35>
     40a:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__DATA_REGION_ORIGIN__+0x34>
	TCCR3A = 0;
     40e:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__DATA_REGION_ORIGIN__+0x30>
	TCCR3B = (0<<ICNC3) | (1<<ICES3);		//rising edge capture.
     412:	80 e4       	ldi	r24, 0x40	; 64
     414:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__DATA_REGION_ORIGIN__+0x31>
	TCCR3C = 0;
     418:	10 92 92 00 	sts	0x0092, r1	; 0x800092 <__DATA_REGION_ORIGIN__+0x32>
	TIFR3 = (1<<ICF3) |(1<<TOV3); //clear pending
     41c:	81 e2       	ldi	r24, 0x21	; 33
     41e:	88 bb       	out	0x18, r24	; 24
	TIMSK3 = (1<<ICIE3)|(1<<TOIE3);	 //enable interrupt
     420:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <__DATA_REGION_ORIGIN__+0x11>
     424:	08 95       	ret

00000426 <start_timer1>:
}

void start_timer1()
{
	//Start timer without prescaller
	TCCR1B|=(1<< CS10);
     426:	e1 e8       	ldi	r30, 0x81	; 129
     428:	f0 e0       	ldi	r31, 0x00	; 0
     42a:	80 81       	ld	r24, Z
     42c:	81 60       	ori	r24, 0x01	; 1
     42e:	80 83       	st	Z, r24
     430:	08 95       	ret

00000432 <start_timer3>:
}

void start_timer3()
{
	TCCR3B |=(1<<CS30);	//start timer3 without prescaller
     432:	e1 e9       	ldi	r30, 0x91	; 145
     434:	f0 e0       	ldi	r31, 0x00	; 0
     436:	80 81       	ld	r24, Z
     438:	81 60       	ori	r24, 0x01	; 1
     43a:	80 83       	st	Z, r24
     43c:	08 95       	ret

0000043e <timer0_pwm>:
}

void timer0_pwm()
{
	DDRD |= (1<<DDD6);
     43e:	56 9a       	sbi	0x0a, 6	; 10
	TCNT0 = 0;
     440:	16 bc       	out	0x26, r1	; 38
	adc_read();
     442:	0e 94 1c 01 	call	0x238	; 0x238 <adc_read>
	OCR0A = adc_value;	
     446:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <adc_value>
     44a:	87 bd       	out	0x27, r24	; 39
	PORTD|=(1<<DDD5);// CW Direction Set
     44c:	5d 9a       	sbi	0x0b, 5	; 11
	PORTD&=~(1<<DDD4);// CW Direction Set
     44e:	5c 98       	cbi	0x0b, 4	; 11
	TCCR0A |= (1<< COM0A1) | (1<<WGM01) | (1<< WGM00); //non-inverting and fast PWM
     450:	84 b5       	in	r24, 0x24	; 36
     452:	83 68       	ori	r24, 0x83	; 131
     454:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1<< CS00) |(1<<CS02);	//prescaler to 1024
     456:	85 b5       	in	r24, 0x25	; 37
     458:	85 60       	ori	r24, 0x05	; 5
     45a:	85 bd       	out	0x25, r24	; 37
     45c:	08 95       	ret

0000045e <speed_rpm>:
}

void speed_rpm()
{
	speed = (1/(Period* 0.0000000625)) * 60 /120L;
     45e:	60 91 78 01 	lds	r22, 0x0178	; 0x800178 <Period>
     462:	70 91 79 01 	lds	r23, 0x0179	; 0x800179 <Period+0x1>
     466:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <Period+0x2>
     46a:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <Period+0x3>
     46e:	0e 94 c8 06 	call	0xd90	; 0xd90 <__floatunsisf>
     472:	2d eb       	ldi	r18, 0xBD	; 189
     474:	37 e3       	ldi	r19, 0x37	; 55
     476:	46 e8       	ldi	r20, 0x86	; 134
     478:	53 e3       	ldi	r21, 0x33	; 51
     47a:	0e 94 56 07 	call	0xeac	; 0xeac <__mulsf3>
     47e:	9b 01       	movw	r18, r22
     480:	ac 01       	movw	r20, r24
     482:	60 e0       	ldi	r22, 0x00	; 0
     484:	70 e0       	ldi	r23, 0x00	; 0
     486:	80 e8       	ldi	r24, 0x80	; 128
     488:	9f e3       	ldi	r25, 0x3F	; 63
     48a:	0e 94 20 06 	call	0xc40	; 0xc40 <__divsf3>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	30 e0       	ldi	r19, 0x00	; 0
     492:	40 e7       	ldi	r20, 0x70	; 112
     494:	52 e4       	ldi	r21, 0x42	; 66
     496:	0e 94 56 07 	call	0xeac	; 0xeac <__mulsf3>
     49a:	20 e0       	ldi	r18, 0x00	; 0
     49c:	30 e0       	ldi	r19, 0x00	; 0
     49e:	40 ef       	ldi	r20, 0xF0	; 240
     4a0:	52 e4       	ldi	r21, 0x42	; 66
     4a2:	0e 94 20 06 	call	0xc40	; 0xc40 <__divsf3>
     4a6:	0e 94 92 06 	call	0xd24	; 0xd24 <__fixsfsi>
     4aa:	70 93 49 01 	sts	0x0149, r23	; 0x800149 <__data_end+0x1>
     4ae:	60 93 48 01 	sts	0x0148, r22	; 0x800148 <__data_end>
     4b2:	08 95       	ret

000004b4 <display_speed>:
}

void display_speed()
{
     4b4:	0f 93       	push	r16
     4b6:	1f 93       	push	r17
     4b8:	cf 93       	push	r28
     4ba:	df 93       	push	r29
     4bc:	cd b7       	in	r28, 0x3d	; 61
     4be:	de b7       	in	r29, 0x3e	; 62
     4c0:	64 97       	sbiw	r28, 0x14	; 20
     4c2:	0f b6       	in	r0, 0x3f	; 63
     4c4:	f8 94       	cli
     4c6:	de bf       	out	0x3e, r29	; 62
     4c8:	0f be       	out	0x3f, r0	; 63
     4ca:	cd bf       	out	0x3d, r28	; 61
	char array1[20];
	sprintf(array1,"%i", speed);			//convert int to string
     4cc:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <__data_end+0x1>
     4d0:	8f 93       	push	r24
     4d2:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <__data_end>
     4d6:	8f 93       	push	r24
     4d8:	80 e0       	ldi	r24, 0x00	; 0
     4da:	91 e0       	ldi	r25, 0x01	; 1
     4dc:	9f 93       	push	r25
     4de:	8f 93       	push	r24
     4e0:	8e 01       	movw	r16, r28
     4e2:	0f 5f       	subi	r16, 0xFF	; 255
     4e4:	1f 4f       	sbci	r17, 0xFF	; 255
     4e6:	1f 93       	push	r17
     4e8:	0f 93       	push	r16
     4ea:	0e 94 a1 0c 	call	0x1942	; 0x1942 <sprintf>
	USART_tx_string("Speed: ");		//print
     4ee:	89 e3       	ldi	r24, 0x39	; 57
     4f0:	91 e0       	ldi	r25, 0x01	; 1
     4f2:	0e 94 06 01 	call	0x20c	; 0x20c <USART_tx_string>
	USART_tx_string(array1);
     4f6:	c8 01       	movw	r24, r16
     4f8:	0e 94 06 01 	call	0x20c	; 0x20c <USART_tx_string>
	USART_tx_string(" rpm\n");
     4fc:	81 e4       	ldi	r24, 0x41	; 65
     4fe:	91 e0       	ldi	r25, 0x01	; 1
     500:	0e 94 06 01 	call	0x20c	; 0x20c <USART_tx_string>
}
     504:	0f 90       	pop	r0
     506:	0f 90       	pop	r0
     508:	0f 90       	pop	r0
     50a:	0f 90       	pop	r0
     50c:	0f 90       	pop	r0
     50e:	0f 90       	pop	r0
     510:	64 96       	adiw	r28, 0x14	; 20
     512:	0f b6       	in	r0, 0x3f	; 63
     514:	f8 94       	cli
     516:	de bf       	out	0x3e, r29	; 62
     518:	0f be       	out	0x3f, r0	; 63
     51a:	cd bf       	out	0x3d, r28	; 61
     51c:	df 91       	pop	r29
     51e:	cf 91       	pop	r28
     520:	1f 91       	pop	r17
     522:	0f 91       	pop	r16
     524:	08 95       	ret

00000526 <main>:

int main(void)
{
     526:	cf 93       	push	r28
     528:	df 93       	push	r29
     52a:	cd b7       	in	r28, 0x3d	; 61
     52c:	de b7       	in	r29, 0x3e	; 62
     52e:	60 97       	sbiw	r28, 0x10	; 16
     530:	0f b6       	in	r0, 0x3f	; 63
     532:	f8 94       	cli
     534:	de bf       	out	0x3e, r29	; 62
     536:	0f be       	out	0x3f, r0	; 63
     538:	cd bf       	out	0x3d, r28	; 61
	init_adc();
     53a:	0e 94 e6 01 	call	0x3cc	; 0x3cc <init_adc>
	USART_init();
     53e:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <USART_init>
	init_timer1();
     542:	0e 94 ed 01 	call	0x3da	; 0x3da <init_timer1>
	init_timer3();
     546:	0e 94 00 02 	call	0x400	; 0x400 <init_timer3>
	start_timer1();
     54a:	0e 94 13 02 	call	0x426	; 0x426 <start_timer1>
	start_timer3();
     54e:	0e 94 19 02 	call	0x432	; 0x432 <start_timer3>
	timer0_pwm();
     552:	0e 94 1f 02 	call	0x43e	; 0x43e <timer0_pwm>
	sei();
     556:	78 94       	sei
	unsigned long period_1 = 0, period_2 = 0;
	unsigned long PulseWidth_1 = 0, PulseWidth_2 = 0;
     558:	c1 2c       	mov	r12, r1
     55a:	d1 2c       	mov	r13, r1
     55c:	76 01       	movw	r14, r12
     55e:	81 2c       	mov	r8, r1
     560:	91 2c       	mov	r9, r1
     562:	54 01       	movw	r10, r8
	init_timer3();
	start_timer1();
	start_timer3();
	timer0_pwm();
	sei();
	unsigned long period_1 = 0, period_2 = 0;
     564:	1d 86       	std	Y+13, r1	; 0x0d
     566:	1e 86       	std	Y+14, r1	; 0x0e
     568:	1f 86       	std	Y+15, r1	; 0x0f
     56a:	18 8a       	std	Y+16, r1	; 0x10
     56c:	19 86       	std	Y+9, r1	; 0x09
     56e:	1a 86       	std	Y+10, r1	; 0x0a
     570:	1b 86       	std	Y+11, r1	; 0x0b
     572:	1c 86       	std	Y+12, r1	; 0x0c
		if(Flag == 4)	//Ch.A finish capturing
		{
			period_1 =((Capt3 - Cpa1 + Capt4 - Capt2) / 2);  //get the average period
			PulseWidth_1 = (Capt2 - Cpa1 + Capt4 - Capt3) / 2;	//get the average pulse width
			DutyCycle_1 = PulseWidth_1/(float)period_1;
			Flag++;
     574:	0f 2e       	mov	r0, r31
     576:	f5 e0       	ldi	r31, 0x05	; 5
     578:	2f 2e       	mov	r2, r31
     57a:	31 2c       	mov	r3, r1
     57c:	f0 2d       	mov	r31, r0
	volatile float DutyCycle_1, DutyCycle_2;
    /* Replace with your application code */
	//USART_tx_string("Connected\n");
    while (1) 
    {
		adc_read();				//update adc value
     57e:	0e 94 1c 01 	call	0x238	; 0x238 <adc_read>
		OCR0A = adc_value;		//set speed.
     582:	e6 e7       	ldi	r30, 0x76	; 118
     584:	f1 e0       	ldi	r31, 0x01	; 1
     586:	80 81       	ld	r24, Z
     588:	87 bd       	out	0x27, r24	; 39
		if(Flag == 4)	//Ch.A finish capturing
     58a:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <Flag>
     58e:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <Flag+0x1>
     592:	04 97       	sbiw	r24, 0x04	; 4
     594:	09 f0       	breq	.+2      	; 0x598 <main+0x72>
     596:	60 c0       	rjmp	.+192    	; 0x658 <main+0x132>
		{
			period_1 =((Capt3 - Cpa1 + Capt4 - Capt2) / 2);  //get the average period
     598:	00 91 62 01 	lds	r16, 0x0162	; 0x800162 <Capt3>
     59c:	10 91 63 01 	lds	r17, 0x0163	; 0x800163 <Capt3+0x1>
     5a0:	20 91 64 01 	lds	r18, 0x0164	; 0x800164 <Capt3+0x2>
     5a4:	30 91 65 01 	lds	r19, 0x0165	; 0x800165 <Capt3+0x3>
     5a8:	40 90 6a 01 	lds	r4, 0x016A	; 0x80016a <Cpa1>
     5ac:	50 90 6b 01 	lds	r5, 0x016B	; 0x80016b <Cpa1+0x1>
     5b0:	60 90 6c 01 	lds	r6, 0x016C	; 0x80016c <Cpa1+0x2>
     5b4:	70 90 6d 01 	lds	r7, 0x016D	; 0x80016d <Cpa1+0x3>
     5b8:	80 90 5e 01 	lds	r8, 0x015E	; 0x80015e <Capt4>
     5bc:	90 90 5f 01 	lds	r9, 0x015F	; 0x80015f <Capt4+0x1>
     5c0:	a0 90 60 01 	lds	r10, 0x0160	; 0x800160 <Capt4+0x2>
     5c4:	b0 90 61 01 	lds	r11, 0x0161	; 0x800161 <Capt4+0x3>
     5c8:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <Capt2>
     5cc:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <Capt2+0x1>
     5d0:	a0 91 68 01 	lds	r26, 0x0168	; 0x800168 <Capt2+0x2>
     5d4:	b0 91 69 01 	lds	r27, 0x0169	; 0x800169 <Capt2+0x3>
     5d8:	b9 01       	movw	r22, r18
     5da:	a8 01       	movw	r20, r16
     5dc:	48 0d       	add	r20, r8
     5de:	59 1d       	adc	r21, r9
     5e0:	6a 1d       	adc	r22, r10
     5e2:	7b 1d       	adc	r23, r11
     5e4:	44 19       	sub	r20, r4
     5e6:	55 09       	sbc	r21, r5
     5e8:	66 09       	sbc	r22, r6
     5ea:	77 09       	sbc	r23, r7
     5ec:	48 1b       	sub	r20, r24
     5ee:	59 0b       	sbc	r21, r25
     5f0:	6a 0b       	sbc	r22, r26
     5f2:	7b 0b       	sbc	r23, r27
     5f4:	76 95       	lsr	r23
     5f6:	67 95       	ror	r22
     5f8:	57 95       	ror	r21
     5fa:	47 95       	ror	r20
     5fc:	49 87       	std	Y+9, r20	; 0x09
     5fe:	5a 87       	std	Y+10, r21	; 0x0a
     600:	6b 87       	std	Y+11, r22	; 0x0b
     602:	7c 87       	std	Y+12, r23	; 0x0c
			PulseWidth_1 = (Capt2 - Cpa1 + Capt4 - Capt3) / 2;	//get the average pulse width
     604:	88 0e       	add	r8, r24
     606:	99 1e       	adc	r9, r25
     608:	aa 1e       	adc	r10, r26
     60a:	bb 1e       	adc	r11, r27
     60c:	84 18       	sub	r8, r4
     60e:	95 08       	sbc	r9, r5
     610:	a6 08       	sbc	r10, r6
     612:	b7 08       	sbc	r11, r7
     614:	80 1a       	sub	r8, r16
     616:	91 0a       	sbc	r9, r17
     618:	a2 0a       	sbc	r10, r18
     61a:	b3 0a       	sbc	r11, r19
     61c:	b6 94       	lsr	r11
     61e:	a7 94       	ror	r10
     620:	97 94       	ror	r9
     622:	87 94       	ror	r8
			DutyCycle_1 = PulseWidth_1/(float)period_1;
     624:	c5 01       	movw	r24, r10
     626:	b4 01       	movw	r22, r8
     628:	0e 94 c8 06 	call	0xd90	; 0xd90 <__floatunsisf>
     62c:	2b 01       	movw	r4, r22
     62e:	3c 01       	movw	r6, r24
     630:	69 85       	ldd	r22, Y+9	; 0x09
     632:	7a 85       	ldd	r23, Y+10	; 0x0a
     634:	8b 85       	ldd	r24, Y+11	; 0x0b
     636:	9c 85       	ldd	r25, Y+12	; 0x0c
     638:	0e 94 c8 06 	call	0xd90	; 0xd90 <__floatunsisf>
     63c:	9b 01       	movw	r18, r22
     63e:	ac 01       	movw	r20, r24
     640:	c3 01       	movw	r24, r6
     642:	b2 01       	movw	r22, r4
     644:	0e 94 20 06 	call	0xc40	; 0xc40 <__divsf3>
     648:	69 83       	std	Y+1, r22	; 0x01
     64a:	7a 83       	std	Y+2, r23	; 0x02
     64c:	8b 83       	std	Y+3, r24	; 0x03
     64e:	9c 83       	std	Y+4, r25	; 0x04
			Flag++;
     650:	30 92 71 01 	sts	0x0171, r3	; 0x800171 <Flag+0x1>
     654:	20 92 70 01 	sts	0x0170, r2	; 0x800170 <Flag>
		 }
		 if(Flag_2 == 4) //Ch.B finish capturing
     658:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <Flag_2>
     65c:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <Flag_2+0x1>
     660:	84 30       	cpi	r24, 0x04	; 4
     662:	91 05       	cpc	r25, r1
     664:	09 f0       	breq	.+2      	; 0x668 <main+0x142>
     666:	68 c0       	rjmp	.+208    	; 0x738 <main+0x212>
		 {
			period_2 =((Capt7 - Capt5 + Capt8 - Capt6) / 2);  //get the average period
     668:	00 91 52 01 	lds	r16, 0x0152	; 0x800152 <Capt7>
     66c:	10 91 53 01 	lds	r17, 0x0153	; 0x800153 <Capt7+0x1>
     670:	20 91 54 01 	lds	r18, 0x0154	; 0x800154 <Capt7+0x2>
     674:	30 91 55 01 	lds	r19, 0x0155	; 0x800155 <Capt7+0x3>
     678:	40 90 5a 01 	lds	r4, 0x015A	; 0x80015a <Capt5>
     67c:	50 90 5b 01 	lds	r5, 0x015B	; 0x80015b <Capt5+0x1>
     680:	60 90 5c 01 	lds	r6, 0x015C	; 0x80015c <Capt5+0x2>
     684:	70 90 5d 01 	lds	r7, 0x015D	; 0x80015d <Capt5+0x3>
     688:	c0 90 4e 01 	lds	r12, 0x014E	; 0x80014e <Capt8>
     68c:	d0 90 4f 01 	lds	r13, 0x014F	; 0x80014f <Capt8+0x1>
     690:	e0 90 50 01 	lds	r14, 0x0150	; 0x800150 <Capt8+0x2>
     694:	f0 90 51 01 	lds	r15, 0x0151	; 0x800151 <Capt8+0x3>
     698:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <Capt6>
     69c:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <Capt6+0x1>
     6a0:	a0 91 58 01 	lds	r26, 0x0158	; 0x800158 <Capt6+0x2>
     6a4:	b0 91 59 01 	lds	r27, 0x0159	; 0x800159 <Capt6+0x3>
     6a8:	b9 01       	movw	r22, r18
     6aa:	a8 01       	movw	r20, r16
     6ac:	4c 0d       	add	r20, r12
     6ae:	5d 1d       	adc	r21, r13
     6b0:	6e 1d       	adc	r22, r14
     6b2:	7f 1d       	adc	r23, r15
     6b4:	44 19       	sub	r20, r4
     6b6:	55 09       	sbc	r21, r5
     6b8:	66 09       	sbc	r22, r6
     6ba:	77 09       	sbc	r23, r7
     6bc:	48 1b       	sub	r20, r24
     6be:	59 0b       	sbc	r21, r25
     6c0:	6a 0b       	sbc	r22, r26
     6c2:	7b 0b       	sbc	r23, r27
     6c4:	76 95       	lsr	r23
     6c6:	67 95       	ror	r22
     6c8:	57 95       	ror	r21
     6ca:	47 95       	ror	r20
     6cc:	4d 87       	std	Y+13, r20	; 0x0d
     6ce:	5e 87       	std	Y+14, r21	; 0x0e
     6d0:	6f 87       	std	Y+15, r22	; 0x0f
     6d2:	78 8b       	std	Y+16, r23	; 0x10
			PulseWidth_2 = (Capt6 - Capt5 + Capt8 - Capt7) / 2;	//get the average pulse width
     6d4:	c8 0e       	add	r12, r24
     6d6:	d9 1e       	adc	r13, r25
     6d8:	ea 1e       	adc	r14, r26
     6da:	fb 1e       	adc	r15, r27
     6dc:	c4 18       	sub	r12, r4
     6de:	d5 08       	sbc	r13, r5
     6e0:	e6 08       	sbc	r14, r6
     6e2:	f7 08       	sbc	r15, r7
     6e4:	c0 1a       	sub	r12, r16
     6e6:	d1 0a       	sbc	r13, r17
     6e8:	e2 0a       	sbc	r14, r18
     6ea:	f3 0a       	sbc	r15, r19
     6ec:	f6 94       	lsr	r15
     6ee:	e7 94       	ror	r14
     6f0:	d7 94       	ror	r13
     6f2:	c7 94       	ror	r12
			DutyCycle_2 = PulseWidth_2/(float)period_2;
     6f4:	c7 01       	movw	r24, r14
     6f6:	b6 01       	movw	r22, r12
     6f8:	0e 94 c8 06 	call	0xd90	; 0xd90 <__floatunsisf>
     6fc:	2b 01       	movw	r4, r22
     6fe:	3c 01       	movw	r6, r24
     700:	6d 85       	ldd	r22, Y+13	; 0x0d
     702:	7e 85       	ldd	r23, Y+14	; 0x0e
     704:	8f 85       	ldd	r24, Y+15	; 0x0f
     706:	98 89       	ldd	r25, Y+16	; 0x10
     708:	0e 94 c8 06 	call	0xd90	; 0xd90 <__floatunsisf>
     70c:	9b 01       	movw	r18, r22
     70e:	ac 01       	movw	r20, r24
     710:	c3 01       	movw	r24, r6
     712:	b2 01       	movw	r22, r4
     714:	0e 94 20 06 	call	0xc40	; 0xc40 <__divsf3>
     718:	6d 83       	std	Y+5, r22	; 0x05
     71a:	7e 83       	std	Y+6, r23	; 0x06
     71c:	8f 83       	std	Y+7, r24	; 0x07
     71e:	98 87       	std	Y+8, r25	; 0x08
			Flag_2++;
     720:	30 92 6f 01 	sts	0x016F, r3	; 0x80016f <Flag_2+0x1>
     724:	20 92 6e 01 	sts	0x016E, r2	; 0x80016e <Flag_2>
		 }
		 if(Flag == 5 && Flag_2 == 5)
     728:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <Flag>
     72c:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <Flag+0x1>
     730:	05 97       	sbiw	r24, 0x05	; 5
     732:	09 f0       	breq	.+2      	; 0x736 <main+0x210>
     734:	24 cf       	rjmp	.-440    	; 0x57e <main+0x58>
     736:	0b c0       	rjmp	.+22     	; 0x74e <main+0x228>
     738:	20 91 70 01 	lds	r18, 0x0170	; 0x800170 <Flag>
     73c:	30 91 71 01 	lds	r19, 0x0171	; 0x800171 <Flag+0x1>
     740:	25 30       	cpi	r18, 0x05	; 5
     742:	31 05       	cpc	r19, r1
     744:	09 f0       	breq	.+2      	; 0x748 <main+0x222>
     746:	1b cf       	rjmp	.-458    	; 0x57e <main+0x58>
     748:	05 97       	sbiw	r24, 0x05	; 5
     74a:	09 f0       	breq	.+2      	; 0x74e <main+0x228>
     74c:	18 cf       	rjmp	.-464    	; 0x57e <main+0x58>
		 {
			DutyCycle = (DutyCycle_1 + DutyCycle_2)/2; 
     74e:	69 81       	ldd	r22, Y+1	; 0x01
     750:	7a 81       	ldd	r23, Y+2	; 0x02
     752:	8b 81       	ldd	r24, Y+3	; 0x03
     754:	9c 81       	ldd	r25, Y+4	; 0x04
     756:	2d 81       	ldd	r18, Y+5	; 0x05
     758:	3e 81       	ldd	r19, Y+6	; 0x06
     75a:	4f 81       	ldd	r20, Y+7	; 0x07
     75c:	58 85       	ldd	r21, Y+8	; 0x08
     75e:	0e 94 b4 05 	call	0xb68	; 0xb68 <__addsf3>
     762:	20 e0       	ldi	r18, 0x00	; 0
     764:	30 e0       	ldi	r19, 0x00	; 0
     766:	40 e0       	ldi	r20, 0x00	; 0
     768:	5f e3       	ldi	r21, 0x3F	; 63
     76a:	0e 94 56 07 	call	0xeac	; 0xeac <__mulsf3>
     76e:	60 93 72 01 	sts	0x0172, r22	; 0x800172 <DutyCycle>
     772:	70 93 73 01 	sts	0x0173, r23	; 0x800173 <DutyCycle+0x1>
     776:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <DutyCycle+0x2>
     77a:	90 93 75 01 	sts	0x0175, r25	; 0x800175 <DutyCycle+0x3>
			Period = (period_1 + period_2) /2;
     77e:	89 85       	ldd	r24, Y+9	; 0x09
     780:	9a 85       	ldd	r25, Y+10	; 0x0a
     782:	ab 85       	ldd	r26, Y+11	; 0x0b
     784:	bc 85       	ldd	r27, Y+12	; 0x0c
     786:	2d 85       	ldd	r18, Y+13	; 0x0d
     788:	3e 85       	ldd	r19, Y+14	; 0x0e
     78a:	4f 85       	ldd	r20, Y+15	; 0x0f
     78c:	58 89       	ldd	r21, Y+16	; 0x10
     78e:	82 0f       	add	r24, r18
     790:	93 1f       	adc	r25, r19
     792:	a4 1f       	adc	r26, r20
     794:	b5 1f       	adc	r27, r21
     796:	b6 95       	lsr	r27
     798:	a7 95       	ror	r26
     79a:	97 95       	ror	r25
     79c:	87 95       	ror	r24
     79e:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <Period>
     7a2:	90 93 79 01 	sts	0x0179, r25	; 0x800179 <Period+0x1>
     7a6:	a0 93 7a 01 	sts	0x017A, r26	; 0x80017a <Period+0x2>
     7aa:	b0 93 7b 01 	sts	0x017B, r27	; 0x80017b <Period+0x3>
			PulseWidth = (PulseWidth_1 + PulseWidth_2) /2;
     7ae:	d5 01       	movw	r26, r10
     7b0:	c4 01       	movw	r24, r8
     7b2:	8c 0d       	add	r24, r12
     7b4:	9d 1d       	adc	r25, r13
     7b6:	ae 1d       	adc	r26, r14
     7b8:	bf 1d       	adc	r27, r15
     7ba:	b6 95       	lsr	r27
     7bc:	a7 95       	ror	r26
     7be:	97 95       	ror	r25
     7c0:	87 95       	ror	r24
     7c2:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <PulseWidth>
     7c6:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <PulseWidth+0x1>
     7ca:	a0 93 7e 01 	sts	0x017E, r26	; 0x80017e <PulseWidth+0x2>
     7ce:	b0 93 7f 01 	sts	0x017F, r27	; 0x80017f <PulseWidth+0x3>
			display_duty();
     7d2:	0e 94 2c 01 	call	0x258	; 0x258 <display_duty>
			display_pulse();
     7d6:	0e 94 a8 01 	call	0x350	; 0x350 <display_pulse>
			speed_rpm();		//calculate speed in rpm.
     7da:	0e 94 2f 02 	call	0x45e	; 0x45e <speed_rpm>
			display_period();
     7de:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <display_period>
			display_speed();
     7e2:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <display_speed>
			Flag = 0;
     7e6:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <Flag+0x1>
     7ea:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <Flag>
			Flag_2 = 0;
     7ee:	10 92 6f 01 	sts	0x016F, r1	; 0x80016f <Flag_2+0x1>
     7f2:	10 92 6e 01 	sts	0x016E, r1	; 0x80016e <Flag_2>
			TCNT1 = 0;
     7f6:	e4 e8       	ldi	r30, 0x84	; 132
     7f8:	f0 e0       	ldi	r31, 0x00	; 0
     7fa:	11 82       	std	Z+1, r1	; 0x01
     7fc:	10 82       	st	Z, r1
			TCNT3 = 0;
     7fe:	e4 e9       	ldi	r30, 0x94	; 148
     800:	f0 e0       	ldi	r31, 0x00	; 0
     802:	11 82       	std	Z+1, r1	; 0x01
     804:	10 82       	st	Z, r1
			overflow_cnt = 0;
     806:	10 92 4d 01 	sts	0x014D, r1	; 0x80014d <overflow_cnt+0x1>
     80a:	10 92 4c 01 	sts	0x014C, r1	; 0x80014c <overflow_cnt>
			overflow_cnt_2 = 0;
     80e:	10 92 4b 01 	sts	0x014B, r1	; 0x80014b <overflow_cnt_2+0x1>
     812:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <overflow_cnt_2>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     816:	ff ef       	ldi	r31, 0xFF	; 255
     818:	27 ea       	ldi	r18, 0xA7	; 167
     81a:	31 e6       	ldi	r19, 0x61	; 97
     81c:	f1 50       	subi	r31, 0x01	; 1
     81e:	20 40       	sbci	r18, 0x00	; 0
     820:	30 40       	sbci	r19, 0x00	; 0
     822:	e1 f7       	brne	.-8      	; 0x81c <main+0x2f6>
     824:	00 c0       	rjmp	.+0      	; 0x826 <main+0x300>
     826:	00 00       	nop
			_delay_ms(2000);		//delay for printing result to terminal
			TIMSK1|=(1<<ICIE1)|(1<<TOIE1);		
     828:	ef e6       	ldi	r30, 0x6F	; 111
     82a:	f0 e0       	ldi	r31, 0x00	; 0
     82c:	80 81       	ld	r24, Z
     82e:	81 62       	ori	r24, 0x21	; 33
     830:	80 83       	st	Z, r24
			TIMSK3|=(1<<ICIE3)|(1<<TOIE3);		//restart interrupt.	 
     832:	e1 e7       	ldi	r30, 0x71	; 113
     834:	f0 e0       	ldi	r31, 0x00	; 0
     836:	80 81       	ld	r24, Z
     838:	81 62       	ori	r24, 0x21	; 33
     83a:	80 83       	st	Z, r24
     83c:	a0 ce       	rjmp	.-704    	; 0x57e <main+0x58>

0000083e <__vector_10>:
	}
}

//capture ISR
ISR(TIMER1_CAPT_vect)
{
     83e:	1f 92       	push	r1
     840:	0f 92       	push	r0
     842:	0f b6       	in	r0, 0x3f	; 63
     844:	0f 92       	push	r0
     846:	11 24       	eor	r1, r1
     848:	2f 93       	push	r18
     84a:	3f 93       	push	r19
     84c:	8f 93       	push	r24
     84e:	9f 93       	push	r25
     850:	af 93       	push	r26
     852:	bf 93       	push	r27
     854:	ef 93       	push	r30
     856:	ff 93       	push	r31
	//4x encoding
	if(Flag == 0)
     858:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <Flag>
     85c:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <Flag+0x1>
     860:	89 2b       	or	r24, r25
     862:	f1 f4       	brne	.+60     	; 0x8a0 <__vector_10+0x62>
	{
		Cpa1 = ICR1 + overflow_cnt * 65536;
     864:	20 91 86 00 	lds	r18, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
     868:	30 91 87 00 	lds	r19, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
     86c:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <overflow_cnt>
     870:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <overflow_cnt+0x1>
     874:	a0 e0       	ldi	r26, 0x00	; 0
     876:	b0 e0       	ldi	r27, 0x00	; 0
     878:	dc 01       	movw	r26, r24
     87a:	99 27       	eor	r25, r25
     87c:	88 27       	eor	r24, r24
     87e:	82 0f       	add	r24, r18
     880:	93 1f       	adc	r25, r19
     882:	a1 1d       	adc	r26, r1
     884:	b1 1d       	adc	r27, r1
     886:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <Cpa1>
     88a:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <Cpa1+0x1>
     88e:	a0 93 6c 01 	sts	0x016C, r26	; 0x80016c <Cpa1+0x2>
     892:	b0 93 6d 01 	sts	0x016D, r27	; 0x80016d <Cpa1+0x3>
		//TCNT1=0;// restart timer for next revolution
		//T1Ovs1=overflow_cnt;
		TCCR1B&=~(1<<ICES1);	//switch to falling edge
     896:	e1 e8       	ldi	r30, 0x81	; 129
     898:	f0 e0       	ldi	r31, 0x00	; 0
     89a:	80 81       	ld	r24, Z
     89c:	8f 7b       	andi	r24, 0xBF	; 191
     89e:	80 83       	st	Z, r24
	}
	if(Flag == 1)
     8a0:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <Flag>
     8a4:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <Flag+0x1>
     8a8:	01 97       	sbiw	r24, 0x01	; 1
     8aa:	f1 f4       	brne	.+60     	; 0x8e8 <__vector_10+0xaa>
	{
		Capt2 = ICR1 + overflow_cnt * 65536; 
     8ac:	20 91 86 00 	lds	r18, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
     8b0:	30 91 87 00 	lds	r19, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
     8b4:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <overflow_cnt>
     8b8:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <overflow_cnt+0x1>
     8bc:	a0 e0       	ldi	r26, 0x00	; 0
     8be:	b0 e0       	ldi	r27, 0x00	; 0
     8c0:	dc 01       	movw	r26, r24
     8c2:	99 27       	eor	r25, r25
     8c4:	88 27       	eor	r24, r24
     8c6:	82 0f       	add	r24, r18
     8c8:	93 1f       	adc	r25, r19
     8ca:	a1 1d       	adc	r26, r1
     8cc:	b1 1d       	adc	r27, r1
     8ce:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <Capt2>
     8d2:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <Capt2+0x1>
     8d6:	a0 93 68 01 	sts	0x0168, r26	; 0x800168 <Capt2+0x2>
     8da:	b0 93 69 01 	sts	0x0169, r27	; 0x800169 <Capt2+0x3>
		TCCR1B|=(1<<ICES1);		//switch back to rising edge
     8de:	e1 e8       	ldi	r30, 0x81	; 129
     8e0:	f0 e0       	ldi	r31, 0x00	; 0
     8e2:	80 81       	ld	r24, Z
     8e4:	80 64       	ori	r24, 0x40	; 64
     8e6:	80 83       	st	Z, r24
		//T1Ovs2=overflow_cnt;
	}
	if(Flag ==2)
     8e8:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <Flag>
     8ec:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <Flag+0x1>
     8f0:	02 97       	sbiw	r24, 0x02	; 2
     8f2:	f1 f4       	brne	.+60     	; 0x930 <__stack+0x31>
	{
		Capt3 = ICR1 + overflow_cnt * 65536;
     8f4:	20 91 86 00 	lds	r18, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
     8f8:	30 91 87 00 	lds	r19, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
     8fc:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <overflow_cnt>
     900:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <overflow_cnt+0x1>
     904:	a0 e0       	ldi	r26, 0x00	; 0
     906:	b0 e0       	ldi	r27, 0x00	; 0
     908:	dc 01       	movw	r26, r24
     90a:	99 27       	eor	r25, r25
     90c:	88 27       	eor	r24, r24
     90e:	82 0f       	add	r24, r18
     910:	93 1f       	adc	r25, r19
     912:	a1 1d       	adc	r26, r1
     914:	b1 1d       	adc	r27, r1
     916:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <Capt3>
     91a:	90 93 63 01 	sts	0x0163, r25	; 0x800163 <Capt3+0x1>
     91e:	a0 93 64 01 	sts	0x0164, r26	; 0x800164 <Capt3+0x2>
     922:	b0 93 65 01 	sts	0x0165, r27	; 0x800165 <Capt3+0x3>
		TCCR1B&=~(1<<ICES1);	//switch to falling edge
     926:	e1 e8       	ldi	r30, 0x81	; 129
     928:	f0 e0       	ldi	r31, 0x00	; 0
     92a:	80 81       	ld	r24, Z
     92c:	8f 7b       	andi	r24, 0xBF	; 191
     92e:	80 83       	st	Z, r24
		//T1Ovs3 = overflow_cnt;
	}
	if(Flag == 3)
     930:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <Flag>
     934:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <Flag+0x1>
     938:	03 97       	sbiw	r24, 0x03	; 3
     93a:	f1 f4       	brne	.+60     	; 0x978 <__stack+0x79>
	{
		Capt4 = ICR1 + overflow_cnt * 65536;
     93c:	20 91 86 00 	lds	r18, 0x0086	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
     940:	30 91 87 00 	lds	r19, 0x0087	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
     944:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <overflow_cnt>
     948:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <overflow_cnt+0x1>
     94c:	a0 e0       	ldi	r26, 0x00	; 0
     94e:	b0 e0       	ldi	r27, 0x00	; 0
     950:	dc 01       	movw	r26, r24
     952:	99 27       	eor	r25, r25
     954:	88 27       	eor	r24, r24
     956:	82 0f       	add	r24, r18
     958:	93 1f       	adc	r25, r19
     95a:	a1 1d       	adc	r26, r1
     95c:	b1 1d       	adc	r27, r1
     95e:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <Capt4>
     962:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <Capt4+0x1>
     966:	a0 93 60 01 	sts	0x0160, r26	; 0x800160 <Capt4+0x2>
     96a:	b0 93 61 01 	sts	0x0161, r27	; 0x800161 <Capt4+0x3>
		//T10vs4 = overflow_cnt;
		TIMSK1&=~((1<<ICIE1)|(1<<TOIE1));	//stop input capture and overflow interrupt.
     96e:	ef e6       	ldi	r30, 0x6F	; 111
     970:	f0 e0       	ldi	r31, 0x00	; 0
     972:	80 81       	ld	r24, Z
     974:	8e 7d       	andi	r24, 0xDE	; 222
     976:	80 83       	st	Z, r24
	}
	Flag++;
     978:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <Flag>
     97c:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <Flag+0x1>
     980:	01 96       	adiw	r24, 0x01	; 1
     982:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <Flag+0x1>
     986:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <Flag>
}
     98a:	ff 91       	pop	r31
     98c:	ef 91       	pop	r30
     98e:	bf 91       	pop	r27
     990:	af 91       	pop	r26
     992:	9f 91       	pop	r25
     994:	8f 91       	pop	r24
     996:	3f 91       	pop	r19
     998:	2f 91       	pop	r18
     99a:	0f 90       	pop	r0
     99c:	0f be       	out	0x3f, r0	; 63
     99e:	0f 90       	pop	r0
     9a0:	1f 90       	pop	r1
     9a2:	18 95       	reti

000009a4 <__vector_32>:

ISR(TIMER3_CAPT_vect)
{
     9a4:	1f 92       	push	r1
     9a6:	0f 92       	push	r0
     9a8:	0f b6       	in	r0, 0x3f	; 63
     9aa:	0f 92       	push	r0
     9ac:	11 24       	eor	r1, r1
     9ae:	2f 93       	push	r18
     9b0:	3f 93       	push	r19
     9b2:	8f 93       	push	r24
     9b4:	9f 93       	push	r25
     9b6:	af 93       	push	r26
     9b8:	bf 93       	push	r27
     9ba:	ef 93       	push	r30
     9bc:	ff 93       	push	r31
	//4x encoding
	if(Flag_2 == 0)
     9be:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <Flag_2>
     9c2:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <Flag_2+0x1>
     9c6:	89 2b       	or	r24, r25
     9c8:	f1 f4       	brne	.+60     	; 0xa06 <__vector_32+0x62>
	{
		Capt5 = ICR3 + overflow_cnt_2 * 65536;
     9ca:	20 91 96 00 	lds	r18, 0x0096	; 0x800096 <__DATA_REGION_ORIGIN__+0x36>
     9ce:	30 91 97 00 	lds	r19, 0x0097	; 0x800097 <__DATA_REGION_ORIGIN__+0x37>
     9d2:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <overflow_cnt_2>
     9d6:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <overflow_cnt_2+0x1>
     9da:	a0 e0       	ldi	r26, 0x00	; 0
     9dc:	b0 e0       	ldi	r27, 0x00	; 0
     9de:	dc 01       	movw	r26, r24
     9e0:	99 27       	eor	r25, r25
     9e2:	88 27       	eor	r24, r24
     9e4:	82 0f       	add	r24, r18
     9e6:	93 1f       	adc	r25, r19
     9e8:	a1 1d       	adc	r26, r1
     9ea:	b1 1d       	adc	r27, r1
     9ec:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <Capt5>
     9f0:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <Capt5+0x1>
     9f4:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <Capt5+0x2>
     9f8:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <Capt5+0x3>
		TCCR3B&=~(1<<ICES3);	//switch to falling edge
     9fc:	e1 e9       	ldi	r30, 0x91	; 145
     9fe:	f0 e0       	ldi	r31, 0x00	; 0
     a00:	80 81       	ld	r24, Z
     a02:	8f 7b       	andi	r24, 0xBF	; 191
     a04:	80 83       	st	Z, r24
	}
	if(Flag_2 == 1)
     a06:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <Flag_2>
     a0a:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <Flag_2+0x1>
     a0e:	01 97       	sbiw	r24, 0x01	; 1
     a10:	f1 f4       	brne	.+60     	; 0xa4e <__vector_32+0xaa>
	{
		Capt6 = ICR3 + overflow_cnt_2 * 65536;
     a12:	20 91 96 00 	lds	r18, 0x0096	; 0x800096 <__DATA_REGION_ORIGIN__+0x36>
     a16:	30 91 97 00 	lds	r19, 0x0097	; 0x800097 <__DATA_REGION_ORIGIN__+0x37>
     a1a:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <overflow_cnt_2>
     a1e:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <overflow_cnt_2+0x1>
     a22:	a0 e0       	ldi	r26, 0x00	; 0
     a24:	b0 e0       	ldi	r27, 0x00	; 0
     a26:	dc 01       	movw	r26, r24
     a28:	99 27       	eor	r25, r25
     a2a:	88 27       	eor	r24, r24
     a2c:	82 0f       	add	r24, r18
     a2e:	93 1f       	adc	r25, r19
     a30:	a1 1d       	adc	r26, r1
     a32:	b1 1d       	adc	r27, r1
     a34:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <Capt6>
     a38:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <Capt6+0x1>
     a3c:	a0 93 58 01 	sts	0x0158, r26	; 0x800158 <Capt6+0x2>
     a40:	b0 93 59 01 	sts	0x0159, r27	; 0x800159 <Capt6+0x3>
		TCCR3B|=(1<<ICES3);		//switch back to rising edge
     a44:	e1 e9       	ldi	r30, 0x91	; 145
     a46:	f0 e0       	ldi	r31, 0x00	; 0
     a48:	80 81       	ld	r24, Z
     a4a:	80 64       	ori	r24, 0x40	; 64
     a4c:	80 83       	st	Z, r24
	}
	if(Flag_2 ==2)
     a4e:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <Flag_2>
     a52:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <Flag_2+0x1>
     a56:	02 97       	sbiw	r24, 0x02	; 2
     a58:	f1 f4       	brne	.+60     	; 0xa96 <__vector_32+0xf2>
	{
		Capt7 = ICR3 + overflow_cnt_2 * 65536;
     a5a:	20 91 96 00 	lds	r18, 0x0096	; 0x800096 <__DATA_REGION_ORIGIN__+0x36>
     a5e:	30 91 97 00 	lds	r19, 0x0097	; 0x800097 <__DATA_REGION_ORIGIN__+0x37>
     a62:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <overflow_cnt_2>
     a66:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <overflow_cnt_2+0x1>
     a6a:	a0 e0       	ldi	r26, 0x00	; 0
     a6c:	b0 e0       	ldi	r27, 0x00	; 0
     a6e:	dc 01       	movw	r26, r24
     a70:	99 27       	eor	r25, r25
     a72:	88 27       	eor	r24, r24
     a74:	82 0f       	add	r24, r18
     a76:	93 1f       	adc	r25, r19
     a78:	a1 1d       	adc	r26, r1
     a7a:	b1 1d       	adc	r27, r1
     a7c:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <Capt7>
     a80:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <Capt7+0x1>
     a84:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <Capt7+0x2>
     a88:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <Capt7+0x3>
		TCCR3B&=~(1<<ICES3);	//switch to falling edge
     a8c:	e1 e9       	ldi	r30, 0x91	; 145
     a8e:	f0 e0       	ldi	r31, 0x00	; 0
     a90:	80 81       	ld	r24, Z
     a92:	8f 7b       	andi	r24, 0xBF	; 191
     a94:	80 83       	st	Z, r24
	}
	if(Flag_2 == 3)
     a96:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <Flag_2>
     a9a:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <Flag_2+0x1>
     a9e:	03 97       	sbiw	r24, 0x03	; 3
     aa0:	f1 f4       	brne	.+60     	; 0xade <__vector_32+0x13a>
	{
		Capt8 = ICR3 + overflow_cnt_2 * 65536;
     aa2:	20 91 96 00 	lds	r18, 0x0096	; 0x800096 <__DATA_REGION_ORIGIN__+0x36>
     aa6:	30 91 97 00 	lds	r19, 0x0097	; 0x800097 <__DATA_REGION_ORIGIN__+0x37>
     aaa:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <overflow_cnt_2>
     aae:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <overflow_cnt_2+0x1>
     ab2:	a0 e0       	ldi	r26, 0x00	; 0
     ab4:	b0 e0       	ldi	r27, 0x00	; 0
     ab6:	dc 01       	movw	r26, r24
     ab8:	99 27       	eor	r25, r25
     aba:	88 27       	eor	r24, r24
     abc:	82 0f       	add	r24, r18
     abe:	93 1f       	adc	r25, r19
     ac0:	a1 1d       	adc	r26, r1
     ac2:	b1 1d       	adc	r27, r1
     ac4:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <Capt8>
     ac8:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <Capt8+0x1>
     acc:	a0 93 50 01 	sts	0x0150, r26	; 0x800150 <Capt8+0x2>
     ad0:	b0 93 51 01 	sts	0x0151, r27	; 0x800151 <Capt8+0x3>
		TIMSK3&=~((1<<ICIE3)|(1<<TOIE3));	//stop input capture and overflow interrupt.
     ad4:	e1 e7       	ldi	r30, 0x71	; 113
     ad6:	f0 e0       	ldi	r31, 0x00	; 0
     ad8:	80 81       	ld	r24, Z
     ada:	8e 7d       	andi	r24, 0xDE	; 222
     adc:	80 83       	st	Z, r24
	}
	Flag_2++;
     ade:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <Flag_2>
     ae2:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <Flag_2+0x1>
     ae6:	01 96       	adiw	r24, 0x01	; 1
     ae8:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <Flag_2+0x1>
     aec:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <Flag_2>
}
     af0:	ff 91       	pop	r31
     af2:	ef 91       	pop	r30
     af4:	bf 91       	pop	r27
     af6:	af 91       	pop	r26
     af8:	9f 91       	pop	r25
     afa:	8f 91       	pop	r24
     afc:	3f 91       	pop	r19
     afe:	2f 91       	pop	r18
     b00:	0f 90       	pop	r0
     b02:	0f be       	out	0x3f, r0	; 63
     b04:	0f 90       	pop	r0
     b06:	1f 90       	pop	r1
     b08:	18 95       	reti

00000b0a <__vector_35>:
ISR(TIMER3_OVF_vect)
{
     b0a:	1f 92       	push	r1
     b0c:	0f 92       	push	r0
     b0e:	0f b6       	in	r0, 0x3f	; 63
     b10:	0f 92       	push	r0
     b12:	11 24       	eor	r1, r1
     b14:	8f 93       	push	r24
     b16:	9f 93       	push	r25
	overflow_cnt_2++;
     b18:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <overflow_cnt_2>
     b1c:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <overflow_cnt_2+0x1>
     b20:	01 96       	adiw	r24, 0x01	; 1
     b22:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <overflow_cnt_2+0x1>
     b26:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <overflow_cnt_2>
}
     b2a:	9f 91       	pop	r25
     b2c:	8f 91       	pop	r24
     b2e:	0f 90       	pop	r0
     b30:	0f be       	out	0x3f, r0	; 63
     b32:	0f 90       	pop	r0
     b34:	1f 90       	pop	r1
     b36:	18 95       	reti

00000b38 <__vector_13>:
ISR(TIMER1_OVF_vect)
{
     b38:	1f 92       	push	r1
     b3a:	0f 92       	push	r0
     b3c:	0f b6       	in	r0, 0x3f	; 63
     b3e:	0f 92       	push	r0
     b40:	11 24       	eor	r1, r1
     b42:	8f 93       	push	r24
     b44:	9f 93       	push	r25
	overflow_cnt++;
     b46:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <overflow_cnt>
     b4a:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <overflow_cnt+0x1>
     b4e:	01 96       	adiw	r24, 0x01	; 1
     b50:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <overflow_cnt+0x1>
     b54:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <overflow_cnt>
     b58:	9f 91       	pop	r25
     b5a:	8f 91       	pop	r24
     b5c:	0f 90       	pop	r0
     b5e:	0f be       	out	0x3f, r0	; 63
     b60:	0f 90       	pop	r0
     b62:	1f 90       	pop	r1
     b64:	18 95       	reti

00000b66 <__subsf3>:
     b66:	50 58       	subi	r21, 0x80	; 128

00000b68 <__addsf3>:
     b68:	bb 27       	eor	r27, r27
     b6a:	aa 27       	eor	r26, r26
     b6c:	0e 94 cb 05 	call	0xb96	; 0xb96 <__addsf3x>
     b70:	0c 94 1c 07 	jmp	0xe38	; 0xe38 <__fp_round>
     b74:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__fp_pscA>
     b78:	38 f0       	brcs	.+14     	; 0xb88 <__addsf3+0x20>
     b7a:	0e 94 15 07 	call	0xe2a	; 0xe2a <__fp_pscB>
     b7e:	20 f0       	brcs	.+8      	; 0xb88 <__addsf3+0x20>
     b80:	39 f4       	brne	.+14     	; 0xb90 <__addsf3+0x28>
     b82:	9f 3f       	cpi	r25, 0xFF	; 255
     b84:	19 f4       	brne	.+6      	; 0xb8c <__addsf3+0x24>
     b86:	26 f4       	brtc	.+8      	; 0xb90 <__addsf3+0x28>
     b88:	0c 94 0b 07 	jmp	0xe16	; 0xe16 <__fp_nan>
     b8c:	0e f4       	brtc	.+2      	; 0xb90 <__addsf3+0x28>
     b8e:	e0 95       	com	r30
     b90:	e7 fb       	bst	r30, 7
     b92:	0c 94 05 07 	jmp	0xe0a	; 0xe0a <__fp_inf>

00000b96 <__addsf3x>:
     b96:	e9 2f       	mov	r30, r25
     b98:	0e 94 2d 07 	call	0xe5a	; 0xe5a <__fp_split3>
     b9c:	58 f3       	brcs	.-42     	; 0xb74 <__addsf3+0xc>
     b9e:	ba 17       	cp	r27, r26
     ba0:	62 07       	cpc	r22, r18
     ba2:	73 07       	cpc	r23, r19
     ba4:	84 07       	cpc	r24, r20
     ba6:	95 07       	cpc	r25, r21
     ba8:	20 f0       	brcs	.+8      	; 0xbb2 <__addsf3x+0x1c>
     baa:	79 f4       	brne	.+30     	; 0xbca <__addsf3x+0x34>
     bac:	a6 f5       	brtc	.+104    	; 0xc16 <__addsf3x+0x80>
     bae:	0c 94 4f 07 	jmp	0xe9e	; 0xe9e <__fp_zero>
     bb2:	0e f4       	brtc	.+2      	; 0xbb6 <__addsf3x+0x20>
     bb4:	e0 95       	com	r30
     bb6:	0b 2e       	mov	r0, r27
     bb8:	ba 2f       	mov	r27, r26
     bba:	a0 2d       	mov	r26, r0
     bbc:	0b 01       	movw	r0, r22
     bbe:	b9 01       	movw	r22, r18
     bc0:	90 01       	movw	r18, r0
     bc2:	0c 01       	movw	r0, r24
     bc4:	ca 01       	movw	r24, r20
     bc6:	a0 01       	movw	r20, r0
     bc8:	11 24       	eor	r1, r1
     bca:	ff 27       	eor	r31, r31
     bcc:	59 1b       	sub	r21, r25
     bce:	99 f0       	breq	.+38     	; 0xbf6 <__addsf3x+0x60>
     bd0:	59 3f       	cpi	r21, 0xF9	; 249
     bd2:	50 f4       	brcc	.+20     	; 0xbe8 <__addsf3x+0x52>
     bd4:	50 3e       	cpi	r21, 0xE0	; 224
     bd6:	68 f1       	brcs	.+90     	; 0xc32 <__addsf3x+0x9c>
     bd8:	1a 16       	cp	r1, r26
     bda:	f0 40       	sbci	r31, 0x00	; 0
     bdc:	a2 2f       	mov	r26, r18
     bde:	23 2f       	mov	r18, r19
     be0:	34 2f       	mov	r19, r20
     be2:	44 27       	eor	r20, r20
     be4:	58 5f       	subi	r21, 0xF8	; 248
     be6:	f3 cf       	rjmp	.-26     	; 0xbce <__addsf3x+0x38>
     be8:	46 95       	lsr	r20
     bea:	37 95       	ror	r19
     bec:	27 95       	ror	r18
     bee:	a7 95       	ror	r26
     bf0:	f0 40       	sbci	r31, 0x00	; 0
     bf2:	53 95       	inc	r21
     bf4:	c9 f7       	brne	.-14     	; 0xbe8 <__addsf3x+0x52>
     bf6:	7e f4       	brtc	.+30     	; 0xc16 <__addsf3x+0x80>
     bf8:	1f 16       	cp	r1, r31
     bfa:	ba 0b       	sbc	r27, r26
     bfc:	62 0b       	sbc	r22, r18
     bfe:	73 0b       	sbc	r23, r19
     c00:	84 0b       	sbc	r24, r20
     c02:	ba f0       	brmi	.+46     	; 0xc32 <__addsf3x+0x9c>
     c04:	91 50       	subi	r25, 0x01	; 1
     c06:	a1 f0       	breq	.+40     	; 0xc30 <__addsf3x+0x9a>
     c08:	ff 0f       	add	r31, r31
     c0a:	bb 1f       	adc	r27, r27
     c0c:	66 1f       	adc	r22, r22
     c0e:	77 1f       	adc	r23, r23
     c10:	88 1f       	adc	r24, r24
     c12:	c2 f7       	brpl	.-16     	; 0xc04 <__addsf3x+0x6e>
     c14:	0e c0       	rjmp	.+28     	; 0xc32 <__addsf3x+0x9c>
     c16:	ba 0f       	add	r27, r26
     c18:	62 1f       	adc	r22, r18
     c1a:	73 1f       	adc	r23, r19
     c1c:	84 1f       	adc	r24, r20
     c1e:	48 f4       	brcc	.+18     	; 0xc32 <__addsf3x+0x9c>
     c20:	87 95       	ror	r24
     c22:	77 95       	ror	r23
     c24:	67 95       	ror	r22
     c26:	b7 95       	ror	r27
     c28:	f7 95       	ror	r31
     c2a:	9e 3f       	cpi	r25, 0xFE	; 254
     c2c:	08 f0       	brcs	.+2      	; 0xc30 <__addsf3x+0x9a>
     c2e:	b0 cf       	rjmp	.-160    	; 0xb90 <__addsf3+0x28>
     c30:	93 95       	inc	r25
     c32:	88 0f       	add	r24, r24
     c34:	08 f0       	brcs	.+2      	; 0xc38 <__addsf3x+0xa2>
     c36:	99 27       	eor	r25, r25
     c38:	ee 0f       	add	r30, r30
     c3a:	97 95       	ror	r25
     c3c:	87 95       	ror	r24
     c3e:	08 95       	ret

00000c40 <__divsf3>:
     c40:	0e 94 34 06 	call	0xc68	; 0xc68 <__divsf3x>
     c44:	0c 94 1c 07 	jmp	0xe38	; 0xe38 <__fp_round>
     c48:	0e 94 15 07 	call	0xe2a	; 0xe2a <__fp_pscB>
     c4c:	58 f0       	brcs	.+22     	; 0xc64 <__divsf3+0x24>
     c4e:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__fp_pscA>
     c52:	40 f0       	brcs	.+16     	; 0xc64 <__divsf3+0x24>
     c54:	29 f4       	brne	.+10     	; 0xc60 <__divsf3+0x20>
     c56:	5f 3f       	cpi	r21, 0xFF	; 255
     c58:	29 f0       	breq	.+10     	; 0xc64 <__divsf3+0x24>
     c5a:	0c 94 05 07 	jmp	0xe0a	; 0xe0a <__fp_inf>
     c5e:	51 11       	cpse	r21, r1
     c60:	0c 94 50 07 	jmp	0xea0	; 0xea0 <__fp_szero>
     c64:	0c 94 0b 07 	jmp	0xe16	; 0xe16 <__fp_nan>

00000c68 <__divsf3x>:
     c68:	0e 94 2d 07 	call	0xe5a	; 0xe5a <__fp_split3>
     c6c:	68 f3       	brcs	.-38     	; 0xc48 <__divsf3+0x8>

00000c6e <__divsf3_pse>:
     c6e:	99 23       	and	r25, r25
     c70:	b1 f3       	breq	.-20     	; 0xc5e <__divsf3+0x1e>
     c72:	55 23       	and	r21, r21
     c74:	91 f3       	breq	.-28     	; 0xc5a <__divsf3+0x1a>
     c76:	95 1b       	sub	r25, r21
     c78:	55 0b       	sbc	r21, r21
     c7a:	bb 27       	eor	r27, r27
     c7c:	aa 27       	eor	r26, r26
     c7e:	62 17       	cp	r22, r18
     c80:	73 07       	cpc	r23, r19
     c82:	84 07       	cpc	r24, r20
     c84:	38 f0       	brcs	.+14     	; 0xc94 <__divsf3_pse+0x26>
     c86:	9f 5f       	subi	r25, 0xFF	; 255
     c88:	5f 4f       	sbci	r21, 0xFF	; 255
     c8a:	22 0f       	add	r18, r18
     c8c:	33 1f       	adc	r19, r19
     c8e:	44 1f       	adc	r20, r20
     c90:	aa 1f       	adc	r26, r26
     c92:	a9 f3       	breq	.-22     	; 0xc7e <__divsf3_pse+0x10>
     c94:	35 d0       	rcall	.+106    	; 0xd00 <__divsf3_pse+0x92>
     c96:	0e 2e       	mov	r0, r30
     c98:	3a f0       	brmi	.+14     	; 0xca8 <__divsf3_pse+0x3a>
     c9a:	e0 e8       	ldi	r30, 0x80	; 128
     c9c:	32 d0       	rcall	.+100    	; 0xd02 <__divsf3_pse+0x94>
     c9e:	91 50       	subi	r25, 0x01	; 1
     ca0:	50 40       	sbci	r21, 0x00	; 0
     ca2:	e6 95       	lsr	r30
     ca4:	00 1c       	adc	r0, r0
     ca6:	ca f7       	brpl	.-14     	; 0xc9a <__divsf3_pse+0x2c>
     ca8:	2b d0       	rcall	.+86     	; 0xd00 <__divsf3_pse+0x92>
     caa:	fe 2f       	mov	r31, r30
     cac:	29 d0       	rcall	.+82     	; 0xd00 <__divsf3_pse+0x92>
     cae:	66 0f       	add	r22, r22
     cb0:	77 1f       	adc	r23, r23
     cb2:	88 1f       	adc	r24, r24
     cb4:	bb 1f       	adc	r27, r27
     cb6:	26 17       	cp	r18, r22
     cb8:	37 07       	cpc	r19, r23
     cba:	48 07       	cpc	r20, r24
     cbc:	ab 07       	cpc	r26, r27
     cbe:	b0 e8       	ldi	r27, 0x80	; 128
     cc0:	09 f0       	breq	.+2      	; 0xcc4 <__divsf3_pse+0x56>
     cc2:	bb 0b       	sbc	r27, r27
     cc4:	80 2d       	mov	r24, r0
     cc6:	bf 01       	movw	r22, r30
     cc8:	ff 27       	eor	r31, r31
     cca:	93 58       	subi	r25, 0x83	; 131
     ccc:	5f 4f       	sbci	r21, 0xFF	; 255
     cce:	3a f0       	brmi	.+14     	; 0xcde <__divsf3_pse+0x70>
     cd0:	9e 3f       	cpi	r25, 0xFE	; 254
     cd2:	51 05       	cpc	r21, r1
     cd4:	78 f0       	brcs	.+30     	; 0xcf4 <__divsf3_pse+0x86>
     cd6:	0c 94 05 07 	jmp	0xe0a	; 0xe0a <__fp_inf>
     cda:	0c 94 50 07 	jmp	0xea0	; 0xea0 <__fp_szero>
     cde:	5f 3f       	cpi	r21, 0xFF	; 255
     ce0:	e4 f3       	brlt	.-8      	; 0xcda <__divsf3_pse+0x6c>
     ce2:	98 3e       	cpi	r25, 0xE8	; 232
     ce4:	d4 f3       	brlt	.-12     	; 0xcda <__divsf3_pse+0x6c>
     ce6:	86 95       	lsr	r24
     ce8:	77 95       	ror	r23
     cea:	67 95       	ror	r22
     cec:	b7 95       	ror	r27
     cee:	f7 95       	ror	r31
     cf0:	9f 5f       	subi	r25, 0xFF	; 255
     cf2:	c9 f7       	brne	.-14     	; 0xce6 <__divsf3_pse+0x78>
     cf4:	88 0f       	add	r24, r24
     cf6:	91 1d       	adc	r25, r1
     cf8:	96 95       	lsr	r25
     cfa:	87 95       	ror	r24
     cfc:	97 f9       	bld	r25, 7
     cfe:	08 95       	ret
     d00:	e1 e0       	ldi	r30, 0x01	; 1
     d02:	66 0f       	add	r22, r22
     d04:	77 1f       	adc	r23, r23
     d06:	88 1f       	adc	r24, r24
     d08:	bb 1f       	adc	r27, r27
     d0a:	62 17       	cp	r22, r18
     d0c:	73 07       	cpc	r23, r19
     d0e:	84 07       	cpc	r24, r20
     d10:	ba 07       	cpc	r27, r26
     d12:	20 f0       	brcs	.+8      	; 0xd1c <__divsf3_pse+0xae>
     d14:	62 1b       	sub	r22, r18
     d16:	73 0b       	sbc	r23, r19
     d18:	84 0b       	sbc	r24, r20
     d1a:	ba 0b       	sbc	r27, r26
     d1c:	ee 1f       	adc	r30, r30
     d1e:	88 f7       	brcc	.-30     	; 0xd02 <__divsf3_pse+0x94>
     d20:	e0 95       	com	r30
     d22:	08 95       	ret

00000d24 <__fixsfsi>:
     d24:	0e 94 99 06 	call	0xd32	; 0xd32 <__fixunssfsi>
     d28:	68 94       	set
     d2a:	b1 11       	cpse	r27, r1
     d2c:	0c 94 50 07 	jmp	0xea0	; 0xea0 <__fp_szero>
     d30:	08 95       	ret

00000d32 <__fixunssfsi>:
     d32:	0e 94 35 07 	call	0xe6a	; 0xe6a <__fp_splitA>
     d36:	88 f0       	brcs	.+34     	; 0xd5a <__fixunssfsi+0x28>
     d38:	9f 57       	subi	r25, 0x7F	; 127
     d3a:	98 f0       	brcs	.+38     	; 0xd62 <__fixunssfsi+0x30>
     d3c:	b9 2f       	mov	r27, r25
     d3e:	99 27       	eor	r25, r25
     d40:	b7 51       	subi	r27, 0x17	; 23
     d42:	b0 f0       	brcs	.+44     	; 0xd70 <__fixunssfsi+0x3e>
     d44:	e1 f0       	breq	.+56     	; 0xd7e <__fixunssfsi+0x4c>
     d46:	66 0f       	add	r22, r22
     d48:	77 1f       	adc	r23, r23
     d4a:	88 1f       	adc	r24, r24
     d4c:	99 1f       	adc	r25, r25
     d4e:	1a f0       	brmi	.+6      	; 0xd56 <__fixunssfsi+0x24>
     d50:	ba 95       	dec	r27
     d52:	c9 f7       	brne	.-14     	; 0xd46 <__fixunssfsi+0x14>
     d54:	14 c0       	rjmp	.+40     	; 0xd7e <__fixunssfsi+0x4c>
     d56:	b1 30       	cpi	r27, 0x01	; 1
     d58:	91 f0       	breq	.+36     	; 0xd7e <__fixunssfsi+0x4c>
     d5a:	0e 94 4f 07 	call	0xe9e	; 0xe9e <__fp_zero>
     d5e:	b1 e0       	ldi	r27, 0x01	; 1
     d60:	08 95       	ret
     d62:	0c 94 4f 07 	jmp	0xe9e	; 0xe9e <__fp_zero>
     d66:	67 2f       	mov	r22, r23
     d68:	78 2f       	mov	r23, r24
     d6a:	88 27       	eor	r24, r24
     d6c:	b8 5f       	subi	r27, 0xF8	; 248
     d6e:	39 f0       	breq	.+14     	; 0xd7e <__fixunssfsi+0x4c>
     d70:	b9 3f       	cpi	r27, 0xF9	; 249
     d72:	cc f3       	brlt	.-14     	; 0xd66 <__fixunssfsi+0x34>
     d74:	86 95       	lsr	r24
     d76:	77 95       	ror	r23
     d78:	67 95       	ror	r22
     d7a:	b3 95       	inc	r27
     d7c:	d9 f7       	brne	.-10     	; 0xd74 <__fixunssfsi+0x42>
     d7e:	3e f4       	brtc	.+14     	; 0xd8e <__fixunssfsi+0x5c>
     d80:	90 95       	com	r25
     d82:	80 95       	com	r24
     d84:	70 95       	com	r23
     d86:	61 95       	neg	r22
     d88:	7f 4f       	sbci	r23, 0xFF	; 255
     d8a:	8f 4f       	sbci	r24, 0xFF	; 255
     d8c:	9f 4f       	sbci	r25, 0xFF	; 255
     d8e:	08 95       	ret

00000d90 <__floatunsisf>:
     d90:	e8 94       	clt
     d92:	09 c0       	rjmp	.+18     	; 0xda6 <__floatsisf+0x12>

00000d94 <__floatsisf>:
     d94:	97 fb       	bst	r25, 7
     d96:	3e f4       	brtc	.+14     	; 0xda6 <__floatsisf+0x12>
     d98:	90 95       	com	r25
     d9a:	80 95       	com	r24
     d9c:	70 95       	com	r23
     d9e:	61 95       	neg	r22
     da0:	7f 4f       	sbci	r23, 0xFF	; 255
     da2:	8f 4f       	sbci	r24, 0xFF	; 255
     da4:	9f 4f       	sbci	r25, 0xFF	; 255
     da6:	99 23       	and	r25, r25
     da8:	a9 f0       	breq	.+42     	; 0xdd4 <__floatsisf+0x40>
     daa:	f9 2f       	mov	r31, r25
     dac:	96 e9       	ldi	r25, 0x96	; 150
     dae:	bb 27       	eor	r27, r27
     db0:	93 95       	inc	r25
     db2:	f6 95       	lsr	r31
     db4:	87 95       	ror	r24
     db6:	77 95       	ror	r23
     db8:	67 95       	ror	r22
     dba:	b7 95       	ror	r27
     dbc:	f1 11       	cpse	r31, r1
     dbe:	f8 cf       	rjmp	.-16     	; 0xdb0 <__floatsisf+0x1c>
     dc0:	fa f4       	brpl	.+62     	; 0xe00 <__floatsisf+0x6c>
     dc2:	bb 0f       	add	r27, r27
     dc4:	11 f4       	brne	.+4      	; 0xdca <__floatsisf+0x36>
     dc6:	60 ff       	sbrs	r22, 0
     dc8:	1b c0       	rjmp	.+54     	; 0xe00 <__floatsisf+0x6c>
     dca:	6f 5f       	subi	r22, 0xFF	; 255
     dcc:	7f 4f       	sbci	r23, 0xFF	; 255
     dce:	8f 4f       	sbci	r24, 0xFF	; 255
     dd0:	9f 4f       	sbci	r25, 0xFF	; 255
     dd2:	16 c0       	rjmp	.+44     	; 0xe00 <__floatsisf+0x6c>
     dd4:	88 23       	and	r24, r24
     dd6:	11 f0       	breq	.+4      	; 0xddc <__floatsisf+0x48>
     dd8:	96 e9       	ldi	r25, 0x96	; 150
     dda:	11 c0       	rjmp	.+34     	; 0xdfe <__floatsisf+0x6a>
     ddc:	77 23       	and	r23, r23
     dde:	21 f0       	breq	.+8      	; 0xde8 <__floatsisf+0x54>
     de0:	9e e8       	ldi	r25, 0x8E	; 142
     de2:	87 2f       	mov	r24, r23
     de4:	76 2f       	mov	r23, r22
     de6:	05 c0       	rjmp	.+10     	; 0xdf2 <__floatsisf+0x5e>
     de8:	66 23       	and	r22, r22
     dea:	71 f0       	breq	.+28     	; 0xe08 <__floatsisf+0x74>
     dec:	96 e8       	ldi	r25, 0x86	; 134
     dee:	86 2f       	mov	r24, r22
     df0:	70 e0       	ldi	r23, 0x00	; 0
     df2:	60 e0       	ldi	r22, 0x00	; 0
     df4:	2a f0       	brmi	.+10     	; 0xe00 <__floatsisf+0x6c>
     df6:	9a 95       	dec	r25
     df8:	66 0f       	add	r22, r22
     dfa:	77 1f       	adc	r23, r23
     dfc:	88 1f       	adc	r24, r24
     dfe:	da f7       	brpl	.-10     	; 0xdf6 <__floatsisf+0x62>
     e00:	88 0f       	add	r24, r24
     e02:	96 95       	lsr	r25
     e04:	87 95       	ror	r24
     e06:	97 f9       	bld	r25, 7
     e08:	08 95       	ret

00000e0a <__fp_inf>:
     e0a:	97 f9       	bld	r25, 7
     e0c:	9f 67       	ori	r25, 0x7F	; 127
     e0e:	80 e8       	ldi	r24, 0x80	; 128
     e10:	70 e0       	ldi	r23, 0x00	; 0
     e12:	60 e0       	ldi	r22, 0x00	; 0
     e14:	08 95       	ret

00000e16 <__fp_nan>:
     e16:	9f ef       	ldi	r25, 0xFF	; 255
     e18:	80 ec       	ldi	r24, 0xC0	; 192
     e1a:	08 95       	ret

00000e1c <__fp_pscA>:
     e1c:	00 24       	eor	r0, r0
     e1e:	0a 94       	dec	r0
     e20:	16 16       	cp	r1, r22
     e22:	17 06       	cpc	r1, r23
     e24:	18 06       	cpc	r1, r24
     e26:	09 06       	cpc	r0, r25
     e28:	08 95       	ret

00000e2a <__fp_pscB>:
     e2a:	00 24       	eor	r0, r0
     e2c:	0a 94       	dec	r0
     e2e:	12 16       	cp	r1, r18
     e30:	13 06       	cpc	r1, r19
     e32:	14 06       	cpc	r1, r20
     e34:	05 06       	cpc	r0, r21
     e36:	08 95       	ret

00000e38 <__fp_round>:
     e38:	09 2e       	mov	r0, r25
     e3a:	03 94       	inc	r0
     e3c:	00 0c       	add	r0, r0
     e3e:	11 f4       	brne	.+4      	; 0xe44 <__fp_round+0xc>
     e40:	88 23       	and	r24, r24
     e42:	52 f0       	brmi	.+20     	; 0xe58 <__fp_round+0x20>
     e44:	bb 0f       	add	r27, r27
     e46:	40 f4       	brcc	.+16     	; 0xe58 <__fp_round+0x20>
     e48:	bf 2b       	or	r27, r31
     e4a:	11 f4       	brne	.+4      	; 0xe50 <__fp_round+0x18>
     e4c:	60 ff       	sbrs	r22, 0
     e4e:	04 c0       	rjmp	.+8      	; 0xe58 <__fp_round+0x20>
     e50:	6f 5f       	subi	r22, 0xFF	; 255
     e52:	7f 4f       	sbci	r23, 0xFF	; 255
     e54:	8f 4f       	sbci	r24, 0xFF	; 255
     e56:	9f 4f       	sbci	r25, 0xFF	; 255
     e58:	08 95       	ret

00000e5a <__fp_split3>:
     e5a:	57 fd       	sbrc	r21, 7
     e5c:	90 58       	subi	r25, 0x80	; 128
     e5e:	44 0f       	add	r20, r20
     e60:	55 1f       	adc	r21, r21
     e62:	59 f0       	breq	.+22     	; 0xe7a <__fp_splitA+0x10>
     e64:	5f 3f       	cpi	r21, 0xFF	; 255
     e66:	71 f0       	breq	.+28     	; 0xe84 <__fp_splitA+0x1a>
     e68:	47 95       	ror	r20

00000e6a <__fp_splitA>:
     e6a:	88 0f       	add	r24, r24
     e6c:	97 fb       	bst	r25, 7
     e6e:	99 1f       	adc	r25, r25
     e70:	61 f0       	breq	.+24     	; 0xe8a <__fp_splitA+0x20>
     e72:	9f 3f       	cpi	r25, 0xFF	; 255
     e74:	79 f0       	breq	.+30     	; 0xe94 <__fp_splitA+0x2a>
     e76:	87 95       	ror	r24
     e78:	08 95       	ret
     e7a:	12 16       	cp	r1, r18
     e7c:	13 06       	cpc	r1, r19
     e7e:	14 06       	cpc	r1, r20
     e80:	55 1f       	adc	r21, r21
     e82:	f2 cf       	rjmp	.-28     	; 0xe68 <__fp_split3+0xe>
     e84:	46 95       	lsr	r20
     e86:	f1 df       	rcall	.-30     	; 0xe6a <__fp_splitA>
     e88:	08 c0       	rjmp	.+16     	; 0xe9a <__fp_splitA+0x30>
     e8a:	16 16       	cp	r1, r22
     e8c:	17 06       	cpc	r1, r23
     e8e:	18 06       	cpc	r1, r24
     e90:	99 1f       	adc	r25, r25
     e92:	f1 cf       	rjmp	.-30     	; 0xe76 <__fp_splitA+0xc>
     e94:	86 95       	lsr	r24
     e96:	71 05       	cpc	r23, r1
     e98:	61 05       	cpc	r22, r1
     e9a:	08 94       	sec
     e9c:	08 95       	ret

00000e9e <__fp_zero>:
     e9e:	e8 94       	clt

00000ea0 <__fp_szero>:
     ea0:	bb 27       	eor	r27, r27
     ea2:	66 27       	eor	r22, r22
     ea4:	77 27       	eor	r23, r23
     ea6:	cb 01       	movw	r24, r22
     ea8:	97 f9       	bld	r25, 7
     eaa:	08 95       	ret

00000eac <__mulsf3>:
     eac:	0e 94 69 07 	call	0xed2	; 0xed2 <__mulsf3x>
     eb0:	0c 94 1c 07 	jmp	0xe38	; 0xe38 <__fp_round>
     eb4:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__fp_pscA>
     eb8:	38 f0       	brcs	.+14     	; 0xec8 <__mulsf3+0x1c>
     eba:	0e 94 15 07 	call	0xe2a	; 0xe2a <__fp_pscB>
     ebe:	20 f0       	brcs	.+8      	; 0xec8 <__mulsf3+0x1c>
     ec0:	95 23       	and	r25, r21
     ec2:	11 f0       	breq	.+4      	; 0xec8 <__mulsf3+0x1c>
     ec4:	0c 94 05 07 	jmp	0xe0a	; 0xe0a <__fp_inf>
     ec8:	0c 94 0b 07 	jmp	0xe16	; 0xe16 <__fp_nan>
     ecc:	11 24       	eor	r1, r1
     ece:	0c 94 50 07 	jmp	0xea0	; 0xea0 <__fp_szero>

00000ed2 <__mulsf3x>:
     ed2:	0e 94 2d 07 	call	0xe5a	; 0xe5a <__fp_split3>
     ed6:	70 f3       	brcs	.-36     	; 0xeb4 <__mulsf3+0x8>

00000ed8 <__mulsf3_pse>:
     ed8:	95 9f       	mul	r25, r21
     eda:	c1 f3       	breq	.-16     	; 0xecc <__mulsf3+0x20>
     edc:	95 0f       	add	r25, r21
     ede:	50 e0       	ldi	r21, 0x00	; 0
     ee0:	55 1f       	adc	r21, r21
     ee2:	62 9f       	mul	r22, r18
     ee4:	f0 01       	movw	r30, r0
     ee6:	72 9f       	mul	r23, r18
     ee8:	bb 27       	eor	r27, r27
     eea:	f0 0d       	add	r31, r0
     eec:	b1 1d       	adc	r27, r1
     eee:	63 9f       	mul	r22, r19
     ef0:	aa 27       	eor	r26, r26
     ef2:	f0 0d       	add	r31, r0
     ef4:	b1 1d       	adc	r27, r1
     ef6:	aa 1f       	adc	r26, r26
     ef8:	64 9f       	mul	r22, r20
     efa:	66 27       	eor	r22, r22
     efc:	b0 0d       	add	r27, r0
     efe:	a1 1d       	adc	r26, r1
     f00:	66 1f       	adc	r22, r22
     f02:	82 9f       	mul	r24, r18
     f04:	22 27       	eor	r18, r18
     f06:	b0 0d       	add	r27, r0
     f08:	a1 1d       	adc	r26, r1
     f0a:	62 1f       	adc	r22, r18
     f0c:	73 9f       	mul	r23, r19
     f0e:	b0 0d       	add	r27, r0
     f10:	a1 1d       	adc	r26, r1
     f12:	62 1f       	adc	r22, r18
     f14:	83 9f       	mul	r24, r19
     f16:	a0 0d       	add	r26, r0
     f18:	61 1d       	adc	r22, r1
     f1a:	22 1f       	adc	r18, r18
     f1c:	74 9f       	mul	r23, r20
     f1e:	33 27       	eor	r19, r19
     f20:	a0 0d       	add	r26, r0
     f22:	61 1d       	adc	r22, r1
     f24:	23 1f       	adc	r18, r19
     f26:	84 9f       	mul	r24, r20
     f28:	60 0d       	add	r22, r0
     f2a:	21 1d       	adc	r18, r1
     f2c:	82 2f       	mov	r24, r18
     f2e:	76 2f       	mov	r23, r22
     f30:	6a 2f       	mov	r22, r26
     f32:	11 24       	eor	r1, r1
     f34:	9f 57       	subi	r25, 0x7F	; 127
     f36:	50 40       	sbci	r21, 0x00	; 0
     f38:	9a f0       	brmi	.+38     	; 0xf60 <__mulsf3_pse+0x88>
     f3a:	f1 f0       	breq	.+60     	; 0xf78 <__mulsf3_pse+0xa0>
     f3c:	88 23       	and	r24, r24
     f3e:	4a f0       	brmi	.+18     	; 0xf52 <__mulsf3_pse+0x7a>
     f40:	ee 0f       	add	r30, r30
     f42:	ff 1f       	adc	r31, r31
     f44:	bb 1f       	adc	r27, r27
     f46:	66 1f       	adc	r22, r22
     f48:	77 1f       	adc	r23, r23
     f4a:	88 1f       	adc	r24, r24
     f4c:	91 50       	subi	r25, 0x01	; 1
     f4e:	50 40       	sbci	r21, 0x00	; 0
     f50:	a9 f7       	brne	.-22     	; 0xf3c <__mulsf3_pse+0x64>
     f52:	9e 3f       	cpi	r25, 0xFE	; 254
     f54:	51 05       	cpc	r21, r1
     f56:	80 f0       	brcs	.+32     	; 0xf78 <__mulsf3_pse+0xa0>
     f58:	0c 94 05 07 	jmp	0xe0a	; 0xe0a <__fp_inf>
     f5c:	0c 94 50 07 	jmp	0xea0	; 0xea0 <__fp_szero>
     f60:	5f 3f       	cpi	r21, 0xFF	; 255
     f62:	e4 f3       	brlt	.-8      	; 0xf5c <__mulsf3_pse+0x84>
     f64:	98 3e       	cpi	r25, 0xE8	; 232
     f66:	d4 f3       	brlt	.-12     	; 0xf5c <__mulsf3_pse+0x84>
     f68:	86 95       	lsr	r24
     f6a:	77 95       	ror	r23
     f6c:	67 95       	ror	r22
     f6e:	b7 95       	ror	r27
     f70:	f7 95       	ror	r31
     f72:	e7 95       	ror	r30
     f74:	9f 5f       	subi	r25, 0xFF	; 255
     f76:	c1 f7       	brne	.-16     	; 0xf68 <__mulsf3_pse+0x90>
     f78:	fe 2b       	or	r31, r30
     f7a:	88 0f       	add	r24, r24
     f7c:	91 1d       	adc	r25, r1
     f7e:	96 95       	lsr	r25
     f80:	87 95       	ror	r24
     f82:	97 f9       	bld	r25, 7
     f84:	08 95       	ret

00000f86 <vfprintf>:
     f86:	a0 e1       	ldi	r26, 0x10	; 16
     f88:	b0 e0       	ldi	r27, 0x00	; 0
     f8a:	e9 ec       	ldi	r30, 0xC9	; 201
     f8c:	f7 e0       	ldi	r31, 0x07	; 7
     f8e:	0c 94 40 0b 	jmp	0x1680	; 0x1680 <__prologue_saves__>
     f92:	7c 01       	movw	r14, r24
     f94:	1b 01       	movw	r2, r22
     f96:	6a 01       	movw	r12, r20
     f98:	fc 01       	movw	r30, r24
     f9a:	17 82       	std	Z+7, r1	; 0x07
     f9c:	16 82       	std	Z+6, r1	; 0x06
     f9e:	83 81       	ldd	r24, Z+3	; 0x03
     fa0:	81 ff       	sbrs	r24, 1
     fa2:	44 c3       	rjmp	.+1672   	; 0x162c <vfprintf+0x6a6>
     fa4:	9e 01       	movw	r18, r28
     fa6:	2f 5f       	subi	r18, 0xFF	; 255
     fa8:	3f 4f       	sbci	r19, 0xFF	; 255
     faa:	39 01       	movw	r6, r18
     fac:	f7 01       	movw	r30, r14
     fae:	93 81       	ldd	r25, Z+3	; 0x03
     fb0:	f1 01       	movw	r30, r2
     fb2:	93 fd       	sbrc	r25, 3
     fb4:	85 91       	lpm	r24, Z+
     fb6:	93 ff       	sbrs	r25, 3
     fb8:	81 91       	ld	r24, Z+
     fba:	1f 01       	movw	r2, r30
     fbc:	88 23       	and	r24, r24
     fbe:	09 f4       	brne	.+2      	; 0xfc2 <vfprintf+0x3c>
     fc0:	31 c3       	rjmp	.+1634   	; 0x1624 <vfprintf+0x69e>
     fc2:	85 32       	cpi	r24, 0x25	; 37
     fc4:	39 f4       	brne	.+14     	; 0xfd4 <vfprintf+0x4e>
     fc6:	93 fd       	sbrc	r25, 3
     fc8:	85 91       	lpm	r24, Z+
     fca:	93 ff       	sbrs	r25, 3
     fcc:	81 91       	ld	r24, Z+
     fce:	1f 01       	movw	r2, r30
     fd0:	85 32       	cpi	r24, 0x25	; 37
     fd2:	39 f4       	brne	.+14     	; 0xfe2 <vfprintf+0x5c>
     fd4:	b7 01       	movw	r22, r14
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
     fdc:	56 01       	movw	r10, r12
     fde:	65 01       	movw	r12, r10
     fe0:	e5 cf       	rjmp	.-54     	; 0xfac <vfprintf+0x26>
     fe2:	10 e0       	ldi	r17, 0x00	; 0
     fe4:	51 2c       	mov	r5, r1
     fe6:	91 2c       	mov	r9, r1
     fe8:	ff e1       	ldi	r31, 0x1F	; 31
     fea:	f9 15       	cp	r31, r9
     fec:	d8 f0       	brcs	.+54     	; 0x1024 <vfprintf+0x9e>
     fee:	8b 32       	cpi	r24, 0x2B	; 43
     ff0:	79 f0       	breq	.+30     	; 0x1010 <vfprintf+0x8a>
     ff2:	38 f4       	brcc	.+14     	; 0x1002 <vfprintf+0x7c>
     ff4:	80 32       	cpi	r24, 0x20	; 32
     ff6:	79 f0       	breq	.+30     	; 0x1016 <vfprintf+0x90>
     ff8:	83 32       	cpi	r24, 0x23	; 35
     ffa:	a1 f4       	brne	.+40     	; 0x1024 <vfprintf+0x9e>
     ffc:	f9 2d       	mov	r31, r9
     ffe:	f0 61       	ori	r31, 0x10	; 16
    1000:	2e c0       	rjmp	.+92     	; 0x105e <vfprintf+0xd8>
    1002:	8d 32       	cpi	r24, 0x2D	; 45
    1004:	61 f0       	breq	.+24     	; 0x101e <vfprintf+0x98>
    1006:	80 33       	cpi	r24, 0x30	; 48
    1008:	69 f4       	brne	.+26     	; 0x1024 <vfprintf+0x9e>
    100a:	29 2d       	mov	r18, r9
    100c:	21 60       	ori	r18, 0x01	; 1
    100e:	2d c0       	rjmp	.+90     	; 0x106a <vfprintf+0xe4>
    1010:	39 2d       	mov	r19, r9
    1012:	32 60       	ori	r19, 0x02	; 2
    1014:	93 2e       	mov	r9, r19
    1016:	89 2d       	mov	r24, r9
    1018:	84 60       	ori	r24, 0x04	; 4
    101a:	98 2e       	mov	r9, r24
    101c:	2a c0       	rjmp	.+84     	; 0x1072 <vfprintf+0xec>
    101e:	e9 2d       	mov	r30, r9
    1020:	e8 60       	ori	r30, 0x08	; 8
    1022:	15 c0       	rjmp	.+42     	; 0x104e <vfprintf+0xc8>
    1024:	97 fc       	sbrc	r9, 7
    1026:	2d c0       	rjmp	.+90     	; 0x1082 <vfprintf+0xfc>
    1028:	20 ed       	ldi	r18, 0xD0	; 208
    102a:	28 0f       	add	r18, r24
    102c:	2a 30       	cpi	r18, 0x0A	; 10
    102e:	88 f4       	brcc	.+34     	; 0x1052 <vfprintf+0xcc>
    1030:	96 fe       	sbrs	r9, 6
    1032:	06 c0       	rjmp	.+12     	; 0x1040 <vfprintf+0xba>
    1034:	3a e0       	ldi	r19, 0x0A	; 10
    1036:	13 9f       	mul	r17, r19
    1038:	20 0d       	add	r18, r0
    103a:	11 24       	eor	r1, r1
    103c:	12 2f       	mov	r17, r18
    103e:	19 c0       	rjmp	.+50     	; 0x1072 <vfprintf+0xec>
    1040:	8a e0       	ldi	r24, 0x0A	; 10
    1042:	58 9e       	mul	r5, r24
    1044:	20 0d       	add	r18, r0
    1046:	11 24       	eor	r1, r1
    1048:	52 2e       	mov	r5, r18
    104a:	e9 2d       	mov	r30, r9
    104c:	e0 62       	ori	r30, 0x20	; 32
    104e:	9e 2e       	mov	r9, r30
    1050:	10 c0       	rjmp	.+32     	; 0x1072 <vfprintf+0xec>
    1052:	8e 32       	cpi	r24, 0x2E	; 46
    1054:	31 f4       	brne	.+12     	; 0x1062 <vfprintf+0xdc>
    1056:	96 fc       	sbrc	r9, 6
    1058:	e5 c2       	rjmp	.+1482   	; 0x1624 <vfprintf+0x69e>
    105a:	f9 2d       	mov	r31, r9
    105c:	f0 64       	ori	r31, 0x40	; 64
    105e:	9f 2e       	mov	r9, r31
    1060:	08 c0       	rjmp	.+16     	; 0x1072 <vfprintf+0xec>
    1062:	8c 36       	cpi	r24, 0x6C	; 108
    1064:	21 f4       	brne	.+8      	; 0x106e <vfprintf+0xe8>
    1066:	29 2d       	mov	r18, r9
    1068:	20 68       	ori	r18, 0x80	; 128
    106a:	92 2e       	mov	r9, r18
    106c:	02 c0       	rjmp	.+4      	; 0x1072 <vfprintf+0xec>
    106e:	88 36       	cpi	r24, 0x68	; 104
    1070:	41 f4       	brne	.+16     	; 0x1082 <vfprintf+0xfc>
    1072:	f1 01       	movw	r30, r2
    1074:	93 fd       	sbrc	r25, 3
    1076:	85 91       	lpm	r24, Z+
    1078:	93 ff       	sbrs	r25, 3
    107a:	81 91       	ld	r24, Z+
    107c:	1f 01       	movw	r2, r30
    107e:	81 11       	cpse	r24, r1
    1080:	b3 cf       	rjmp	.-154    	; 0xfe8 <vfprintf+0x62>
    1082:	9b eb       	ldi	r25, 0xBB	; 187
    1084:	98 0f       	add	r25, r24
    1086:	93 30       	cpi	r25, 0x03	; 3
    1088:	20 f4       	brcc	.+8      	; 0x1092 <vfprintf+0x10c>
    108a:	99 2d       	mov	r25, r9
    108c:	90 61       	ori	r25, 0x10	; 16
    108e:	80 5e       	subi	r24, 0xE0	; 224
    1090:	07 c0       	rjmp	.+14     	; 0x10a0 <vfprintf+0x11a>
    1092:	9b e9       	ldi	r25, 0x9B	; 155
    1094:	98 0f       	add	r25, r24
    1096:	93 30       	cpi	r25, 0x03	; 3
    1098:	08 f0       	brcs	.+2      	; 0x109c <vfprintf+0x116>
    109a:	66 c1       	rjmp	.+716    	; 0x1368 <vfprintf+0x3e2>
    109c:	99 2d       	mov	r25, r9
    109e:	9f 7e       	andi	r25, 0xEF	; 239
    10a0:	96 ff       	sbrs	r25, 6
    10a2:	16 e0       	ldi	r17, 0x06	; 6
    10a4:	9f 73       	andi	r25, 0x3F	; 63
    10a6:	99 2e       	mov	r9, r25
    10a8:	85 36       	cpi	r24, 0x65	; 101
    10aa:	19 f4       	brne	.+6      	; 0x10b2 <vfprintf+0x12c>
    10ac:	90 64       	ori	r25, 0x40	; 64
    10ae:	99 2e       	mov	r9, r25
    10b0:	08 c0       	rjmp	.+16     	; 0x10c2 <vfprintf+0x13c>
    10b2:	86 36       	cpi	r24, 0x66	; 102
    10b4:	21 f4       	brne	.+8      	; 0x10be <vfprintf+0x138>
    10b6:	39 2f       	mov	r19, r25
    10b8:	30 68       	ori	r19, 0x80	; 128
    10ba:	93 2e       	mov	r9, r19
    10bc:	02 c0       	rjmp	.+4      	; 0x10c2 <vfprintf+0x13c>
    10be:	11 11       	cpse	r17, r1
    10c0:	11 50       	subi	r17, 0x01	; 1
    10c2:	97 fe       	sbrs	r9, 7
    10c4:	07 c0       	rjmp	.+14     	; 0x10d4 <vfprintf+0x14e>
    10c6:	1c 33       	cpi	r17, 0x3C	; 60
    10c8:	50 f4       	brcc	.+20     	; 0x10de <vfprintf+0x158>
    10ca:	44 24       	eor	r4, r4
    10cc:	43 94       	inc	r4
    10ce:	41 0e       	add	r4, r17
    10d0:	27 e0       	ldi	r18, 0x07	; 7
    10d2:	0b c0       	rjmp	.+22     	; 0x10ea <vfprintf+0x164>
    10d4:	18 30       	cpi	r17, 0x08	; 8
    10d6:	38 f0       	brcs	.+14     	; 0x10e6 <vfprintf+0x160>
    10d8:	27 e0       	ldi	r18, 0x07	; 7
    10da:	17 e0       	ldi	r17, 0x07	; 7
    10dc:	05 c0       	rjmp	.+10     	; 0x10e8 <vfprintf+0x162>
    10de:	27 e0       	ldi	r18, 0x07	; 7
    10e0:	9c e3       	ldi	r25, 0x3C	; 60
    10e2:	49 2e       	mov	r4, r25
    10e4:	02 c0       	rjmp	.+4      	; 0x10ea <vfprintf+0x164>
    10e6:	21 2f       	mov	r18, r17
    10e8:	41 2c       	mov	r4, r1
    10ea:	56 01       	movw	r10, r12
    10ec:	84 e0       	ldi	r24, 0x04	; 4
    10ee:	a8 0e       	add	r10, r24
    10f0:	b1 1c       	adc	r11, r1
    10f2:	f6 01       	movw	r30, r12
    10f4:	60 81       	ld	r22, Z
    10f6:	71 81       	ldd	r23, Z+1	; 0x01
    10f8:	82 81       	ldd	r24, Z+2	; 0x02
    10fa:	93 81       	ldd	r25, Z+3	; 0x03
    10fc:	04 2d       	mov	r16, r4
    10fe:	a3 01       	movw	r20, r6
    1100:	0e 94 77 0b 	call	0x16ee	; 0x16ee <__ftoa_engine>
    1104:	6c 01       	movw	r12, r24
    1106:	f9 81       	ldd	r31, Y+1	; 0x01
    1108:	fc 87       	std	Y+12, r31	; 0x0c
    110a:	f0 ff       	sbrs	r31, 0
    110c:	02 c0       	rjmp	.+4      	; 0x1112 <vfprintf+0x18c>
    110e:	f3 ff       	sbrs	r31, 3
    1110:	06 c0       	rjmp	.+12     	; 0x111e <vfprintf+0x198>
    1112:	91 fc       	sbrc	r9, 1
    1114:	06 c0       	rjmp	.+12     	; 0x1122 <vfprintf+0x19c>
    1116:	92 fe       	sbrs	r9, 2
    1118:	06 c0       	rjmp	.+12     	; 0x1126 <vfprintf+0x1a0>
    111a:	00 e2       	ldi	r16, 0x20	; 32
    111c:	05 c0       	rjmp	.+10     	; 0x1128 <vfprintf+0x1a2>
    111e:	0d e2       	ldi	r16, 0x2D	; 45
    1120:	03 c0       	rjmp	.+6      	; 0x1128 <vfprintf+0x1a2>
    1122:	0b e2       	ldi	r16, 0x2B	; 43
    1124:	01 c0       	rjmp	.+2      	; 0x1128 <vfprintf+0x1a2>
    1126:	00 e0       	ldi	r16, 0x00	; 0
    1128:	8c 85       	ldd	r24, Y+12	; 0x0c
    112a:	8c 70       	andi	r24, 0x0C	; 12
    112c:	19 f0       	breq	.+6      	; 0x1134 <vfprintf+0x1ae>
    112e:	01 11       	cpse	r16, r1
    1130:	5a c2       	rjmp	.+1204   	; 0x15e6 <vfprintf+0x660>
    1132:	9b c2       	rjmp	.+1334   	; 0x166a <vfprintf+0x6e4>
    1134:	97 fe       	sbrs	r9, 7
    1136:	10 c0       	rjmp	.+32     	; 0x1158 <vfprintf+0x1d2>
    1138:	4c 0c       	add	r4, r12
    113a:	fc 85       	ldd	r31, Y+12	; 0x0c
    113c:	f4 ff       	sbrs	r31, 4
    113e:	04 c0       	rjmp	.+8      	; 0x1148 <vfprintf+0x1c2>
    1140:	8a 81       	ldd	r24, Y+2	; 0x02
    1142:	81 33       	cpi	r24, 0x31	; 49
    1144:	09 f4       	brne	.+2      	; 0x1148 <vfprintf+0x1c2>
    1146:	4a 94       	dec	r4
    1148:	14 14       	cp	r1, r4
    114a:	74 f5       	brge	.+92     	; 0x11a8 <vfprintf+0x222>
    114c:	28 e0       	ldi	r18, 0x08	; 8
    114e:	24 15       	cp	r18, r4
    1150:	78 f5       	brcc	.+94     	; 0x11b0 <vfprintf+0x22a>
    1152:	88 e0       	ldi	r24, 0x08	; 8
    1154:	48 2e       	mov	r4, r24
    1156:	2c c0       	rjmp	.+88     	; 0x11b0 <vfprintf+0x22a>
    1158:	96 fc       	sbrc	r9, 6
    115a:	2a c0       	rjmp	.+84     	; 0x11b0 <vfprintf+0x22a>
    115c:	81 2f       	mov	r24, r17
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	8c 15       	cp	r24, r12
    1162:	9d 05       	cpc	r25, r13
    1164:	9c f0       	brlt	.+38     	; 0x118c <vfprintf+0x206>
    1166:	3c ef       	ldi	r19, 0xFC	; 252
    1168:	c3 16       	cp	r12, r19
    116a:	3f ef       	ldi	r19, 0xFF	; 255
    116c:	d3 06       	cpc	r13, r19
    116e:	74 f0       	brlt	.+28     	; 0x118c <vfprintf+0x206>
    1170:	89 2d       	mov	r24, r9
    1172:	80 68       	ori	r24, 0x80	; 128
    1174:	98 2e       	mov	r9, r24
    1176:	0a c0       	rjmp	.+20     	; 0x118c <vfprintf+0x206>
    1178:	e2 e0       	ldi	r30, 0x02	; 2
    117a:	f0 e0       	ldi	r31, 0x00	; 0
    117c:	ec 0f       	add	r30, r28
    117e:	fd 1f       	adc	r31, r29
    1180:	e1 0f       	add	r30, r17
    1182:	f1 1d       	adc	r31, r1
    1184:	80 81       	ld	r24, Z
    1186:	80 33       	cpi	r24, 0x30	; 48
    1188:	19 f4       	brne	.+6      	; 0x1190 <vfprintf+0x20a>
    118a:	11 50       	subi	r17, 0x01	; 1
    118c:	11 11       	cpse	r17, r1
    118e:	f4 cf       	rjmp	.-24     	; 0x1178 <vfprintf+0x1f2>
    1190:	97 fe       	sbrs	r9, 7
    1192:	0e c0       	rjmp	.+28     	; 0x11b0 <vfprintf+0x22a>
    1194:	44 24       	eor	r4, r4
    1196:	43 94       	inc	r4
    1198:	41 0e       	add	r4, r17
    119a:	81 2f       	mov	r24, r17
    119c:	90 e0       	ldi	r25, 0x00	; 0
    119e:	c8 16       	cp	r12, r24
    11a0:	d9 06       	cpc	r13, r25
    11a2:	2c f4       	brge	.+10     	; 0x11ae <vfprintf+0x228>
    11a4:	1c 19       	sub	r17, r12
    11a6:	04 c0       	rjmp	.+8      	; 0x11b0 <vfprintf+0x22a>
    11a8:	44 24       	eor	r4, r4
    11aa:	43 94       	inc	r4
    11ac:	01 c0       	rjmp	.+2      	; 0x11b0 <vfprintf+0x22a>
    11ae:	10 e0       	ldi	r17, 0x00	; 0
    11b0:	97 fe       	sbrs	r9, 7
    11b2:	06 c0       	rjmp	.+12     	; 0x11c0 <vfprintf+0x23a>
    11b4:	1c 14       	cp	r1, r12
    11b6:	1d 04       	cpc	r1, r13
    11b8:	34 f4       	brge	.+12     	; 0x11c6 <vfprintf+0x240>
    11ba:	c6 01       	movw	r24, r12
    11bc:	01 96       	adiw	r24, 0x01	; 1
    11be:	05 c0       	rjmp	.+10     	; 0x11ca <vfprintf+0x244>
    11c0:	85 e0       	ldi	r24, 0x05	; 5
    11c2:	90 e0       	ldi	r25, 0x00	; 0
    11c4:	02 c0       	rjmp	.+4      	; 0x11ca <vfprintf+0x244>
    11c6:	81 e0       	ldi	r24, 0x01	; 1
    11c8:	90 e0       	ldi	r25, 0x00	; 0
    11ca:	01 11       	cpse	r16, r1
    11cc:	01 96       	adiw	r24, 0x01	; 1
    11ce:	11 23       	and	r17, r17
    11d0:	31 f0       	breq	.+12     	; 0x11de <vfprintf+0x258>
    11d2:	21 2f       	mov	r18, r17
    11d4:	30 e0       	ldi	r19, 0x00	; 0
    11d6:	2f 5f       	subi	r18, 0xFF	; 255
    11d8:	3f 4f       	sbci	r19, 0xFF	; 255
    11da:	82 0f       	add	r24, r18
    11dc:	93 1f       	adc	r25, r19
    11de:	25 2d       	mov	r18, r5
    11e0:	30 e0       	ldi	r19, 0x00	; 0
    11e2:	82 17       	cp	r24, r18
    11e4:	93 07       	cpc	r25, r19
    11e6:	14 f4       	brge	.+4      	; 0x11ec <vfprintf+0x266>
    11e8:	58 1a       	sub	r5, r24
    11ea:	01 c0       	rjmp	.+2      	; 0x11ee <vfprintf+0x268>
    11ec:	51 2c       	mov	r5, r1
    11ee:	89 2d       	mov	r24, r9
    11f0:	89 70       	andi	r24, 0x09	; 9
    11f2:	49 f4       	brne	.+18     	; 0x1206 <vfprintf+0x280>
    11f4:	55 20       	and	r5, r5
    11f6:	39 f0       	breq	.+14     	; 0x1206 <vfprintf+0x280>
    11f8:	b7 01       	movw	r22, r14
    11fa:	80 e2       	ldi	r24, 0x20	; 32
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    1202:	5a 94       	dec	r5
    1204:	f7 cf       	rjmp	.-18     	; 0x11f4 <vfprintf+0x26e>
    1206:	00 23       	and	r16, r16
    1208:	29 f0       	breq	.+10     	; 0x1214 <vfprintf+0x28e>
    120a:	b7 01       	movw	r22, r14
    120c:	80 2f       	mov	r24, r16
    120e:	90 e0       	ldi	r25, 0x00	; 0
    1210:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    1214:	93 fc       	sbrc	r9, 3
    1216:	09 c0       	rjmp	.+18     	; 0x122a <vfprintf+0x2a4>
    1218:	55 20       	and	r5, r5
    121a:	39 f0       	breq	.+14     	; 0x122a <vfprintf+0x2a4>
    121c:	b7 01       	movw	r22, r14
    121e:	80 e3       	ldi	r24, 0x30	; 48
    1220:	90 e0       	ldi	r25, 0x00	; 0
    1222:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    1226:	5a 94       	dec	r5
    1228:	f7 cf       	rjmp	.-18     	; 0x1218 <vfprintf+0x292>
    122a:	97 fe       	sbrs	r9, 7
    122c:	4c c0       	rjmp	.+152    	; 0x12c6 <vfprintf+0x340>
    122e:	46 01       	movw	r8, r12
    1230:	d7 fe       	sbrs	r13, 7
    1232:	02 c0       	rjmp	.+4      	; 0x1238 <vfprintf+0x2b2>
    1234:	81 2c       	mov	r8, r1
    1236:	91 2c       	mov	r9, r1
    1238:	c6 01       	movw	r24, r12
    123a:	88 19       	sub	r24, r8
    123c:	99 09       	sbc	r25, r9
    123e:	f3 01       	movw	r30, r6
    1240:	e8 0f       	add	r30, r24
    1242:	f9 1f       	adc	r31, r25
    1244:	fe 87       	std	Y+14, r31	; 0x0e
    1246:	ed 87       	std	Y+13, r30	; 0x0d
    1248:	96 01       	movw	r18, r12
    124a:	24 19       	sub	r18, r4
    124c:	31 09       	sbc	r19, r1
    124e:	38 8b       	std	Y+16, r19	; 0x10
    1250:	2f 87       	std	Y+15, r18	; 0x0f
    1252:	01 2f       	mov	r16, r17
    1254:	10 e0       	ldi	r17, 0x00	; 0
    1256:	11 95       	neg	r17
    1258:	01 95       	neg	r16
    125a:	11 09       	sbc	r17, r1
    125c:	3f ef       	ldi	r19, 0xFF	; 255
    125e:	83 16       	cp	r8, r19
    1260:	93 06       	cpc	r9, r19
    1262:	29 f4       	brne	.+10     	; 0x126e <vfprintf+0x2e8>
    1264:	b7 01       	movw	r22, r14
    1266:	8e e2       	ldi	r24, 0x2E	; 46
    1268:	90 e0       	ldi	r25, 0x00	; 0
    126a:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    126e:	c8 14       	cp	r12, r8
    1270:	d9 04       	cpc	r13, r9
    1272:	4c f0       	brlt	.+18     	; 0x1286 <vfprintf+0x300>
    1274:	8f 85       	ldd	r24, Y+15	; 0x0f
    1276:	98 89       	ldd	r25, Y+16	; 0x10
    1278:	88 15       	cp	r24, r8
    127a:	99 05       	cpc	r25, r9
    127c:	24 f4       	brge	.+8      	; 0x1286 <vfprintf+0x300>
    127e:	ed 85       	ldd	r30, Y+13	; 0x0d
    1280:	fe 85       	ldd	r31, Y+14	; 0x0e
    1282:	81 81       	ldd	r24, Z+1	; 0x01
    1284:	01 c0       	rjmp	.+2      	; 0x1288 <vfprintf+0x302>
    1286:	80 e3       	ldi	r24, 0x30	; 48
    1288:	f1 e0       	ldi	r31, 0x01	; 1
    128a:	8f 1a       	sub	r8, r31
    128c:	91 08       	sbc	r9, r1
    128e:	2d 85       	ldd	r18, Y+13	; 0x0d
    1290:	3e 85       	ldd	r19, Y+14	; 0x0e
    1292:	2f 5f       	subi	r18, 0xFF	; 255
    1294:	3f 4f       	sbci	r19, 0xFF	; 255
    1296:	3e 87       	std	Y+14, r19	; 0x0e
    1298:	2d 87       	std	Y+13, r18	; 0x0d
    129a:	80 16       	cp	r8, r16
    129c:	91 06       	cpc	r9, r17
    129e:	2c f0       	brlt	.+10     	; 0x12aa <vfprintf+0x324>
    12a0:	b7 01       	movw	r22, r14
    12a2:	90 e0       	ldi	r25, 0x00	; 0
    12a4:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    12a8:	d9 cf       	rjmp	.-78     	; 0x125c <vfprintf+0x2d6>
    12aa:	c8 14       	cp	r12, r8
    12ac:	d9 04       	cpc	r13, r9
    12ae:	41 f4       	brne	.+16     	; 0x12c0 <vfprintf+0x33a>
    12b0:	9a 81       	ldd	r25, Y+2	; 0x02
    12b2:	96 33       	cpi	r25, 0x36	; 54
    12b4:	20 f4       	brcc	.+8      	; 0x12be <vfprintf+0x338>
    12b6:	95 33       	cpi	r25, 0x35	; 53
    12b8:	19 f4       	brne	.+6      	; 0x12c0 <vfprintf+0x33a>
    12ba:	3c 85       	ldd	r19, Y+12	; 0x0c
    12bc:	34 ff       	sbrs	r19, 4
    12be:	81 e3       	ldi	r24, 0x31	; 49
    12c0:	b7 01       	movw	r22, r14
    12c2:	90 e0       	ldi	r25, 0x00	; 0
    12c4:	4e c0       	rjmp	.+156    	; 0x1362 <vfprintf+0x3dc>
    12c6:	8a 81       	ldd	r24, Y+2	; 0x02
    12c8:	81 33       	cpi	r24, 0x31	; 49
    12ca:	19 f0       	breq	.+6      	; 0x12d2 <vfprintf+0x34c>
    12cc:	9c 85       	ldd	r25, Y+12	; 0x0c
    12ce:	9f 7e       	andi	r25, 0xEF	; 239
    12d0:	9c 87       	std	Y+12, r25	; 0x0c
    12d2:	b7 01       	movw	r22, r14
    12d4:	90 e0       	ldi	r25, 0x00	; 0
    12d6:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    12da:	11 11       	cpse	r17, r1
    12dc:	05 c0       	rjmp	.+10     	; 0x12e8 <vfprintf+0x362>
    12de:	94 fc       	sbrc	r9, 4
    12e0:	18 c0       	rjmp	.+48     	; 0x1312 <vfprintf+0x38c>
    12e2:	85 e6       	ldi	r24, 0x65	; 101
    12e4:	90 e0       	ldi	r25, 0x00	; 0
    12e6:	17 c0       	rjmp	.+46     	; 0x1316 <vfprintf+0x390>
    12e8:	b7 01       	movw	r22, r14
    12ea:	8e e2       	ldi	r24, 0x2E	; 46
    12ec:	90 e0       	ldi	r25, 0x00	; 0
    12ee:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    12f2:	1e 5f       	subi	r17, 0xFE	; 254
    12f4:	82 e0       	ldi	r24, 0x02	; 2
    12f6:	01 e0       	ldi	r16, 0x01	; 1
    12f8:	08 0f       	add	r16, r24
    12fa:	f3 01       	movw	r30, r6
    12fc:	e8 0f       	add	r30, r24
    12fe:	f1 1d       	adc	r31, r1
    1300:	80 81       	ld	r24, Z
    1302:	b7 01       	movw	r22, r14
    1304:	90 e0       	ldi	r25, 0x00	; 0
    1306:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    130a:	80 2f       	mov	r24, r16
    130c:	01 13       	cpse	r16, r17
    130e:	f3 cf       	rjmp	.-26     	; 0x12f6 <vfprintf+0x370>
    1310:	e6 cf       	rjmp	.-52     	; 0x12de <vfprintf+0x358>
    1312:	85 e4       	ldi	r24, 0x45	; 69
    1314:	90 e0       	ldi	r25, 0x00	; 0
    1316:	b7 01       	movw	r22, r14
    1318:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    131c:	d7 fc       	sbrc	r13, 7
    131e:	06 c0       	rjmp	.+12     	; 0x132c <vfprintf+0x3a6>
    1320:	c1 14       	cp	r12, r1
    1322:	d1 04       	cpc	r13, r1
    1324:	41 f4       	brne	.+16     	; 0x1336 <vfprintf+0x3b0>
    1326:	ec 85       	ldd	r30, Y+12	; 0x0c
    1328:	e4 ff       	sbrs	r30, 4
    132a:	05 c0       	rjmp	.+10     	; 0x1336 <vfprintf+0x3b0>
    132c:	d1 94       	neg	r13
    132e:	c1 94       	neg	r12
    1330:	d1 08       	sbc	r13, r1
    1332:	8d e2       	ldi	r24, 0x2D	; 45
    1334:	01 c0       	rjmp	.+2      	; 0x1338 <vfprintf+0x3b2>
    1336:	8b e2       	ldi	r24, 0x2B	; 43
    1338:	b7 01       	movw	r22, r14
    133a:	90 e0       	ldi	r25, 0x00	; 0
    133c:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    1340:	80 e3       	ldi	r24, 0x30	; 48
    1342:	2a e0       	ldi	r18, 0x0A	; 10
    1344:	c2 16       	cp	r12, r18
    1346:	d1 04       	cpc	r13, r1
    1348:	2c f0       	brlt	.+10     	; 0x1354 <vfprintf+0x3ce>
    134a:	8f 5f       	subi	r24, 0xFF	; 255
    134c:	fa e0       	ldi	r31, 0x0A	; 10
    134e:	cf 1a       	sub	r12, r31
    1350:	d1 08       	sbc	r13, r1
    1352:	f7 cf       	rjmp	.-18     	; 0x1342 <vfprintf+0x3bc>
    1354:	b7 01       	movw	r22, r14
    1356:	90 e0       	ldi	r25, 0x00	; 0
    1358:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    135c:	b7 01       	movw	r22, r14
    135e:	c6 01       	movw	r24, r12
    1360:	c0 96       	adiw	r24, 0x30	; 48
    1362:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    1366:	54 c1       	rjmp	.+680    	; 0x1610 <vfprintf+0x68a>
    1368:	83 36       	cpi	r24, 0x63	; 99
    136a:	31 f0       	breq	.+12     	; 0x1378 <vfprintf+0x3f2>
    136c:	83 37       	cpi	r24, 0x73	; 115
    136e:	79 f0       	breq	.+30     	; 0x138e <vfprintf+0x408>
    1370:	83 35       	cpi	r24, 0x53	; 83
    1372:	09 f0       	breq	.+2      	; 0x1376 <vfprintf+0x3f0>
    1374:	56 c0       	rjmp	.+172    	; 0x1422 <vfprintf+0x49c>
    1376:	20 c0       	rjmp	.+64     	; 0x13b8 <vfprintf+0x432>
    1378:	56 01       	movw	r10, r12
    137a:	32 e0       	ldi	r19, 0x02	; 2
    137c:	a3 0e       	add	r10, r19
    137e:	b1 1c       	adc	r11, r1
    1380:	f6 01       	movw	r30, r12
    1382:	80 81       	ld	r24, Z
    1384:	89 83       	std	Y+1, r24	; 0x01
    1386:	01 e0       	ldi	r16, 0x01	; 1
    1388:	10 e0       	ldi	r17, 0x00	; 0
    138a:	63 01       	movw	r12, r6
    138c:	12 c0       	rjmp	.+36     	; 0x13b2 <vfprintf+0x42c>
    138e:	56 01       	movw	r10, r12
    1390:	f2 e0       	ldi	r31, 0x02	; 2
    1392:	af 0e       	add	r10, r31
    1394:	b1 1c       	adc	r11, r1
    1396:	f6 01       	movw	r30, r12
    1398:	c0 80       	ld	r12, Z
    139a:	d1 80       	ldd	r13, Z+1	; 0x01
    139c:	96 fe       	sbrs	r9, 6
    139e:	03 c0       	rjmp	.+6      	; 0x13a6 <vfprintf+0x420>
    13a0:	61 2f       	mov	r22, r17
    13a2:	70 e0       	ldi	r23, 0x00	; 0
    13a4:	02 c0       	rjmp	.+4      	; 0x13aa <vfprintf+0x424>
    13a6:	6f ef       	ldi	r22, 0xFF	; 255
    13a8:	7f ef       	ldi	r23, 0xFF	; 255
    13aa:	c6 01       	movw	r24, r12
    13ac:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <strnlen>
    13b0:	8c 01       	movw	r16, r24
    13b2:	f9 2d       	mov	r31, r9
    13b4:	ff 77       	andi	r31, 0x7F	; 127
    13b6:	14 c0       	rjmp	.+40     	; 0x13e0 <vfprintf+0x45a>
    13b8:	56 01       	movw	r10, r12
    13ba:	22 e0       	ldi	r18, 0x02	; 2
    13bc:	a2 0e       	add	r10, r18
    13be:	b1 1c       	adc	r11, r1
    13c0:	f6 01       	movw	r30, r12
    13c2:	c0 80       	ld	r12, Z
    13c4:	d1 80       	ldd	r13, Z+1	; 0x01
    13c6:	96 fe       	sbrs	r9, 6
    13c8:	03 c0       	rjmp	.+6      	; 0x13d0 <vfprintf+0x44a>
    13ca:	61 2f       	mov	r22, r17
    13cc:	70 e0       	ldi	r23, 0x00	; 0
    13ce:	02 c0       	rjmp	.+4      	; 0x13d4 <vfprintf+0x44e>
    13d0:	6f ef       	ldi	r22, 0xFF	; 255
    13d2:	7f ef       	ldi	r23, 0xFF	; 255
    13d4:	c6 01       	movw	r24, r12
    13d6:	0e 94 4f 0c 	call	0x189e	; 0x189e <strnlen_P>
    13da:	8c 01       	movw	r16, r24
    13dc:	f9 2d       	mov	r31, r9
    13de:	f0 68       	ori	r31, 0x80	; 128
    13e0:	9f 2e       	mov	r9, r31
    13e2:	f3 fd       	sbrc	r31, 3
    13e4:	1a c0       	rjmp	.+52     	; 0x141a <vfprintf+0x494>
    13e6:	85 2d       	mov	r24, r5
    13e8:	90 e0       	ldi	r25, 0x00	; 0
    13ea:	08 17       	cp	r16, r24
    13ec:	19 07       	cpc	r17, r25
    13ee:	a8 f4       	brcc	.+42     	; 0x141a <vfprintf+0x494>
    13f0:	b7 01       	movw	r22, r14
    13f2:	80 e2       	ldi	r24, 0x20	; 32
    13f4:	90 e0       	ldi	r25, 0x00	; 0
    13f6:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    13fa:	5a 94       	dec	r5
    13fc:	f4 cf       	rjmp	.-24     	; 0x13e6 <vfprintf+0x460>
    13fe:	f6 01       	movw	r30, r12
    1400:	97 fc       	sbrc	r9, 7
    1402:	85 91       	lpm	r24, Z+
    1404:	97 fe       	sbrs	r9, 7
    1406:	81 91       	ld	r24, Z+
    1408:	6f 01       	movw	r12, r30
    140a:	b7 01       	movw	r22, r14
    140c:	90 e0       	ldi	r25, 0x00	; 0
    140e:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    1412:	51 10       	cpse	r5, r1
    1414:	5a 94       	dec	r5
    1416:	01 50       	subi	r16, 0x01	; 1
    1418:	11 09       	sbc	r17, r1
    141a:	01 15       	cp	r16, r1
    141c:	11 05       	cpc	r17, r1
    141e:	79 f7       	brne	.-34     	; 0x13fe <vfprintf+0x478>
    1420:	f7 c0       	rjmp	.+494    	; 0x1610 <vfprintf+0x68a>
    1422:	84 36       	cpi	r24, 0x64	; 100
    1424:	11 f0       	breq	.+4      	; 0x142a <vfprintf+0x4a4>
    1426:	89 36       	cpi	r24, 0x69	; 105
    1428:	61 f5       	brne	.+88     	; 0x1482 <vfprintf+0x4fc>
    142a:	56 01       	movw	r10, r12
    142c:	97 fe       	sbrs	r9, 7
    142e:	09 c0       	rjmp	.+18     	; 0x1442 <vfprintf+0x4bc>
    1430:	24 e0       	ldi	r18, 0x04	; 4
    1432:	a2 0e       	add	r10, r18
    1434:	b1 1c       	adc	r11, r1
    1436:	f6 01       	movw	r30, r12
    1438:	60 81       	ld	r22, Z
    143a:	71 81       	ldd	r23, Z+1	; 0x01
    143c:	82 81       	ldd	r24, Z+2	; 0x02
    143e:	93 81       	ldd	r25, Z+3	; 0x03
    1440:	0a c0       	rjmp	.+20     	; 0x1456 <vfprintf+0x4d0>
    1442:	f2 e0       	ldi	r31, 0x02	; 2
    1444:	af 0e       	add	r10, r31
    1446:	b1 1c       	adc	r11, r1
    1448:	f6 01       	movw	r30, r12
    144a:	60 81       	ld	r22, Z
    144c:	71 81       	ldd	r23, Z+1	; 0x01
    144e:	07 2e       	mov	r0, r23
    1450:	00 0c       	add	r0, r0
    1452:	88 0b       	sbc	r24, r24
    1454:	99 0b       	sbc	r25, r25
    1456:	f9 2d       	mov	r31, r9
    1458:	ff 76       	andi	r31, 0x6F	; 111
    145a:	9f 2e       	mov	r9, r31
    145c:	97 ff       	sbrs	r25, 7
    145e:	09 c0       	rjmp	.+18     	; 0x1472 <vfprintf+0x4ec>
    1460:	90 95       	com	r25
    1462:	80 95       	com	r24
    1464:	70 95       	com	r23
    1466:	61 95       	neg	r22
    1468:	7f 4f       	sbci	r23, 0xFF	; 255
    146a:	8f 4f       	sbci	r24, 0xFF	; 255
    146c:	9f 4f       	sbci	r25, 0xFF	; 255
    146e:	f0 68       	ori	r31, 0x80	; 128
    1470:	9f 2e       	mov	r9, r31
    1472:	2a e0       	ldi	r18, 0x0A	; 10
    1474:	30 e0       	ldi	r19, 0x00	; 0
    1476:	a3 01       	movw	r20, r6
    1478:	0e 94 c3 0c 	call	0x1986	; 0x1986 <__ultoa_invert>
    147c:	c8 2e       	mov	r12, r24
    147e:	c6 18       	sub	r12, r6
    1480:	3f c0       	rjmp	.+126    	; 0x1500 <vfprintf+0x57a>
    1482:	09 2d       	mov	r16, r9
    1484:	85 37       	cpi	r24, 0x75	; 117
    1486:	21 f4       	brne	.+8      	; 0x1490 <vfprintf+0x50a>
    1488:	0f 7e       	andi	r16, 0xEF	; 239
    148a:	2a e0       	ldi	r18, 0x0A	; 10
    148c:	30 e0       	ldi	r19, 0x00	; 0
    148e:	1d c0       	rjmp	.+58     	; 0x14ca <vfprintf+0x544>
    1490:	09 7f       	andi	r16, 0xF9	; 249
    1492:	8f 36       	cpi	r24, 0x6F	; 111
    1494:	91 f0       	breq	.+36     	; 0x14ba <vfprintf+0x534>
    1496:	18 f4       	brcc	.+6      	; 0x149e <vfprintf+0x518>
    1498:	88 35       	cpi	r24, 0x58	; 88
    149a:	59 f0       	breq	.+22     	; 0x14b2 <vfprintf+0x52c>
    149c:	c3 c0       	rjmp	.+390    	; 0x1624 <vfprintf+0x69e>
    149e:	80 37       	cpi	r24, 0x70	; 112
    14a0:	19 f0       	breq	.+6      	; 0x14a8 <vfprintf+0x522>
    14a2:	88 37       	cpi	r24, 0x78	; 120
    14a4:	11 f0       	breq	.+4      	; 0x14aa <vfprintf+0x524>
    14a6:	be c0       	rjmp	.+380    	; 0x1624 <vfprintf+0x69e>
    14a8:	00 61       	ori	r16, 0x10	; 16
    14aa:	04 ff       	sbrs	r16, 4
    14ac:	09 c0       	rjmp	.+18     	; 0x14c0 <vfprintf+0x53a>
    14ae:	04 60       	ori	r16, 0x04	; 4
    14b0:	07 c0       	rjmp	.+14     	; 0x14c0 <vfprintf+0x53a>
    14b2:	94 fe       	sbrs	r9, 4
    14b4:	08 c0       	rjmp	.+16     	; 0x14c6 <vfprintf+0x540>
    14b6:	06 60       	ori	r16, 0x06	; 6
    14b8:	06 c0       	rjmp	.+12     	; 0x14c6 <vfprintf+0x540>
    14ba:	28 e0       	ldi	r18, 0x08	; 8
    14bc:	30 e0       	ldi	r19, 0x00	; 0
    14be:	05 c0       	rjmp	.+10     	; 0x14ca <vfprintf+0x544>
    14c0:	20 e1       	ldi	r18, 0x10	; 16
    14c2:	30 e0       	ldi	r19, 0x00	; 0
    14c4:	02 c0       	rjmp	.+4      	; 0x14ca <vfprintf+0x544>
    14c6:	20 e1       	ldi	r18, 0x10	; 16
    14c8:	32 e0       	ldi	r19, 0x02	; 2
    14ca:	56 01       	movw	r10, r12
    14cc:	07 ff       	sbrs	r16, 7
    14ce:	09 c0       	rjmp	.+18     	; 0x14e2 <vfprintf+0x55c>
    14d0:	84 e0       	ldi	r24, 0x04	; 4
    14d2:	a8 0e       	add	r10, r24
    14d4:	b1 1c       	adc	r11, r1
    14d6:	f6 01       	movw	r30, r12
    14d8:	60 81       	ld	r22, Z
    14da:	71 81       	ldd	r23, Z+1	; 0x01
    14dc:	82 81       	ldd	r24, Z+2	; 0x02
    14de:	93 81       	ldd	r25, Z+3	; 0x03
    14e0:	08 c0       	rjmp	.+16     	; 0x14f2 <vfprintf+0x56c>
    14e2:	f2 e0       	ldi	r31, 0x02	; 2
    14e4:	af 0e       	add	r10, r31
    14e6:	b1 1c       	adc	r11, r1
    14e8:	f6 01       	movw	r30, r12
    14ea:	60 81       	ld	r22, Z
    14ec:	71 81       	ldd	r23, Z+1	; 0x01
    14ee:	80 e0       	ldi	r24, 0x00	; 0
    14f0:	90 e0       	ldi	r25, 0x00	; 0
    14f2:	a3 01       	movw	r20, r6
    14f4:	0e 94 c3 0c 	call	0x1986	; 0x1986 <__ultoa_invert>
    14f8:	c8 2e       	mov	r12, r24
    14fa:	c6 18       	sub	r12, r6
    14fc:	0f 77       	andi	r16, 0x7F	; 127
    14fe:	90 2e       	mov	r9, r16
    1500:	96 fe       	sbrs	r9, 6
    1502:	0b c0       	rjmp	.+22     	; 0x151a <vfprintf+0x594>
    1504:	09 2d       	mov	r16, r9
    1506:	0e 7f       	andi	r16, 0xFE	; 254
    1508:	c1 16       	cp	r12, r17
    150a:	50 f4       	brcc	.+20     	; 0x1520 <vfprintf+0x59a>
    150c:	94 fe       	sbrs	r9, 4
    150e:	0a c0       	rjmp	.+20     	; 0x1524 <vfprintf+0x59e>
    1510:	92 fc       	sbrc	r9, 2
    1512:	08 c0       	rjmp	.+16     	; 0x1524 <vfprintf+0x59e>
    1514:	09 2d       	mov	r16, r9
    1516:	0e 7e       	andi	r16, 0xEE	; 238
    1518:	05 c0       	rjmp	.+10     	; 0x1524 <vfprintf+0x59e>
    151a:	dc 2c       	mov	r13, r12
    151c:	09 2d       	mov	r16, r9
    151e:	03 c0       	rjmp	.+6      	; 0x1526 <vfprintf+0x5a0>
    1520:	dc 2c       	mov	r13, r12
    1522:	01 c0       	rjmp	.+2      	; 0x1526 <vfprintf+0x5a0>
    1524:	d1 2e       	mov	r13, r17
    1526:	04 ff       	sbrs	r16, 4
    1528:	0d c0       	rjmp	.+26     	; 0x1544 <vfprintf+0x5be>
    152a:	fe 01       	movw	r30, r28
    152c:	ec 0d       	add	r30, r12
    152e:	f1 1d       	adc	r31, r1
    1530:	80 81       	ld	r24, Z
    1532:	80 33       	cpi	r24, 0x30	; 48
    1534:	11 f4       	brne	.+4      	; 0x153a <vfprintf+0x5b4>
    1536:	09 7e       	andi	r16, 0xE9	; 233
    1538:	09 c0       	rjmp	.+18     	; 0x154c <vfprintf+0x5c6>
    153a:	02 ff       	sbrs	r16, 2
    153c:	06 c0       	rjmp	.+12     	; 0x154a <vfprintf+0x5c4>
    153e:	d3 94       	inc	r13
    1540:	d3 94       	inc	r13
    1542:	04 c0       	rjmp	.+8      	; 0x154c <vfprintf+0x5c6>
    1544:	80 2f       	mov	r24, r16
    1546:	86 78       	andi	r24, 0x86	; 134
    1548:	09 f0       	breq	.+2      	; 0x154c <vfprintf+0x5c6>
    154a:	d3 94       	inc	r13
    154c:	03 fd       	sbrc	r16, 3
    154e:	11 c0       	rjmp	.+34     	; 0x1572 <vfprintf+0x5ec>
    1550:	00 ff       	sbrs	r16, 0
    1552:	06 c0       	rjmp	.+12     	; 0x1560 <vfprintf+0x5da>
    1554:	1c 2d       	mov	r17, r12
    1556:	d5 14       	cp	r13, r5
    1558:	80 f4       	brcc	.+32     	; 0x157a <vfprintf+0x5f4>
    155a:	15 0d       	add	r17, r5
    155c:	1d 19       	sub	r17, r13
    155e:	0d c0       	rjmp	.+26     	; 0x157a <vfprintf+0x5f4>
    1560:	d5 14       	cp	r13, r5
    1562:	58 f4       	brcc	.+22     	; 0x157a <vfprintf+0x5f4>
    1564:	b7 01       	movw	r22, r14
    1566:	80 e2       	ldi	r24, 0x20	; 32
    1568:	90 e0       	ldi	r25, 0x00	; 0
    156a:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    156e:	d3 94       	inc	r13
    1570:	f7 cf       	rjmp	.-18     	; 0x1560 <vfprintf+0x5da>
    1572:	d5 14       	cp	r13, r5
    1574:	10 f4       	brcc	.+4      	; 0x157a <vfprintf+0x5f4>
    1576:	5d 18       	sub	r5, r13
    1578:	01 c0       	rjmp	.+2      	; 0x157c <vfprintf+0x5f6>
    157a:	51 2c       	mov	r5, r1
    157c:	04 ff       	sbrs	r16, 4
    157e:	10 c0       	rjmp	.+32     	; 0x15a0 <vfprintf+0x61a>
    1580:	b7 01       	movw	r22, r14
    1582:	80 e3       	ldi	r24, 0x30	; 48
    1584:	90 e0       	ldi	r25, 0x00	; 0
    1586:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    158a:	02 ff       	sbrs	r16, 2
    158c:	17 c0       	rjmp	.+46     	; 0x15bc <vfprintf+0x636>
    158e:	01 fd       	sbrc	r16, 1
    1590:	03 c0       	rjmp	.+6      	; 0x1598 <vfprintf+0x612>
    1592:	88 e7       	ldi	r24, 0x78	; 120
    1594:	90 e0       	ldi	r25, 0x00	; 0
    1596:	02 c0       	rjmp	.+4      	; 0x159c <vfprintf+0x616>
    1598:	88 e5       	ldi	r24, 0x58	; 88
    159a:	90 e0       	ldi	r25, 0x00	; 0
    159c:	b7 01       	movw	r22, r14
    159e:	0c c0       	rjmp	.+24     	; 0x15b8 <vfprintf+0x632>
    15a0:	80 2f       	mov	r24, r16
    15a2:	86 78       	andi	r24, 0x86	; 134
    15a4:	59 f0       	breq	.+22     	; 0x15bc <vfprintf+0x636>
    15a6:	01 ff       	sbrs	r16, 1
    15a8:	02 c0       	rjmp	.+4      	; 0x15ae <vfprintf+0x628>
    15aa:	8b e2       	ldi	r24, 0x2B	; 43
    15ac:	01 c0       	rjmp	.+2      	; 0x15b0 <vfprintf+0x62a>
    15ae:	80 e2       	ldi	r24, 0x20	; 32
    15b0:	07 fd       	sbrc	r16, 7
    15b2:	8d e2       	ldi	r24, 0x2D	; 45
    15b4:	b7 01       	movw	r22, r14
    15b6:	90 e0       	ldi	r25, 0x00	; 0
    15b8:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    15bc:	c1 16       	cp	r12, r17
    15be:	38 f4       	brcc	.+14     	; 0x15ce <vfprintf+0x648>
    15c0:	b7 01       	movw	r22, r14
    15c2:	80 e3       	ldi	r24, 0x30	; 48
    15c4:	90 e0       	ldi	r25, 0x00	; 0
    15c6:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    15ca:	11 50       	subi	r17, 0x01	; 1
    15cc:	f7 cf       	rjmp	.-18     	; 0x15bc <vfprintf+0x636>
    15ce:	ca 94       	dec	r12
    15d0:	f3 01       	movw	r30, r6
    15d2:	ec 0d       	add	r30, r12
    15d4:	f1 1d       	adc	r31, r1
    15d6:	80 81       	ld	r24, Z
    15d8:	b7 01       	movw	r22, r14
    15da:	90 e0       	ldi	r25, 0x00	; 0
    15dc:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    15e0:	c1 10       	cpse	r12, r1
    15e2:	f5 cf       	rjmp	.-22     	; 0x15ce <vfprintf+0x648>
    15e4:	15 c0       	rjmp	.+42     	; 0x1610 <vfprintf+0x68a>
    15e6:	f4 e0       	ldi	r31, 0x04	; 4
    15e8:	f5 15       	cp	r31, r5
    15ea:	60 f5       	brcc	.+88     	; 0x1644 <vfprintf+0x6be>
    15ec:	84 e0       	ldi	r24, 0x04	; 4
    15ee:	58 1a       	sub	r5, r24
    15f0:	93 fe       	sbrs	r9, 3
    15f2:	1f c0       	rjmp	.+62     	; 0x1632 <vfprintf+0x6ac>
    15f4:	01 11       	cpse	r16, r1
    15f6:	27 c0       	rjmp	.+78     	; 0x1646 <vfprintf+0x6c0>
    15f8:	2c 85       	ldd	r18, Y+12	; 0x0c
    15fa:	23 ff       	sbrs	r18, 3
    15fc:	2a c0       	rjmp	.+84     	; 0x1652 <vfprintf+0x6cc>
    15fe:	04 eb       	ldi	r16, 0xB4	; 180
    1600:	10 e0       	ldi	r17, 0x00	; 0
    1602:	39 2d       	mov	r19, r9
    1604:	30 71       	andi	r19, 0x10	; 16
    1606:	93 2e       	mov	r9, r19
    1608:	f8 01       	movw	r30, r16
    160a:	84 91       	lpm	r24, Z
    160c:	81 11       	cpse	r24, r1
    160e:	24 c0       	rjmp	.+72     	; 0x1658 <vfprintf+0x6d2>
    1610:	55 20       	and	r5, r5
    1612:	09 f4       	brne	.+2      	; 0x1616 <vfprintf+0x690>
    1614:	e4 cc       	rjmp	.-1592   	; 0xfde <vfprintf+0x58>
    1616:	b7 01       	movw	r22, r14
    1618:	80 e2       	ldi	r24, 0x20	; 32
    161a:	90 e0       	ldi	r25, 0x00	; 0
    161c:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    1620:	5a 94       	dec	r5
    1622:	f6 cf       	rjmp	.-20     	; 0x1610 <vfprintf+0x68a>
    1624:	f7 01       	movw	r30, r14
    1626:	86 81       	ldd	r24, Z+6	; 0x06
    1628:	97 81       	ldd	r25, Z+7	; 0x07
    162a:	26 c0       	rjmp	.+76     	; 0x1678 <vfprintf+0x6f2>
    162c:	8f ef       	ldi	r24, 0xFF	; 255
    162e:	9f ef       	ldi	r25, 0xFF	; 255
    1630:	23 c0       	rjmp	.+70     	; 0x1678 <vfprintf+0x6f2>
    1632:	b7 01       	movw	r22, r14
    1634:	80 e2       	ldi	r24, 0x20	; 32
    1636:	90 e0       	ldi	r25, 0x00	; 0
    1638:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    163c:	5a 94       	dec	r5
    163e:	51 10       	cpse	r5, r1
    1640:	f8 cf       	rjmp	.-16     	; 0x1632 <vfprintf+0x6ac>
    1642:	d8 cf       	rjmp	.-80     	; 0x15f4 <vfprintf+0x66e>
    1644:	51 2c       	mov	r5, r1
    1646:	b7 01       	movw	r22, r14
    1648:	80 2f       	mov	r24, r16
    164a:	90 e0       	ldi	r25, 0x00	; 0
    164c:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    1650:	d3 cf       	rjmp	.-90     	; 0x15f8 <vfprintf+0x672>
    1652:	08 eb       	ldi	r16, 0xB8	; 184
    1654:	10 e0       	ldi	r17, 0x00	; 0
    1656:	d5 cf       	rjmp	.-86     	; 0x1602 <vfprintf+0x67c>
    1658:	91 10       	cpse	r9, r1
    165a:	80 52       	subi	r24, 0x20	; 32
    165c:	b7 01       	movw	r22, r14
    165e:	90 e0       	ldi	r25, 0x00	; 0
    1660:	0e 94 65 0c 	call	0x18ca	; 0x18ca <fputc>
    1664:	0f 5f       	subi	r16, 0xFF	; 255
    1666:	1f 4f       	sbci	r17, 0xFF	; 255
    1668:	cf cf       	rjmp	.-98     	; 0x1608 <vfprintf+0x682>
    166a:	23 e0       	ldi	r18, 0x03	; 3
    166c:	25 15       	cp	r18, r5
    166e:	10 f4       	brcc	.+4      	; 0x1674 <vfprintf+0x6ee>
    1670:	83 e0       	ldi	r24, 0x03	; 3
    1672:	bd cf       	rjmp	.-134    	; 0x15ee <vfprintf+0x668>
    1674:	51 2c       	mov	r5, r1
    1676:	c0 cf       	rjmp	.-128    	; 0x15f8 <vfprintf+0x672>
    1678:	60 96       	adiw	r28, 0x10	; 16
    167a:	e2 e1       	ldi	r30, 0x12	; 18
    167c:	0c 94 5c 0b 	jmp	0x16b8	; 0x16b8 <__epilogue_restores__>

00001680 <__prologue_saves__>:
    1680:	2f 92       	push	r2
    1682:	3f 92       	push	r3
    1684:	4f 92       	push	r4
    1686:	5f 92       	push	r5
    1688:	6f 92       	push	r6
    168a:	7f 92       	push	r7
    168c:	8f 92       	push	r8
    168e:	9f 92       	push	r9
    1690:	af 92       	push	r10
    1692:	bf 92       	push	r11
    1694:	cf 92       	push	r12
    1696:	df 92       	push	r13
    1698:	ef 92       	push	r14
    169a:	ff 92       	push	r15
    169c:	0f 93       	push	r16
    169e:	1f 93       	push	r17
    16a0:	cf 93       	push	r28
    16a2:	df 93       	push	r29
    16a4:	cd b7       	in	r28, 0x3d	; 61
    16a6:	de b7       	in	r29, 0x3e	; 62
    16a8:	ca 1b       	sub	r28, r26
    16aa:	db 0b       	sbc	r29, r27
    16ac:	0f b6       	in	r0, 0x3f	; 63
    16ae:	f8 94       	cli
    16b0:	de bf       	out	0x3e, r29	; 62
    16b2:	0f be       	out	0x3f, r0	; 63
    16b4:	cd bf       	out	0x3d, r28	; 61
    16b6:	09 94       	ijmp

000016b8 <__epilogue_restores__>:
    16b8:	2a 88       	ldd	r2, Y+18	; 0x12
    16ba:	39 88       	ldd	r3, Y+17	; 0x11
    16bc:	48 88       	ldd	r4, Y+16	; 0x10
    16be:	5f 84       	ldd	r5, Y+15	; 0x0f
    16c0:	6e 84       	ldd	r6, Y+14	; 0x0e
    16c2:	7d 84       	ldd	r7, Y+13	; 0x0d
    16c4:	8c 84       	ldd	r8, Y+12	; 0x0c
    16c6:	9b 84       	ldd	r9, Y+11	; 0x0b
    16c8:	aa 84       	ldd	r10, Y+10	; 0x0a
    16ca:	b9 84       	ldd	r11, Y+9	; 0x09
    16cc:	c8 84       	ldd	r12, Y+8	; 0x08
    16ce:	df 80       	ldd	r13, Y+7	; 0x07
    16d0:	ee 80       	ldd	r14, Y+6	; 0x06
    16d2:	fd 80       	ldd	r15, Y+5	; 0x05
    16d4:	0c 81       	ldd	r16, Y+4	; 0x04
    16d6:	1b 81       	ldd	r17, Y+3	; 0x03
    16d8:	aa 81       	ldd	r26, Y+2	; 0x02
    16da:	b9 81       	ldd	r27, Y+1	; 0x01
    16dc:	ce 0f       	add	r28, r30
    16de:	d1 1d       	adc	r29, r1
    16e0:	0f b6       	in	r0, 0x3f	; 63
    16e2:	f8 94       	cli
    16e4:	de bf       	out	0x3e, r29	; 62
    16e6:	0f be       	out	0x3f, r0	; 63
    16e8:	cd bf       	out	0x3d, r28	; 61
    16ea:	ed 01       	movw	r28, r26
    16ec:	08 95       	ret

000016ee <__ftoa_engine>:
    16ee:	28 30       	cpi	r18, 0x08	; 8
    16f0:	08 f0       	brcs	.+2      	; 0x16f4 <__ftoa_engine+0x6>
    16f2:	27 e0       	ldi	r18, 0x07	; 7
    16f4:	33 27       	eor	r19, r19
    16f6:	da 01       	movw	r26, r20
    16f8:	99 0f       	add	r25, r25
    16fa:	31 1d       	adc	r19, r1
    16fc:	87 fd       	sbrc	r24, 7
    16fe:	91 60       	ori	r25, 0x01	; 1
    1700:	00 96       	adiw	r24, 0x00	; 0
    1702:	61 05       	cpc	r22, r1
    1704:	71 05       	cpc	r23, r1
    1706:	39 f4       	brne	.+14     	; 0x1716 <__ftoa_engine+0x28>
    1708:	32 60       	ori	r19, 0x02	; 2
    170a:	2e 5f       	subi	r18, 0xFE	; 254
    170c:	3d 93       	st	X+, r19
    170e:	30 e3       	ldi	r19, 0x30	; 48
    1710:	2a 95       	dec	r18
    1712:	e1 f7       	brne	.-8      	; 0x170c <__ftoa_engine+0x1e>
    1714:	08 95       	ret
    1716:	9f 3f       	cpi	r25, 0xFF	; 255
    1718:	30 f0       	brcs	.+12     	; 0x1726 <__ftoa_engine+0x38>
    171a:	80 38       	cpi	r24, 0x80	; 128
    171c:	71 05       	cpc	r23, r1
    171e:	61 05       	cpc	r22, r1
    1720:	09 f0       	breq	.+2      	; 0x1724 <__ftoa_engine+0x36>
    1722:	3c 5f       	subi	r19, 0xFC	; 252
    1724:	3c 5f       	subi	r19, 0xFC	; 252
    1726:	3d 93       	st	X+, r19
    1728:	91 30       	cpi	r25, 0x01	; 1
    172a:	08 f0       	brcs	.+2      	; 0x172e <__ftoa_engine+0x40>
    172c:	80 68       	ori	r24, 0x80	; 128
    172e:	91 1d       	adc	r25, r1
    1730:	df 93       	push	r29
    1732:	cf 93       	push	r28
    1734:	1f 93       	push	r17
    1736:	0f 93       	push	r16
    1738:	ff 92       	push	r15
    173a:	ef 92       	push	r14
    173c:	19 2f       	mov	r17, r25
    173e:	98 7f       	andi	r25, 0xF8	; 248
    1740:	96 95       	lsr	r25
    1742:	e9 2f       	mov	r30, r25
    1744:	96 95       	lsr	r25
    1746:	96 95       	lsr	r25
    1748:	e9 0f       	add	r30, r25
    174a:	ff 27       	eor	r31, r31
    174c:	ea 5e       	subi	r30, 0xEA	; 234
    174e:	fe 4f       	sbci	r31, 0xFE	; 254
    1750:	99 27       	eor	r25, r25
    1752:	33 27       	eor	r19, r19
    1754:	ee 24       	eor	r14, r14
    1756:	ff 24       	eor	r15, r15
    1758:	a7 01       	movw	r20, r14
    175a:	e7 01       	movw	r28, r14
    175c:	05 90       	lpm	r0, Z+
    175e:	08 94       	sec
    1760:	07 94       	ror	r0
    1762:	28 f4       	brcc	.+10     	; 0x176e <__ftoa_engine+0x80>
    1764:	36 0f       	add	r19, r22
    1766:	e7 1e       	adc	r14, r23
    1768:	f8 1e       	adc	r15, r24
    176a:	49 1f       	adc	r20, r25
    176c:	51 1d       	adc	r21, r1
    176e:	66 0f       	add	r22, r22
    1770:	77 1f       	adc	r23, r23
    1772:	88 1f       	adc	r24, r24
    1774:	99 1f       	adc	r25, r25
    1776:	06 94       	lsr	r0
    1778:	a1 f7       	brne	.-24     	; 0x1762 <__ftoa_engine+0x74>
    177a:	05 90       	lpm	r0, Z+
    177c:	07 94       	ror	r0
    177e:	28 f4       	brcc	.+10     	; 0x178a <__ftoa_engine+0x9c>
    1780:	e7 0e       	add	r14, r23
    1782:	f8 1e       	adc	r15, r24
    1784:	49 1f       	adc	r20, r25
    1786:	56 1f       	adc	r21, r22
    1788:	c1 1d       	adc	r28, r1
    178a:	77 0f       	add	r23, r23
    178c:	88 1f       	adc	r24, r24
    178e:	99 1f       	adc	r25, r25
    1790:	66 1f       	adc	r22, r22
    1792:	06 94       	lsr	r0
    1794:	a1 f7       	brne	.-24     	; 0x177e <__ftoa_engine+0x90>
    1796:	05 90       	lpm	r0, Z+
    1798:	07 94       	ror	r0
    179a:	28 f4       	brcc	.+10     	; 0x17a6 <__ftoa_engine+0xb8>
    179c:	f8 0e       	add	r15, r24
    179e:	49 1f       	adc	r20, r25
    17a0:	56 1f       	adc	r21, r22
    17a2:	c7 1f       	adc	r28, r23
    17a4:	d1 1d       	adc	r29, r1
    17a6:	88 0f       	add	r24, r24
    17a8:	99 1f       	adc	r25, r25
    17aa:	66 1f       	adc	r22, r22
    17ac:	77 1f       	adc	r23, r23
    17ae:	06 94       	lsr	r0
    17b0:	a1 f7       	brne	.-24     	; 0x179a <__ftoa_engine+0xac>
    17b2:	05 90       	lpm	r0, Z+
    17b4:	07 94       	ror	r0
    17b6:	20 f4       	brcc	.+8      	; 0x17c0 <__ftoa_engine+0xd2>
    17b8:	49 0f       	add	r20, r25
    17ba:	56 1f       	adc	r21, r22
    17bc:	c7 1f       	adc	r28, r23
    17be:	d8 1f       	adc	r29, r24
    17c0:	99 0f       	add	r25, r25
    17c2:	66 1f       	adc	r22, r22
    17c4:	77 1f       	adc	r23, r23
    17c6:	88 1f       	adc	r24, r24
    17c8:	06 94       	lsr	r0
    17ca:	a9 f7       	brne	.-22     	; 0x17b6 <__ftoa_engine+0xc8>
    17cc:	84 91       	lpm	r24, Z
    17ce:	10 95       	com	r17
    17d0:	17 70       	andi	r17, 0x07	; 7
    17d2:	41 f0       	breq	.+16     	; 0x17e4 <__ftoa_engine+0xf6>
    17d4:	d6 95       	lsr	r29
    17d6:	c7 95       	ror	r28
    17d8:	57 95       	ror	r21
    17da:	47 95       	ror	r20
    17dc:	f7 94       	ror	r15
    17de:	e7 94       	ror	r14
    17e0:	1a 95       	dec	r17
    17e2:	c1 f7       	brne	.-16     	; 0x17d4 <__ftoa_engine+0xe6>
    17e4:	ec eb       	ldi	r30, 0xBC	; 188
    17e6:	f0 e0       	ldi	r31, 0x00	; 0
    17e8:	68 94       	set
    17ea:	15 90       	lpm	r1, Z+
    17ec:	15 91       	lpm	r17, Z+
    17ee:	35 91       	lpm	r19, Z+
    17f0:	65 91       	lpm	r22, Z+
    17f2:	95 91       	lpm	r25, Z+
    17f4:	05 90       	lpm	r0, Z+
    17f6:	7f e2       	ldi	r23, 0x2F	; 47
    17f8:	73 95       	inc	r23
    17fa:	e1 18       	sub	r14, r1
    17fc:	f1 0a       	sbc	r15, r17
    17fe:	43 0b       	sbc	r20, r19
    1800:	56 0b       	sbc	r21, r22
    1802:	c9 0b       	sbc	r28, r25
    1804:	d0 09       	sbc	r29, r0
    1806:	c0 f7       	brcc	.-16     	; 0x17f8 <__ftoa_engine+0x10a>
    1808:	e1 0c       	add	r14, r1
    180a:	f1 1e       	adc	r15, r17
    180c:	43 1f       	adc	r20, r19
    180e:	56 1f       	adc	r21, r22
    1810:	c9 1f       	adc	r28, r25
    1812:	d0 1d       	adc	r29, r0
    1814:	7e f4       	brtc	.+30     	; 0x1834 <__ftoa_engine+0x146>
    1816:	70 33       	cpi	r23, 0x30	; 48
    1818:	11 f4       	brne	.+4      	; 0x181e <__ftoa_engine+0x130>
    181a:	8a 95       	dec	r24
    181c:	e6 cf       	rjmp	.-52     	; 0x17ea <__ftoa_engine+0xfc>
    181e:	e8 94       	clt
    1820:	01 50       	subi	r16, 0x01	; 1
    1822:	30 f0       	brcs	.+12     	; 0x1830 <__ftoa_engine+0x142>
    1824:	08 0f       	add	r16, r24
    1826:	0a f4       	brpl	.+2      	; 0x182a <__ftoa_engine+0x13c>
    1828:	00 27       	eor	r16, r16
    182a:	02 17       	cp	r16, r18
    182c:	08 f4       	brcc	.+2      	; 0x1830 <__ftoa_engine+0x142>
    182e:	20 2f       	mov	r18, r16
    1830:	23 95       	inc	r18
    1832:	02 2f       	mov	r16, r18
    1834:	7a 33       	cpi	r23, 0x3A	; 58
    1836:	28 f0       	brcs	.+10     	; 0x1842 <__ftoa_engine+0x154>
    1838:	79 e3       	ldi	r23, 0x39	; 57
    183a:	7d 93       	st	X+, r23
    183c:	2a 95       	dec	r18
    183e:	e9 f7       	brne	.-6      	; 0x183a <__ftoa_engine+0x14c>
    1840:	10 c0       	rjmp	.+32     	; 0x1862 <__ftoa_engine+0x174>
    1842:	7d 93       	st	X+, r23
    1844:	2a 95       	dec	r18
    1846:	89 f6       	brne	.-94     	; 0x17ea <__ftoa_engine+0xfc>
    1848:	06 94       	lsr	r0
    184a:	97 95       	ror	r25
    184c:	67 95       	ror	r22
    184e:	37 95       	ror	r19
    1850:	17 95       	ror	r17
    1852:	17 94       	ror	r1
    1854:	e1 18       	sub	r14, r1
    1856:	f1 0a       	sbc	r15, r17
    1858:	43 0b       	sbc	r20, r19
    185a:	56 0b       	sbc	r21, r22
    185c:	c9 0b       	sbc	r28, r25
    185e:	d0 09       	sbc	r29, r0
    1860:	98 f0       	brcs	.+38     	; 0x1888 <__ftoa_engine+0x19a>
    1862:	23 95       	inc	r18
    1864:	7e 91       	ld	r23, -X
    1866:	73 95       	inc	r23
    1868:	7a 33       	cpi	r23, 0x3A	; 58
    186a:	08 f0       	brcs	.+2      	; 0x186e <__ftoa_engine+0x180>
    186c:	70 e3       	ldi	r23, 0x30	; 48
    186e:	7c 93       	st	X, r23
    1870:	20 13       	cpse	r18, r16
    1872:	b8 f7       	brcc	.-18     	; 0x1862 <__ftoa_engine+0x174>
    1874:	7e 91       	ld	r23, -X
    1876:	70 61       	ori	r23, 0x10	; 16
    1878:	7d 93       	st	X+, r23
    187a:	30 f0       	brcs	.+12     	; 0x1888 <__ftoa_engine+0x19a>
    187c:	83 95       	inc	r24
    187e:	71 e3       	ldi	r23, 0x31	; 49
    1880:	7d 93       	st	X+, r23
    1882:	70 e3       	ldi	r23, 0x30	; 48
    1884:	2a 95       	dec	r18
    1886:	e1 f7       	brne	.-8      	; 0x1880 <__ftoa_engine+0x192>
    1888:	11 24       	eor	r1, r1
    188a:	ef 90       	pop	r14
    188c:	ff 90       	pop	r15
    188e:	0f 91       	pop	r16
    1890:	1f 91       	pop	r17
    1892:	cf 91       	pop	r28
    1894:	df 91       	pop	r29
    1896:	99 27       	eor	r25, r25
    1898:	87 fd       	sbrc	r24, 7
    189a:	90 95       	com	r25
    189c:	08 95       	ret

0000189e <strnlen_P>:
    189e:	fc 01       	movw	r30, r24
    18a0:	05 90       	lpm	r0, Z+
    18a2:	61 50       	subi	r22, 0x01	; 1
    18a4:	70 40       	sbci	r23, 0x00	; 0
    18a6:	01 10       	cpse	r0, r1
    18a8:	d8 f7       	brcc	.-10     	; 0x18a0 <strnlen_P+0x2>
    18aa:	80 95       	com	r24
    18ac:	90 95       	com	r25
    18ae:	8e 0f       	add	r24, r30
    18b0:	9f 1f       	adc	r25, r31
    18b2:	08 95       	ret

000018b4 <strnlen>:
    18b4:	fc 01       	movw	r30, r24
    18b6:	61 50       	subi	r22, 0x01	; 1
    18b8:	70 40       	sbci	r23, 0x00	; 0
    18ba:	01 90       	ld	r0, Z+
    18bc:	01 10       	cpse	r0, r1
    18be:	d8 f7       	brcc	.-10     	; 0x18b6 <strnlen+0x2>
    18c0:	80 95       	com	r24
    18c2:	90 95       	com	r25
    18c4:	8e 0f       	add	r24, r30
    18c6:	9f 1f       	adc	r25, r31
    18c8:	08 95       	ret

000018ca <fputc>:
    18ca:	0f 93       	push	r16
    18cc:	1f 93       	push	r17
    18ce:	cf 93       	push	r28
    18d0:	df 93       	push	r29
    18d2:	fb 01       	movw	r30, r22
    18d4:	23 81       	ldd	r18, Z+3	; 0x03
    18d6:	21 fd       	sbrc	r18, 1
    18d8:	03 c0       	rjmp	.+6      	; 0x18e0 <fputc+0x16>
    18da:	8f ef       	ldi	r24, 0xFF	; 255
    18dc:	9f ef       	ldi	r25, 0xFF	; 255
    18de:	2c c0       	rjmp	.+88     	; 0x1938 <fputc+0x6e>
    18e0:	22 ff       	sbrs	r18, 2
    18e2:	16 c0       	rjmp	.+44     	; 0x1910 <fputc+0x46>
    18e4:	46 81       	ldd	r20, Z+6	; 0x06
    18e6:	57 81       	ldd	r21, Z+7	; 0x07
    18e8:	24 81       	ldd	r18, Z+4	; 0x04
    18ea:	35 81       	ldd	r19, Z+5	; 0x05
    18ec:	42 17       	cp	r20, r18
    18ee:	53 07       	cpc	r21, r19
    18f0:	44 f4       	brge	.+16     	; 0x1902 <fputc+0x38>
    18f2:	a0 81       	ld	r26, Z
    18f4:	b1 81       	ldd	r27, Z+1	; 0x01
    18f6:	9d 01       	movw	r18, r26
    18f8:	2f 5f       	subi	r18, 0xFF	; 255
    18fa:	3f 4f       	sbci	r19, 0xFF	; 255
    18fc:	31 83       	std	Z+1, r19	; 0x01
    18fe:	20 83       	st	Z, r18
    1900:	8c 93       	st	X, r24
    1902:	26 81       	ldd	r18, Z+6	; 0x06
    1904:	37 81       	ldd	r19, Z+7	; 0x07
    1906:	2f 5f       	subi	r18, 0xFF	; 255
    1908:	3f 4f       	sbci	r19, 0xFF	; 255
    190a:	37 83       	std	Z+7, r19	; 0x07
    190c:	26 83       	std	Z+6, r18	; 0x06
    190e:	14 c0       	rjmp	.+40     	; 0x1938 <fputc+0x6e>
    1910:	8b 01       	movw	r16, r22
    1912:	ec 01       	movw	r28, r24
    1914:	fb 01       	movw	r30, r22
    1916:	00 84       	ldd	r0, Z+8	; 0x08
    1918:	f1 85       	ldd	r31, Z+9	; 0x09
    191a:	e0 2d       	mov	r30, r0
    191c:	09 95       	icall
    191e:	89 2b       	or	r24, r25
    1920:	e1 f6       	brne	.-72     	; 0x18da <fputc+0x10>
    1922:	d8 01       	movw	r26, r16
    1924:	16 96       	adiw	r26, 0x06	; 6
    1926:	8d 91       	ld	r24, X+
    1928:	9c 91       	ld	r25, X
    192a:	17 97       	sbiw	r26, 0x07	; 7
    192c:	01 96       	adiw	r24, 0x01	; 1
    192e:	17 96       	adiw	r26, 0x07	; 7
    1930:	9c 93       	st	X, r25
    1932:	8e 93       	st	-X, r24
    1934:	16 97       	sbiw	r26, 0x06	; 6
    1936:	ce 01       	movw	r24, r28
    1938:	df 91       	pop	r29
    193a:	cf 91       	pop	r28
    193c:	1f 91       	pop	r17
    193e:	0f 91       	pop	r16
    1940:	08 95       	ret

00001942 <sprintf>:
    1942:	ae e0       	ldi	r26, 0x0E	; 14
    1944:	b0 e0       	ldi	r27, 0x00	; 0
    1946:	e7 ea       	ldi	r30, 0xA7	; 167
    1948:	fc e0       	ldi	r31, 0x0C	; 12
    194a:	0c 94 4e 0b 	jmp	0x169c	; 0x169c <__prologue_saves__+0x1c>
    194e:	0d 89       	ldd	r16, Y+21	; 0x15
    1950:	1e 89       	ldd	r17, Y+22	; 0x16
    1952:	86 e0       	ldi	r24, 0x06	; 6
    1954:	8c 83       	std	Y+4, r24	; 0x04
    1956:	1a 83       	std	Y+2, r17	; 0x02
    1958:	09 83       	std	Y+1, r16	; 0x01
    195a:	8f ef       	ldi	r24, 0xFF	; 255
    195c:	9f e7       	ldi	r25, 0x7F	; 127
    195e:	9e 83       	std	Y+6, r25	; 0x06
    1960:	8d 83       	std	Y+5, r24	; 0x05
    1962:	ae 01       	movw	r20, r28
    1964:	47 5e       	subi	r20, 0xE7	; 231
    1966:	5f 4f       	sbci	r21, 0xFF	; 255
    1968:	6f 89       	ldd	r22, Y+23	; 0x17
    196a:	78 8d       	ldd	r23, Y+24	; 0x18
    196c:	ce 01       	movw	r24, r28
    196e:	01 96       	adiw	r24, 0x01	; 1
    1970:	0e 94 c3 07 	call	0xf86	; 0xf86 <vfprintf>
    1974:	ef 81       	ldd	r30, Y+7	; 0x07
    1976:	f8 85       	ldd	r31, Y+8	; 0x08
    1978:	e0 0f       	add	r30, r16
    197a:	f1 1f       	adc	r31, r17
    197c:	10 82       	st	Z, r1
    197e:	2e 96       	adiw	r28, 0x0e	; 14
    1980:	e4 e0       	ldi	r30, 0x04	; 4
    1982:	0c 94 6a 0b 	jmp	0x16d4	; 0x16d4 <__epilogue_restores__+0x1c>

00001986 <__ultoa_invert>:
    1986:	fa 01       	movw	r30, r20
    1988:	aa 27       	eor	r26, r26
    198a:	28 30       	cpi	r18, 0x08	; 8
    198c:	51 f1       	breq	.+84     	; 0x19e2 <__ultoa_invert+0x5c>
    198e:	20 31       	cpi	r18, 0x10	; 16
    1990:	81 f1       	breq	.+96     	; 0x19f2 <__ultoa_invert+0x6c>
    1992:	e8 94       	clt
    1994:	6f 93       	push	r22
    1996:	6e 7f       	andi	r22, 0xFE	; 254
    1998:	6e 5f       	subi	r22, 0xFE	; 254
    199a:	7f 4f       	sbci	r23, 0xFF	; 255
    199c:	8f 4f       	sbci	r24, 0xFF	; 255
    199e:	9f 4f       	sbci	r25, 0xFF	; 255
    19a0:	af 4f       	sbci	r26, 0xFF	; 255
    19a2:	b1 e0       	ldi	r27, 0x01	; 1
    19a4:	3e d0       	rcall	.+124    	; 0x1a22 <__ultoa_invert+0x9c>
    19a6:	b4 e0       	ldi	r27, 0x04	; 4
    19a8:	3c d0       	rcall	.+120    	; 0x1a22 <__ultoa_invert+0x9c>
    19aa:	67 0f       	add	r22, r23
    19ac:	78 1f       	adc	r23, r24
    19ae:	89 1f       	adc	r24, r25
    19b0:	9a 1f       	adc	r25, r26
    19b2:	a1 1d       	adc	r26, r1
    19b4:	68 0f       	add	r22, r24
    19b6:	79 1f       	adc	r23, r25
    19b8:	8a 1f       	adc	r24, r26
    19ba:	91 1d       	adc	r25, r1
    19bc:	a1 1d       	adc	r26, r1
    19be:	6a 0f       	add	r22, r26
    19c0:	71 1d       	adc	r23, r1
    19c2:	81 1d       	adc	r24, r1
    19c4:	91 1d       	adc	r25, r1
    19c6:	a1 1d       	adc	r26, r1
    19c8:	20 d0       	rcall	.+64     	; 0x1a0a <__ultoa_invert+0x84>
    19ca:	09 f4       	brne	.+2      	; 0x19ce <__ultoa_invert+0x48>
    19cc:	68 94       	set
    19ce:	3f 91       	pop	r19
    19d0:	2a e0       	ldi	r18, 0x0A	; 10
    19d2:	26 9f       	mul	r18, r22
    19d4:	11 24       	eor	r1, r1
    19d6:	30 19       	sub	r19, r0
    19d8:	30 5d       	subi	r19, 0xD0	; 208
    19da:	31 93       	st	Z+, r19
    19dc:	de f6       	brtc	.-74     	; 0x1994 <__ultoa_invert+0xe>
    19de:	cf 01       	movw	r24, r30
    19e0:	08 95       	ret
    19e2:	46 2f       	mov	r20, r22
    19e4:	47 70       	andi	r20, 0x07	; 7
    19e6:	40 5d       	subi	r20, 0xD0	; 208
    19e8:	41 93       	st	Z+, r20
    19ea:	b3 e0       	ldi	r27, 0x03	; 3
    19ec:	0f d0       	rcall	.+30     	; 0x1a0c <__ultoa_invert+0x86>
    19ee:	c9 f7       	brne	.-14     	; 0x19e2 <__ultoa_invert+0x5c>
    19f0:	f6 cf       	rjmp	.-20     	; 0x19de <__ultoa_invert+0x58>
    19f2:	46 2f       	mov	r20, r22
    19f4:	4f 70       	andi	r20, 0x0F	; 15
    19f6:	40 5d       	subi	r20, 0xD0	; 208
    19f8:	4a 33       	cpi	r20, 0x3A	; 58
    19fa:	18 f0       	brcs	.+6      	; 0x1a02 <__ultoa_invert+0x7c>
    19fc:	49 5d       	subi	r20, 0xD9	; 217
    19fe:	31 fd       	sbrc	r19, 1
    1a00:	40 52       	subi	r20, 0x20	; 32
    1a02:	41 93       	st	Z+, r20
    1a04:	02 d0       	rcall	.+4      	; 0x1a0a <__ultoa_invert+0x84>
    1a06:	a9 f7       	brne	.-22     	; 0x19f2 <__ultoa_invert+0x6c>
    1a08:	ea cf       	rjmp	.-44     	; 0x19de <__ultoa_invert+0x58>
    1a0a:	b4 e0       	ldi	r27, 0x04	; 4
    1a0c:	a6 95       	lsr	r26
    1a0e:	97 95       	ror	r25
    1a10:	87 95       	ror	r24
    1a12:	77 95       	ror	r23
    1a14:	67 95       	ror	r22
    1a16:	ba 95       	dec	r27
    1a18:	c9 f7       	brne	.-14     	; 0x1a0c <__ultoa_invert+0x86>
    1a1a:	00 97       	sbiw	r24, 0x00	; 0
    1a1c:	61 05       	cpc	r22, r1
    1a1e:	71 05       	cpc	r23, r1
    1a20:	08 95       	ret
    1a22:	9b 01       	movw	r18, r22
    1a24:	ac 01       	movw	r20, r24
    1a26:	0a 2e       	mov	r0, r26
    1a28:	06 94       	lsr	r0
    1a2a:	57 95       	ror	r21
    1a2c:	47 95       	ror	r20
    1a2e:	37 95       	ror	r19
    1a30:	27 95       	ror	r18
    1a32:	ba 95       	dec	r27
    1a34:	c9 f7       	brne	.-14     	; 0x1a28 <__ultoa_invert+0xa2>
    1a36:	62 0f       	add	r22, r18
    1a38:	73 1f       	adc	r23, r19
    1a3a:	84 1f       	adc	r24, r20
    1a3c:	95 1f       	adc	r25, r21
    1a3e:	a0 1d       	adc	r26, r0
    1a40:	08 95       	ret

00001a42 <_exit>:
    1a42:	f8 94       	cli

00001a44 <__stop_program>:
    1a44:	ff cf       	rjmp	.-2      	; 0x1a44 <__stop_program>
