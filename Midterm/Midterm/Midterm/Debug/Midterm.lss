
Midterm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000013e  00800100  00000bee  00000c82  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  0080023e  0080023e  00000dc0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000dc0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e1c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000e5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e9a  00000000  00000000  00000ee4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a98  00000000  00000000  00001d7e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000577  00000000  00000000  00002816  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000015c  00000000  00000000  00002d90  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000550  00000000  00000000  00002eec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000025d  00000000  00000000  0000343c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00003699  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 80 00 	jmp	0x100	; 0x100 <__ctors_end>
   4:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
   8:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
   c:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  10:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  14:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  18:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  1c:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  20:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  24:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  28:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  2c:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  30:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  34:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  38:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  3c:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  40:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  44:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  48:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  4c:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  50:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  54:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  58:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  5c:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  60:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  64:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  68:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  6c:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  70:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  74:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  78:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  7c:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  80:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  84:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  88:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  8c:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  90:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  94:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  98:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  9c:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  a0:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  a4:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  a8:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  ac:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  b0:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__bad_interrupt>
  b4:	15 02       	muls	r17, r21
  b6:	fc 01       	movw	r30, r24
  b8:	fc 01       	movw	r30, r24
  ba:	fc 01       	movw	r30, r24
  bc:	fc 01       	movw	r30, r24
  be:	0f 02       	muls	r16, r31
  c0:	fc 01       	movw	r30, r24
  c2:	fc 01       	movw	r30, r24
  c4:	fc 01       	movw	r30, r24
  c6:	fc 01       	movw	r30, r24
  c8:	fc 01       	movw	r30, r24
  ca:	fc 01       	movw	r30, r24
  cc:	fc 01       	movw	r30, r24
  ce:	fc 01       	movw	r30, r24
  d0:	fc 01       	movw	r30, r24
  d2:	fc 01       	movw	r30, r24
  d4:	fc 01       	movw	r30, r24
  d6:	fc 01       	movw	r30, r24
  d8:	fc 01       	movw	r30, r24
  da:	fc 01       	movw	r30, r24
  dc:	fc 01       	movw	r30, r24
  de:	fc 01       	movw	r30, r24
  e0:	fc 01       	movw	r30, r24
  e2:	fc 01       	movw	r30, r24
  e4:	fc 01       	movw	r30, r24
  e6:	09 02       	muls	r16, r25
  e8:	1b 02       	muls	r17, r27
  ea:	fc 01       	movw	r30, r24
  ec:	fc 01       	movw	r30, r24
  ee:	fc 01       	movw	r30, r24
  f0:	fc 01       	movw	r30, r24
  f2:	fc 01       	movw	r30, r24
  f4:	12 02       	muls	r17, r18
  f6:	fc 01       	movw	r30, r24
  f8:	fc 01       	movw	r30, r24
  fa:	fc 01       	movw	r30, r24
  fc:	18 02       	muls	r17, r24
  fe:	0c 02       	muls	r16, r28

00000100 <__ctors_end>:
 100:	11 24       	eor	r1, r1
 102:	1f be       	out	0x3f, r1	; 63
 104:	cf ef       	ldi	r28, 0xFF	; 255
 106:	d8 e0       	ldi	r29, 0x08	; 8
 108:	de bf       	out	0x3e, r29	; 62
 10a:	cd bf       	out	0x3d, r28	; 61

0000010c <__do_copy_data>:
 10c:	12 e0       	ldi	r17, 0x02	; 2
 10e:	a0 e0       	ldi	r26, 0x00	; 0
 110:	b1 e0       	ldi	r27, 0x01	; 1
 112:	ee ee       	ldi	r30, 0xEE	; 238
 114:	fb e0       	ldi	r31, 0x0B	; 11
 116:	02 c0       	rjmp	.+4      	; 0x11c <__do_copy_data+0x10>
 118:	05 90       	lpm	r0, Z+
 11a:	0d 92       	st	X+, r0
 11c:	ae 33       	cpi	r26, 0x3E	; 62
 11e:	b1 07       	cpc	r27, r17
 120:	d9 f7       	brne	.-10     	; 0x118 <__do_copy_data+0xc>

00000122 <__do_clear_bss>:
 122:	22 e0       	ldi	r18, 0x02	; 2
 124:	ae e3       	ldi	r26, 0x3E	; 62
 126:	b2 e0       	ldi	r27, 0x02	; 2
 128:	01 c0       	rjmp	.+2      	; 0x12c <.do_clear_bss_start>

0000012a <.do_clear_bss_loop>:
 12a:	1d 92       	st	X+, r1

0000012c <.do_clear_bss_start>:
 12c:	a3 34       	cpi	r26, 0x43	; 67
 12e:	b2 07       	cpc	r27, r18
 130:	e1 f7       	brne	.-8      	; 0x12a <.do_clear_bss_loop>
 132:	0e 94 ed 01 	call	0x3da	; 0x3da <main>
 136:	0c 94 f5 05 	jmp	0xbea	; 0xbea <_exit>

0000013a <__bad_interrupt>:
 13a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000013e <time>:
 13e:	fc 01       	movw	r30, r24
 140:	0f b6       	in	r0, 0x3f	; 63
 142:	f8 94       	cli
 144:	60 91 3f 02 	lds	r22, 0x023F	; 0x80023f <__system_time>
 148:	70 91 40 02 	lds	r23, 0x0240	; 0x800240 <__system_time+0x1>
 14c:	80 91 41 02 	lds	r24, 0x0241	; 0x800241 <__system_time+0x2>
 150:	90 91 42 02 	lds	r25, 0x0242	; 0x800242 <__system_time+0x3>
 154:	0f be       	out	0x3f, r0	; 63
 156:	30 97       	sbiw	r30, 0x00	; 0
 158:	21 f0       	breq	.+8      	; 0x162 <time+0x24>
 15a:	60 83       	st	Z, r22
 15c:	71 83       	std	Z+1, r23	; 0x01
 15e:	82 83       	std	Z+2, r24	; 0x02
 160:	93 83       	std	Z+3, r25	; 0x03
 162:	08 95       	ret

00000164 <USART_init>:

volatile uint8_t temp;

void USART_init(void)
{
	UBRR0H = UBRRH_VALUE;
 164:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
	UBRR0L = UBRRL_VALUE;
 168:	87 e6       	ldi	r24, 0x67	; 103
 16a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00);		//8-bit data
 16e:	86 e0       	ldi	r24, 0x06	; 6
 170:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);		//enable receiver and transmitter
 174:	88 e1       	ldi	r24, 0x18	; 24
 176:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
 17a:	08 95       	ret

0000017c <adc_int>:
}

void adc_int(void)
{
	//setup and enable ADC
	ADMUX = (0 << REFS1) | //reference selection bits
 17c:	84 e4       	ldi	r24, 0x44	; 68
 17e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
			(1 << REFS0) |	//AVcc-external cap at AREF
			(0 << ADLAR) | //ADC left adjust result
			(1 << MUX2)  |	//analog chanel selection bits
			(0 << MUX1)  |	// ADC4(PC4)
			(0 << MUX0);
	ADCSRA = (1 << ADEN) |	// ADC enable
 182:	85 e8       	ldi	r24, 0x85	; 133
 184:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
 188:	08 95       	ret

0000018a <adc_read>:
			 (1 << ADPS0);
}

void adc_read(void)
{
	ADCSRA |= (1 << ADSC);		//enable start conversion
 18a:	ea e7       	ldi	r30, 0x7A	; 122
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	80 81       	ld	r24, Z
 190:	80 64       	ori	r24, 0x40	; 64
 192:	80 83       	st	Z, r24
	while(ADCSRA & (1<< ADSC));	//wait
 194:	80 81       	ld	r24, Z
 196:	86 fd       	sbrc	r24, 6
 198:	fd cf       	rjmp	.-6      	; 0x194 <adc_read+0xa>
	temp = ADC;	// LM35 value stored in temp.
 19a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
 19e:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
 1a2:	80 93 3e 02 	sts	0x023E, r24	; 0x80023e <__data_end>
 1a6:	08 95       	ret

000001a8 <USART_tx_string>:
}

//send some data to the serial port
void USART_tx_string(char* data)
{
 1a8:	cf 93       	push	r28
 1aa:	df 93       	push	r29
	while((*data !='\0'))
 1ac:	fc 01       	movw	r30, r24
 1ae:	20 81       	ld	r18, Z
 1b0:	22 23       	and	r18, r18
 1b2:	69 f0       	breq	.+26     	; 0x1ce <USART_tx_string+0x26>
 1b4:	dc 01       	movw	r26, r24
 1b6:	11 96       	adiw	r26, 0x01	; 1
	{
		while(!(UCSR0A & (1<<UDRE0)));
 1b8:	e0 ec       	ldi	r30, 0xC0	; 192
 1ba:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0 = *data;
 1bc:	c6 ec       	ldi	r28, 0xC6	; 198
 1be:	d0 e0       	ldi	r29, 0x00	; 0
//send some data to the serial port
void USART_tx_string(char* data)
{
	while((*data !='\0'))
	{
		while(!(UCSR0A & (1<<UDRE0)));
 1c0:	90 81       	ld	r25, Z
 1c2:	95 ff       	sbrs	r25, 5
 1c4:	fd cf       	rjmp	.-6      	; 0x1c0 <USART_tx_string+0x18>
		UDR0 = *data;
 1c6:	28 83       	st	Y, r18
}

//send some data to the serial port
void USART_tx_string(char* data)
{
	while((*data !='\0'))
 1c8:	2d 91       	ld	r18, X+
 1ca:	21 11       	cpse	r18, r1
 1cc:	f9 cf       	rjmp	.-14     	; 0x1c0 <USART_tx_string+0x18>
	{
		while(!(UCSR0A & (1<<UDRE0)));
		UDR0 = *data;
		data++;
	}
}
 1ce:	df 91       	pop	r29
 1d0:	cf 91       	pop	r28
 1d2:	08 95       	ret

000001d4 <USART_Receiver>:

char USART_Receiver()
{
	//wait for data to be received 
	while(!(UCSR0A & (1<< RXC0)));
 1d4:	e0 ec       	ldi	r30, 0xC0	; 192
 1d6:	f0 e0       	ldi	r31, 0x00	; 0
 1d8:	80 81       	ld	r24, Z
 1da:	88 23       	and	r24, r24
 1dc:	ec f7       	brge	.-6      	; 0x1d8 <USART_Receiver+0x4>
	//get and return received data from buffer
	return UDR0;
 1de:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	
}
 1e2:	08 95       	ret

000001e4 <display_help>:

void display_help()
{
		USART_tx_string("***'t' display temperature in Celsius.\n");
 1e4:	84 e0       	ldi	r24, 0x04	; 4
 1e6:	91 e0       	ldi	r25, 0x01	; 1
 1e8:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
		USART_tx_string("***'T' display temperature in Farenthide.\n");
 1ec:	8c e2       	ldi	r24, 0x2C	; 44
 1ee:	91 e0       	ldi	r25, 0x01	; 1
 1f0:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
		USART_tx_string("***'o' turns ON LED at PB5.\n***'O' turns OFF the LED at PB5.\n");
 1f4:	87 e5       	ldi	r24, 0x57	; 87
 1f6:	91 e0       	ldi	r25, 0x01	; 1
 1f8:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
		USART_tx_string("***'s' sends a string to the terminal.\n");
 1fc:	85 e9       	ldi	r24, 0x95	; 149
 1fe:	91 e0       	ldi	r25, 0x01	; 1
 200:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
		USART_tx_string("***'i' sends an integer to the terminal.\n");
 204:	8d eb       	ldi	r24, 0xBD	; 189
 206:	91 e0       	ldi	r25, 0x01	; 1
 208:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
		USART_tx_string("Press 'h' key to display again the help table.\n");
 20c:	87 ee       	ldi	r24, 0xE7	; 231
 20e:	91 e0       	ldi	r25, 0x01	; 1
 210:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
 214:	08 95       	ret

00000216 <display_tem_c>:
}

void display_tem_c()
{
 216:	0f 93       	push	r16
 218:	1f 93       	push	r17
 21a:	cf 93       	push	r28
 21c:	df 93       	push	r29
 21e:	cd b7       	in	r28, 0x3d	; 61
 220:	de b7       	in	r29, 0x3e	; 62
 222:	64 97       	sbiw	r28, 0x14	; 20
 224:	0f b6       	in	r0, 0x3f	; 63
 226:	f8 94       	cli
 228:	de bf       	out	0x3e, r29	; 62
 22a:	0f be       	out	0x3f, r0	; 63
 22c:	cd bf       	out	0x3d, r28	; 61
	adc_read();
 22e:	0e 94 c5 00 	call	0x18a	; 0x18a <adc_read>
	char array1[20];
	int celsius = (temp - 32) * 5 / 9;
 232:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <__data_end>
	sprintf(array1,"%i", celsius );
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	80 97       	sbiw	r24, 0x20	; 32
 23a:	9c 01       	movw	r18, r24
 23c:	22 0f       	add	r18, r18
 23e:	33 1f       	adc	r19, r19
 240:	22 0f       	add	r18, r18
 242:	33 1f       	adc	r19, r19
 244:	82 0f       	add	r24, r18
 246:	93 1f       	adc	r25, r19
 248:	69 e0       	ldi	r22, 0x09	; 9
 24a:	70 e0       	ldi	r23, 0x00	; 0
 24c:	0e 94 1e 02 	call	0x43c	; 0x43c <__divmodhi4>
 250:	7f 93       	push	r23
 252:	6f 93       	push	r22
 254:	87 e1       	ldi	r24, 0x17	; 23
 256:	92 e0       	ldi	r25, 0x02	; 2
 258:	9f 93       	push	r25
 25a:	8f 93       	push	r24
 25c:	8e 01       	movw	r16, r28
 25e:	0f 5f       	subi	r16, 0xFF	; 255
 260:	1f 4f       	sbci	r17, 0xFF	; 255
 262:	1f 93       	push	r17
 264:	0f 93       	push	r16
 266:	0e 94 a8 02 	call	0x550	; 0x550 <sprintf>
	USART_tx_string("Temperature: ");
 26a:	8a e1       	ldi	r24, 0x1A	; 26
 26c:	92 e0       	ldi	r25, 0x02	; 2
 26e:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
	USART_tx_string(array1);
 272:	c8 01       	movw	r24, r16
 274:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
	USART_tx_string(" C\n");
 278:	88 e2       	ldi	r24, 0x28	; 40
 27a:	92 e0       	ldi	r25, 0x02	; 2
 27c:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
}
 280:	0f 90       	pop	r0
 282:	0f 90       	pop	r0
 284:	0f 90       	pop	r0
 286:	0f 90       	pop	r0
 288:	0f 90       	pop	r0
 28a:	0f 90       	pop	r0
 28c:	64 96       	adiw	r28, 0x14	; 20
 28e:	0f b6       	in	r0, 0x3f	; 63
 290:	f8 94       	cli
 292:	de bf       	out	0x3e, r29	; 62
 294:	0f be       	out	0x3f, r0	; 63
 296:	cd bf       	out	0x3d, r28	; 61
 298:	df 91       	pop	r29
 29a:	cf 91       	pop	r28
 29c:	1f 91       	pop	r17
 29e:	0f 91       	pop	r16
 2a0:	08 95       	ret

000002a2 <display_tem_t>:

void display_tem_t()
{
 2a2:	0f 93       	push	r16
 2a4:	1f 93       	push	r17
 2a6:	cf 93       	push	r28
 2a8:	df 93       	push	r29
 2aa:	cd b7       	in	r28, 0x3d	; 61
 2ac:	de b7       	in	r29, 0x3e	; 62
 2ae:	64 97       	sbiw	r28, 0x14	; 20
 2b0:	0f b6       	in	r0, 0x3f	; 63
 2b2:	f8 94       	cli
 2b4:	de bf       	out	0x3e, r29	; 62
 2b6:	0f be       	out	0x3f, r0	; 63
 2b8:	cd bf       	out	0x3d, r28	; 61
	adc_read();
 2ba:	0e 94 c5 00 	call	0x18a	; 0x18a <adc_read>
	char array1[20];
	sprintf(array1,"%i", temp);
 2be:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <__data_end>
 2c2:	1f 92       	push	r1
 2c4:	8f 93       	push	r24
 2c6:	87 e1       	ldi	r24, 0x17	; 23
 2c8:	92 e0       	ldi	r25, 0x02	; 2
 2ca:	9f 93       	push	r25
 2cc:	8f 93       	push	r24
 2ce:	8e 01       	movw	r16, r28
 2d0:	0f 5f       	subi	r16, 0xFF	; 255
 2d2:	1f 4f       	sbci	r17, 0xFF	; 255
 2d4:	1f 93       	push	r17
 2d6:	0f 93       	push	r16
 2d8:	0e 94 a8 02 	call	0x550	; 0x550 <sprintf>
	USART_tx_string("Temperature: ");
 2dc:	8a e1       	ldi	r24, 0x1A	; 26
 2de:	92 e0       	ldi	r25, 0x02	; 2
 2e0:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
	USART_tx_string(array1);
 2e4:	c8 01       	movw	r24, r16
 2e6:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
	USART_tx_string(" F\n");
 2ea:	8c e2       	ldi	r24, 0x2C	; 44
 2ec:	92 e0       	ldi	r25, 0x02	; 2
 2ee:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
}
 2f2:	0f 90       	pop	r0
 2f4:	0f 90       	pop	r0
 2f6:	0f 90       	pop	r0
 2f8:	0f 90       	pop	r0
 2fa:	0f 90       	pop	r0
 2fc:	0f 90       	pop	r0
 2fe:	64 96       	adiw	r28, 0x14	; 20
 300:	0f b6       	in	r0, 0x3f	; 63
 302:	f8 94       	cli
 304:	de bf       	out	0x3e, r29	; 62
 306:	0f be       	out	0x3f, r0	; 63
 308:	cd bf       	out	0x3d, r28	; 61
 30a:	df 91       	pop	r29
 30c:	cf 91       	pop	r28
 30e:	1f 91       	pop	r17
 310:	0f 91       	pop	r16
 312:	08 95       	ret

00000314 <turn_on>:

void turn_on()
{
	PORTB &= ~(1 << 5);  //Turn LED on
 314:	2d 98       	cbi	0x05, 5	; 5
 316:	08 95       	ret

00000318 <turn_off>:
}

void turn_off()
{
	PORTB |= (1 << 5);	//Turn LED off
 318:	2d 9a       	sbi	0x05, 5	; 5
 31a:	08 95       	ret

0000031c <send_str>:
}

void send_str()
{
	USART_tx_string("Hello World!\n");		//send "Hello World" to terminal
 31c:	80 e3       	ldi	r24, 0x30	; 48
 31e:	92 e0       	ldi	r25, 0x02	; 2
 320:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
 324:	08 95       	ret

00000326 <my_delay_ms>:
}

void my_delay_ms(int n) {
	while(n--) {
 326:	00 97       	sbiw	r24, 0x00	; 0
 328:	41 f0       	breq	.+16     	; 0x33a <my_delay_ms+0x14>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 32a:	ef e9       	ldi	r30, 0x9F	; 159
 32c:	ff e0       	ldi	r31, 0x0F	; 15
 32e:	31 97       	sbiw	r30, 0x01	; 1
 330:	f1 f7       	brne	.-4      	; 0x32e <my_delay_ms+0x8>
 332:	00 c0       	rjmp	.+0      	; 0x334 <my_delay_ms+0xe>
 334:	00 00       	nop
 336:	01 97       	sbiw	r24, 0x01	; 1
 338:	c1 f7       	brne	.-16     	; 0x32a <my_delay_ms+0x4>
 33a:	08 95       	ret

0000033c <send_int>:
		_delay_ms(1);
	}
}

void send_int()
{
 33c:	ef 92       	push	r14
 33e:	ff 92       	push	r15
 340:	0f 93       	push	r16
 342:	1f 93       	push	r17
 344:	cf 93       	push	r28
 346:	df 93       	push	r29
 348:	cd b7       	in	r28, 0x3d	; 61
 34a:	de b7       	in	r29, 0x3e	; 62
 34c:	64 97       	sbiw	r28, 0x14	; 20
 34e:	0f b6       	in	r0, 0x3f	; 63
 350:	f8 94       	cli
 352:	de bf       	out	0x3e, r29	; 62
 354:	0f be       	out	0x3f, r0	; 63
 356:	cd bf       	out	0x3d, r28	; 61
	int delay = (rand() % 3 + 1) * 1000;		//generate random numbers of 1000, 2000, 3000 for delay in ms
 358:	0e 94 98 02 	call	0x530	; 0x530 <rand>
 35c:	63 e0       	ldi	r22, 0x03	; 3
 35e:	70 e0       	ldi	r23, 0x00	; 0
 360:	0e 94 1e 02 	call	0x43c	; 0x43c <__divmodhi4>
 364:	01 96       	adiw	r24, 0x01	; 1
 366:	28 ee       	ldi	r18, 0xE8	; 232
 368:	33 e0       	ldi	r19, 0x03	; 3
 36a:	82 9f       	mul	r24, r18
 36c:	80 01       	movw	r16, r0
 36e:	83 9f       	mul	r24, r19
 370:	10 0d       	add	r17, r0
 372:	92 9f       	mul	r25, r18
 374:	10 0d       	add	r17, r0
 376:	11 24       	eor	r1, r1
	char array1[20];
	sprintf(array1, "%i", delay);
 378:	1f 93       	push	r17
 37a:	0f 93       	push	r16
 37c:	87 e1       	ldi	r24, 0x17	; 23
 37e:	92 e0       	ldi	r25, 0x02	; 2
 380:	9f 93       	push	r25
 382:	8f 93       	push	r24
 384:	ce 01       	movw	r24, r28
 386:	01 96       	adiw	r24, 0x01	; 1
 388:	7c 01       	movw	r14, r24
 38a:	9f 93       	push	r25
 38c:	8f 93       	push	r24
 38e:	0e 94 a8 02 	call	0x550	; 0x550 <sprintf>
	USART_tx_string(array1);
 392:	c7 01       	movw	r24, r14
 394:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
	USART_tx_string("\n");
 398:	8c e3       	ldi	r24, 0x3C	; 60
 39a:	92 e0       	ldi	r25, 0x02	; 2
 39c:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <USART_tx_string>
	turn_on();
 3a0:	0e 94 8a 01 	call	0x314	; 0x314 <turn_on>
	my_delay_ms(delay);
 3a4:	c8 01       	movw	r24, r16
 3a6:	0e 94 93 01 	call	0x326	; 0x326 <my_delay_ms>
	turn_off();
 3aa:	0e 94 8c 01 	call	0x318	; 0x318 <turn_off>
	my_delay_ms(delay);
 3ae:	c8 01       	movw	r24, r16
 3b0:	0e 94 93 01 	call	0x326	; 0x326 <my_delay_ms>
}
 3b4:	0f 90       	pop	r0
 3b6:	0f 90       	pop	r0
 3b8:	0f 90       	pop	r0
 3ba:	0f 90       	pop	r0
 3bc:	0f 90       	pop	r0
 3be:	0f 90       	pop	r0
 3c0:	64 96       	adiw	r28, 0x14	; 20
 3c2:	0f b6       	in	r0, 0x3f	; 63
 3c4:	f8 94       	cli
 3c6:	de bf       	out	0x3e, r29	; 62
 3c8:	0f be       	out	0x3f, r0	; 63
 3ca:	cd bf       	out	0x3d, r28	; 61
 3cc:	df 91       	pop	r29
 3ce:	cf 91       	pop	r28
 3d0:	1f 91       	pop	r17
 3d2:	0f 91       	pop	r16
 3d4:	ff 90       	pop	r15
 3d6:	ef 90       	pop	r14
 3d8:	08 95       	ret

000003da <main>:
int main(void)
{
	srand(time(NULL));
 3da:	80 e0       	ldi	r24, 0x00	; 0
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	0e 94 9f 00 	call	0x13e	; 0x13e <time>
 3e2:	cb 01       	movw	r24, r22
 3e4:	0e 94 9d 02 	call	0x53a	; 0x53a <srand>
    /* Replace with your application code */
	USART_init();		//initialized USART module
 3e8:	0e 94 b2 00 	call	0x164	; 0x164 <USART_init>
	adc_int();			//initialized ADC module
 3ec:	0e 94 be 00 	call	0x17c	; 0x17c <adc_int>
	DDRB |= (1 << 5); //set PORTB.5 as output
 3f0:	25 9a       	sbi	0x04, 5	; 4
	PORTB |= (1 << 5);	//pull up;
 3f2:	2d 9a       	sbi	0x05, 5	; 5
	display_help();
 3f4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <display_help>
    while (1) 
    {
		switch(USART_Receiver())
 3f8:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <USART_Receiver>
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	fc 01       	movw	r30, r24
 400:	ef 54       	subi	r30, 0x4F	; 79
 402:	f1 09       	sbc	r31, r1
 404:	e6 32       	cpi	r30, 0x26	; 38
 406:	f1 05       	cpc	r31, r1
 408:	b8 f7       	brcc	.-18     	; 0x3f8 <main+0x1e>
 40a:	e6 5a       	subi	r30, 0xA6	; 166
 40c:	ff 4f       	sbci	r31, 0xFF	; 255
 40e:	0c 94 32 02 	jmp	0x464	; 0x464 <__tablejump2__>
		{
			case 'h':
				display_help();			//display help table
 412:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <display_help>
			break;
 416:	f0 cf       	rjmp	.-32     	; 0x3f8 <main+0x1e>
			case 't':
				display_tem_c();		//display temperature in C
 418:	0e 94 0b 01 	call	0x216	; 0x216 <display_tem_c>
			break;
 41c:	ed cf       	rjmp	.-38     	; 0x3f8 <main+0x1e>
			case 'T':
				display_tem_t();		//display temperature in F
 41e:	0e 94 51 01 	call	0x2a2	; 0x2a2 <display_tem_t>
			break;
 422:	ea cf       	rjmp	.-44     	; 0x3f8 <main+0x1e>
			case 'o':		
				turn_on();				//turn on LED
 424:	0e 94 8a 01 	call	0x314	; 0x314 <turn_on>
			break;
 428:	e7 cf       	rjmp	.-50     	; 0x3f8 <main+0x1e>
			case 'O':
				turn_off();				//turn off LED
 42a:	0e 94 8c 01 	call	0x318	; 0x318 <turn_off>
			break;
 42e:	e4 cf       	rjmp	.-56     	; 0x3f8 <main+0x1e>
			case 's':
				send_str();				//send string
 430:	0e 94 8e 01 	call	0x31c	; 0x31c <send_str>
			break;
 434:	e1 cf       	rjmp	.-62     	; 0x3f8 <main+0x1e>
			case 'i':
				send_int();
 436:	0e 94 9e 01 	call	0x33c	; 0x33c <send_int>
			break;
 43a:	de cf       	rjmp	.-68     	; 0x3f8 <main+0x1e>

0000043c <__divmodhi4>:
 43c:	97 fb       	bst	r25, 7
 43e:	07 2e       	mov	r0, r23
 440:	16 f4       	brtc	.+4      	; 0x446 <__divmodhi4+0xa>
 442:	00 94       	com	r0
 444:	07 d0       	rcall	.+14     	; 0x454 <__divmodhi4_neg1>
 446:	77 fd       	sbrc	r23, 7
 448:	09 d0       	rcall	.+18     	; 0x45c <__divmodhi4_neg2>
 44a:	0e 94 38 02 	call	0x470	; 0x470 <__udivmodhi4>
 44e:	07 fc       	sbrc	r0, 7
 450:	05 d0       	rcall	.+10     	; 0x45c <__divmodhi4_neg2>
 452:	3e f4       	brtc	.+14     	; 0x462 <__divmodhi4_exit>

00000454 <__divmodhi4_neg1>:
 454:	90 95       	com	r25
 456:	81 95       	neg	r24
 458:	9f 4f       	sbci	r25, 0xFF	; 255
 45a:	08 95       	ret

0000045c <__divmodhi4_neg2>:
 45c:	70 95       	com	r23
 45e:	61 95       	neg	r22
 460:	7f 4f       	sbci	r23, 0xFF	; 255

00000462 <__divmodhi4_exit>:
 462:	08 95       	ret

00000464 <__tablejump2__>:
 464:	ee 0f       	add	r30, r30
 466:	ff 1f       	adc	r31, r31
 468:	05 90       	lpm	r0, Z+
 46a:	f4 91       	lpm	r31, Z
 46c:	e0 2d       	mov	r30, r0
 46e:	09 94       	ijmp

00000470 <__udivmodhi4>:
 470:	aa 1b       	sub	r26, r26
 472:	bb 1b       	sub	r27, r27
 474:	51 e1       	ldi	r21, 0x11	; 17
 476:	07 c0       	rjmp	.+14     	; 0x486 <__udivmodhi4_ep>

00000478 <__udivmodhi4_loop>:
 478:	aa 1f       	adc	r26, r26
 47a:	bb 1f       	adc	r27, r27
 47c:	a6 17       	cp	r26, r22
 47e:	b7 07       	cpc	r27, r23
 480:	10 f0       	brcs	.+4      	; 0x486 <__udivmodhi4_ep>
 482:	a6 1b       	sub	r26, r22
 484:	b7 0b       	sbc	r27, r23

00000486 <__udivmodhi4_ep>:
 486:	88 1f       	adc	r24, r24
 488:	99 1f       	adc	r25, r25
 48a:	5a 95       	dec	r21
 48c:	a9 f7       	brne	.-22     	; 0x478 <__udivmodhi4_loop>
 48e:	80 95       	com	r24
 490:	90 95       	com	r25
 492:	bc 01       	movw	r22, r24
 494:	cd 01       	movw	r24, r26
 496:	08 95       	ret

00000498 <do_rand>:
 498:	8f 92       	push	r8
 49a:	9f 92       	push	r9
 49c:	af 92       	push	r10
 49e:	bf 92       	push	r11
 4a0:	cf 92       	push	r12
 4a2:	df 92       	push	r13
 4a4:	ef 92       	push	r14
 4a6:	ff 92       	push	r15
 4a8:	cf 93       	push	r28
 4aa:	df 93       	push	r29
 4ac:	ec 01       	movw	r28, r24
 4ae:	68 81       	ld	r22, Y
 4b0:	79 81       	ldd	r23, Y+1	; 0x01
 4b2:	8a 81       	ldd	r24, Y+2	; 0x02
 4b4:	9b 81       	ldd	r25, Y+3	; 0x03
 4b6:	61 15       	cp	r22, r1
 4b8:	71 05       	cpc	r23, r1
 4ba:	81 05       	cpc	r24, r1
 4bc:	91 05       	cpc	r25, r1
 4be:	21 f4       	brne	.+8      	; 0x4c8 <do_rand+0x30>
 4c0:	64 e2       	ldi	r22, 0x24	; 36
 4c2:	79 ed       	ldi	r23, 0xD9	; 217
 4c4:	8b e5       	ldi	r24, 0x5B	; 91
 4c6:	97 e0       	ldi	r25, 0x07	; 7
 4c8:	2d e1       	ldi	r18, 0x1D	; 29
 4ca:	33 ef       	ldi	r19, 0xF3	; 243
 4cc:	41 e0       	ldi	r20, 0x01	; 1
 4ce:	50 e0       	ldi	r21, 0x00	; 0
 4d0:	0e 94 5b 05 	call	0xab6	; 0xab6 <__divmodsi4>
 4d4:	49 01       	movw	r8, r18
 4d6:	5a 01       	movw	r10, r20
 4d8:	9b 01       	movw	r18, r22
 4da:	ac 01       	movw	r20, r24
 4dc:	a7 ea       	ldi	r26, 0xA7	; 167
 4de:	b1 e4       	ldi	r27, 0x41	; 65
 4e0:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <__muluhisi3>
 4e4:	6b 01       	movw	r12, r22
 4e6:	7c 01       	movw	r14, r24
 4e8:	ac ee       	ldi	r26, 0xEC	; 236
 4ea:	b4 ef       	ldi	r27, 0xF4	; 244
 4ec:	a5 01       	movw	r20, r10
 4ee:	94 01       	movw	r18, r8
 4f0:	0e 94 88 05 	call	0xb10	; 0xb10 <__mulohisi3>
 4f4:	dc 01       	movw	r26, r24
 4f6:	cb 01       	movw	r24, r22
 4f8:	8c 0d       	add	r24, r12
 4fa:	9d 1d       	adc	r25, r13
 4fc:	ae 1d       	adc	r26, r14
 4fe:	bf 1d       	adc	r27, r15
 500:	b7 ff       	sbrs	r27, 7
 502:	03 c0       	rjmp	.+6      	; 0x50a <do_rand+0x72>
 504:	01 97       	sbiw	r24, 0x01	; 1
 506:	a1 09       	sbc	r26, r1
 508:	b0 48       	sbci	r27, 0x80	; 128
 50a:	88 83       	st	Y, r24
 50c:	99 83       	std	Y+1, r25	; 0x01
 50e:	aa 83       	std	Y+2, r26	; 0x02
 510:	bb 83       	std	Y+3, r27	; 0x03
 512:	9f 77       	andi	r25, 0x7F	; 127
 514:	df 91       	pop	r29
 516:	cf 91       	pop	r28
 518:	ff 90       	pop	r15
 51a:	ef 90       	pop	r14
 51c:	df 90       	pop	r13
 51e:	cf 90       	pop	r12
 520:	bf 90       	pop	r11
 522:	af 90       	pop	r10
 524:	9f 90       	pop	r9
 526:	8f 90       	pop	r8
 528:	08 95       	ret

0000052a <rand_r>:
 52a:	0e 94 4c 02 	call	0x498	; 0x498 <do_rand>
 52e:	08 95       	ret

00000530 <rand>:
 530:	80 e0       	ldi	r24, 0x00	; 0
 532:	91 e0       	ldi	r25, 0x01	; 1
 534:	0e 94 4c 02 	call	0x498	; 0x498 <do_rand>
 538:	08 95       	ret

0000053a <srand>:
 53a:	a0 e0       	ldi	r26, 0x00	; 0
 53c:	b0 e0       	ldi	r27, 0x00	; 0
 53e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 542:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 546:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 54a:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
 54e:	08 95       	ret

00000550 <sprintf>:
 550:	ae e0       	ldi	r26, 0x0E	; 14
 552:	b0 e0       	ldi	r27, 0x00	; 0
 554:	ee ea       	ldi	r30, 0xAE	; 174
 556:	f2 e0       	ldi	r31, 0x02	; 2
 558:	0c 94 9b 05 	jmp	0xb36	; 0xb36 <__prologue_saves__+0x1c>
 55c:	0d 89       	ldd	r16, Y+21	; 0x15
 55e:	1e 89       	ldd	r17, Y+22	; 0x16
 560:	86 e0       	ldi	r24, 0x06	; 6
 562:	8c 83       	std	Y+4, r24	; 0x04
 564:	1a 83       	std	Y+2, r17	; 0x02
 566:	09 83       	std	Y+1, r16	; 0x01
 568:	8f ef       	ldi	r24, 0xFF	; 255
 56a:	9f e7       	ldi	r25, 0x7F	; 127
 56c:	9e 83       	std	Y+6, r25	; 0x06
 56e:	8d 83       	std	Y+5, r24	; 0x05
 570:	ae 01       	movw	r20, r28
 572:	47 5e       	subi	r20, 0xE7	; 231
 574:	5f 4f       	sbci	r21, 0xFF	; 255
 576:	6f 89       	ldd	r22, Y+23	; 0x17
 578:	78 8d       	ldd	r23, Y+24	; 0x18
 57a:	ce 01       	movw	r24, r28
 57c:	01 96       	adiw	r24, 0x01	; 1
 57e:	0e 94 ca 02 	call	0x594	; 0x594 <vfprintf>
 582:	ef 81       	ldd	r30, Y+7	; 0x07
 584:	f8 85       	ldd	r31, Y+8	; 0x08
 586:	e0 0f       	add	r30, r16
 588:	f1 1f       	adc	r31, r17
 58a:	10 82       	st	Z, r1
 58c:	2e 96       	adiw	r28, 0x0e	; 14
 58e:	e4 e0       	ldi	r30, 0x04	; 4
 590:	0c 94 b7 05 	jmp	0xb6e	; 0xb6e <__epilogue_restores__+0x1c>

00000594 <vfprintf>:
 594:	ab e0       	ldi	r26, 0x0B	; 11
 596:	b0 e0       	ldi	r27, 0x00	; 0
 598:	e0 ed       	ldi	r30, 0xD0	; 208
 59a:	f2 e0       	ldi	r31, 0x02	; 2
 59c:	0c 94 8d 05 	jmp	0xb1a	; 0xb1a <__prologue_saves__>
 5a0:	6c 01       	movw	r12, r24
 5a2:	7b 01       	movw	r14, r22
 5a4:	8a 01       	movw	r16, r20
 5a6:	fc 01       	movw	r30, r24
 5a8:	17 82       	std	Z+7, r1	; 0x07
 5aa:	16 82       	std	Z+6, r1	; 0x06
 5ac:	83 81       	ldd	r24, Z+3	; 0x03
 5ae:	81 ff       	sbrs	r24, 1
 5b0:	cc c1       	rjmp	.+920    	; 0x94a <__stack+0x4b>
 5b2:	ce 01       	movw	r24, r28
 5b4:	01 96       	adiw	r24, 0x01	; 1
 5b6:	3c 01       	movw	r6, r24
 5b8:	f6 01       	movw	r30, r12
 5ba:	93 81       	ldd	r25, Z+3	; 0x03
 5bc:	f7 01       	movw	r30, r14
 5be:	93 fd       	sbrc	r25, 3
 5c0:	85 91       	lpm	r24, Z+
 5c2:	93 ff       	sbrs	r25, 3
 5c4:	81 91       	ld	r24, Z+
 5c6:	7f 01       	movw	r14, r30
 5c8:	88 23       	and	r24, r24
 5ca:	09 f4       	brne	.+2      	; 0x5ce <vfprintf+0x3a>
 5cc:	ba c1       	rjmp	.+884    	; 0x942 <__stack+0x43>
 5ce:	85 32       	cpi	r24, 0x25	; 37
 5d0:	39 f4       	brne	.+14     	; 0x5e0 <vfprintf+0x4c>
 5d2:	93 fd       	sbrc	r25, 3
 5d4:	85 91       	lpm	r24, Z+
 5d6:	93 ff       	sbrs	r25, 3
 5d8:	81 91       	ld	r24, Z+
 5da:	7f 01       	movw	r14, r30
 5dc:	85 32       	cpi	r24, 0x25	; 37
 5de:	29 f4       	brne	.+10     	; 0x5ea <vfprintf+0x56>
 5e0:	b6 01       	movw	r22, r12
 5e2:	90 e0       	ldi	r25, 0x00	; 0
 5e4:	0e 94 c1 04 	call	0x982	; 0x982 <fputc>
 5e8:	e7 cf       	rjmp	.-50     	; 0x5b8 <vfprintf+0x24>
 5ea:	91 2c       	mov	r9, r1
 5ec:	21 2c       	mov	r2, r1
 5ee:	31 2c       	mov	r3, r1
 5f0:	ff e1       	ldi	r31, 0x1F	; 31
 5f2:	f3 15       	cp	r31, r3
 5f4:	d8 f0       	brcs	.+54     	; 0x62c <vfprintf+0x98>
 5f6:	8b 32       	cpi	r24, 0x2B	; 43
 5f8:	79 f0       	breq	.+30     	; 0x618 <vfprintf+0x84>
 5fa:	38 f4       	brcc	.+14     	; 0x60a <vfprintf+0x76>
 5fc:	80 32       	cpi	r24, 0x20	; 32
 5fe:	79 f0       	breq	.+30     	; 0x61e <vfprintf+0x8a>
 600:	83 32       	cpi	r24, 0x23	; 35
 602:	a1 f4       	brne	.+40     	; 0x62c <vfprintf+0x98>
 604:	23 2d       	mov	r18, r3
 606:	20 61       	ori	r18, 0x10	; 16
 608:	1d c0       	rjmp	.+58     	; 0x644 <vfprintf+0xb0>
 60a:	8d 32       	cpi	r24, 0x2D	; 45
 60c:	61 f0       	breq	.+24     	; 0x626 <vfprintf+0x92>
 60e:	80 33       	cpi	r24, 0x30	; 48
 610:	69 f4       	brne	.+26     	; 0x62c <vfprintf+0x98>
 612:	23 2d       	mov	r18, r3
 614:	21 60       	ori	r18, 0x01	; 1
 616:	16 c0       	rjmp	.+44     	; 0x644 <vfprintf+0xb0>
 618:	83 2d       	mov	r24, r3
 61a:	82 60       	ori	r24, 0x02	; 2
 61c:	38 2e       	mov	r3, r24
 61e:	e3 2d       	mov	r30, r3
 620:	e4 60       	ori	r30, 0x04	; 4
 622:	3e 2e       	mov	r3, r30
 624:	2a c0       	rjmp	.+84     	; 0x67a <vfprintf+0xe6>
 626:	f3 2d       	mov	r31, r3
 628:	f8 60       	ori	r31, 0x08	; 8
 62a:	1d c0       	rjmp	.+58     	; 0x666 <vfprintf+0xd2>
 62c:	37 fc       	sbrc	r3, 7
 62e:	2d c0       	rjmp	.+90     	; 0x68a <vfprintf+0xf6>
 630:	20 ed       	ldi	r18, 0xD0	; 208
 632:	28 0f       	add	r18, r24
 634:	2a 30       	cpi	r18, 0x0A	; 10
 636:	40 f0       	brcs	.+16     	; 0x648 <vfprintf+0xb4>
 638:	8e 32       	cpi	r24, 0x2E	; 46
 63a:	b9 f4       	brne	.+46     	; 0x66a <vfprintf+0xd6>
 63c:	36 fc       	sbrc	r3, 6
 63e:	81 c1       	rjmp	.+770    	; 0x942 <__stack+0x43>
 640:	23 2d       	mov	r18, r3
 642:	20 64       	ori	r18, 0x40	; 64
 644:	32 2e       	mov	r3, r18
 646:	19 c0       	rjmp	.+50     	; 0x67a <vfprintf+0xe6>
 648:	36 fe       	sbrs	r3, 6
 64a:	06 c0       	rjmp	.+12     	; 0x658 <vfprintf+0xc4>
 64c:	8a e0       	ldi	r24, 0x0A	; 10
 64e:	98 9e       	mul	r9, r24
 650:	20 0d       	add	r18, r0
 652:	11 24       	eor	r1, r1
 654:	92 2e       	mov	r9, r18
 656:	11 c0       	rjmp	.+34     	; 0x67a <vfprintf+0xe6>
 658:	ea e0       	ldi	r30, 0x0A	; 10
 65a:	2e 9e       	mul	r2, r30
 65c:	20 0d       	add	r18, r0
 65e:	11 24       	eor	r1, r1
 660:	22 2e       	mov	r2, r18
 662:	f3 2d       	mov	r31, r3
 664:	f0 62       	ori	r31, 0x20	; 32
 666:	3f 2e       	mov	r3, r31
 668:	08 c0       	rjmp	.+16     	; 0x67a <vfprintf+0xe6>
 66a:	8c 36       	cpi	r24, 0x6C	; 108
 66c:	21 f4       	brne	.+8      	; 0x676 <vfprintf+0xe2>
 66e:	83 2d       	mov	r24, r3
 670:	80 68       	ori	r24, 0x80	; 128
 672:	38 2e       	mov	r3, r24
 674:	02 c0       	rjmp	.+4      	; 0x67a <vfprintf+0xe6>
 676:	88 36       	cpi	r24, 0x68	; 104
 678:	41 f4       	brne	.+16     	; 0x68a <vfprintf+0xf6>
 67a:	f7 01       	movw	r30, r14
 67c:	93 fd       	sbrc	r25, 3
 67e:	85 91       	lpm	r24, Z+
 680:	93 ff       	sbrs	r25, 3
 682:	81 91       	ld	r24, Z+
 684:	7f 01       	movw	r14, r30
 686:	81 11       	cpse	r24, r1
 688:	b3 cf       	rjmp	.-154    	; 0x5f0 <vfprintf+0x5c>
 68a:	98 2f       	mov	r25, r24
 68c:	9f 7d       	andi	r25, 0xDF	; 223
 68e:	95 54       	subi	r25, 0x45	; 69
 690:	93 30       	cpi	r25, 0x03	; 3
 692:	28 f4       	brcc	.+10     	; 0x69e <vfprintf+0x10a>
 694:	0c 5f       	subi	r16, 0xFC	; 252
 696:	1f 4f       	sbci	r17, 0xFF	; 255
 698:	9f e3       	ldi	r25, 0x3F	; 63
 69a:	99 83       	std	Y+1, r25	; 0x01
 69c:	0d c0       	rjmp	.+26     	; 0x6b8 <vfprintf+0x124>
 69e:	83 36       	cpi	r24, 0x63	; 99
 6a0:	31 f0       	breq	.+12     	; 0x6ae <vfprintf+0x11a>
 6a2:	83 37       	cpi	r24, 0x73	; 115
 6a4:	71 f0       	breq	.+28     	; 0x6c2 <vfprintf+0x12e>
 6a6:	83 35       	cpi	r24, 0x53	; 83
 6a8:	09 f0       	breq	.+2      	; 0x6ac <vfprintf+0x118>
 6aa:	59 c0       	rjmp	.+178    	; 0x75e <vfprintf+0x1ca>
 6ac:	21 c0       	rjmp	.+66     	; 0x6f0 <vfprintf+0x15c>
 6ae:	f8 01       	movw	r30, r16
 6b0:	80 81       	ld	r24, Z
 6b2:	89 83       	std	Y+1, r24	; 0x01
 6b4:	0e 5f       	subi	r16, 0xFE	; 254
 6b6:	1f 4f       	sbci	r17, 0xFF	; 255
 6b8:	88 24       	eor	r8, r8
 6ba:	83 94       	inc	r8
 6bc:	91 2c       	mov	r9, r1
 6be:	53 01       	movw	r10, r6
 6c0:	13 c0       	rjmp	.+38     	; 0x6e8 <vfprintf+0x154>
 6c2:	28 01       	movw	r4, r16
 6c4:	f2 e0       	ldi	r31, 0x02	; 2
 6c6:	4f 0e       	add	r4, r31
 6c8:	51 1c       	adc	r5, r1
 6ca:	f8 01       	movw	r30, r16
 6cc:	a0 80       	ld	r10, Z
 6ce:	b1 80       	ldd	r11, Z+1	; 0x01
 6d0:	36 fe       	sbrs	r3, 6
 6d2:	03 c0       	rjmp	.+6      	; 0x6da <vfprintf+0x146>
 6d4:	69 2d       	mov	r22, r9
 6d6:	70 e0       	ldi	r23, 0x00	; 0
 6d8:	02 c0       	rjmp	.+4      	; 0x6de <vfprintf+0x14a>
 6da:	6f ef       	ldi	r22, 0xFF	; 255
 6dc:	7f ef       	ldi	r23, 0xFF	; 255
 6de:	c5 01       	movw	r24, r10
 6e0:	0e 94 b6 04 	call	0x96c	; 0x96c <strnlen>
 6e4:	4c 01       	movw	r8, r24
 6e6:	82 01       	movw	r16, r4
 6e8:	f3 2d       	mov	r31, r3
 6ea:	ff 77       	andi	r31, 0x7F	; 127
 6ec:	3f 2e       	mov	r3, r31
 6ee:	16 c0       	rjmp	.+44     	; 0x71c <vfprintf+0x188>
 6f0:	28 01       	movw	r4, r16
 6f2:	22 e0       	ldi	r18, 0x02	; 2
 6f4:	42 0e       	add	r4, r18
 6f6:	51 1c       	adc	r5, r1
 6f8:	f8 01       	movw	r30, r16
 6fa:	a0 80       	ld	r10, Z
 6fc:	b1 80       	ldd	r11, Z+1	; 0x01
 6fe:	36 fe       	sbrs	r3, 6
 700:	03 c0       	rjmp	.+6      	; 0x708 <vfprintf+0x174>
 702:	69 2d       	mov	r22, r9
 704:	70 e0       	ldi	r23, 0x00	; 0
 706:	02 c0       	rjmp	.+4      	; 0x70c <vfprintf+0x178>
 708:	6f ef       	ldi	r22, 0xFF	; 255
 70a:	7f ef       	ldi	r23, 0xFF	; 255
 70c:	c5 01       	movw	r24, r10
 70e:	0e 94 ab 04 	call	0x956	; 0x956 <strnlen_P>
 712:	4c 01       	movw	r8, r24
 714:	f3 2d       	mov	r31, r3
 716:	f0 68       	ori	r31, 0x80	; 128
 718:	3f 2e       	mov	r3, r31
 71a:	82 01       	movw	r16, r4
 71c:	33 fc       	sbrc	r3, 3
 71e:	1b c0       	rjmp	.+54     	; 0x756 <vfprintf+0x1c2>
 720:	82 2d       	mov	r24, r2
 722:	90 e0       	ldi	r25, 0x00	; 0
 724:	88 16       	cp	r8, r24
 726:	99 06       	cpc	r9, r25
 728:	b0 f4       	brcc	.+44     	; 0x756 <vfprintf+0x1c2>
 72a:	b6 01       	movw	r22, r12
 72c:	80 e2       	ldi	r24, 0x20	; 32
 72e:	90 e0       	ldi	r25, 0x00	; 0
 730:	0e 94 c1 04 	call	0x982	; 0x982 <fputc>
 734:	2a 94       	dec	r2
 736:	f4 cf       	rjmp	.-24     	; 0x720 <vfprintf+0x18c>
 738:	f5 01       	movw	r30, r10
 73a:	37 fc       	sbrc	r3, 7
 73c:	85 91       	lpm	r24, Z+
 73e:	37 fe       	sbrs	r3, 7
 740:	81 91       	ld	r24, Z+
 742:	5f 01       	movw	r10, r30
 744:	b6 01       	movw	r22, r12
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	0e 94 c1 04 	call	0x982	; 0x982 <fputc>
 74c:	21 10       	cpse	r2, r1
 74e:	2a 94       	dec	r2
 750:	21 e0       	ldi	r18, 0x01	; 1
 752:	82 1a       	sub	r8, r18
 754:	91 08       	sbc	r9, r1
 756:	81 14       	cp	r8, r1
 758:	91 04       	cpc	r9, r1
 75a:	71 f7       	brne	.-36     	; 0x738 <vfprintf+0x1a4>
 75c:	e8 c0       	rjmp	.+464    	; 0x92e <__stack+0x2f>
 75e:	84 36       	cpi	r24, 0x64	; 100
 760:	11 f0       	breq	.+4      	; 0x766 <vfprintf+0x1d2>
 762:	89 36       	cpi	r24, 0x69	; 105
 764:	41 f5       	brne	.+80     	; 0x7b6 <vfprintf+0x222>
 766:	f8 01       	movw	r30, r16
 768:	37 fe       	sbrs	r3, 7
 76a:	07 c0       	rjmp	.+14     	; 0x77a <vfprintf+0x1e6>
 76c:	60 81       	ld	r22, Z
 76e:	71 81       	ldd	r23, Z+1	; 0x01
 770:	82 81       	ldd	r24, Z+2	; 0x02
 772:	93 81       	ldd	r25, Z+3	; 0x03
 774:	0c 5f       	subi	r16, 0xFC	; 252
 776:	1f 4f       	sbci	r17, 0xFF	; 255
 778:	08 c0       	rjmp	.+16     	; 0x78a <vfprintf+0x1f6>
 77a:	60 81       	ld	r22, Z
 77c:	71 81       	ldd	r23, Z+1	; 0x01
 77e:	07 2e       	mov	r0, r23
 780:	00 0c       	add	r0, r0
 782:	88 0b       	sbc	r24, r24
 784:	99 0b       	sbc	r25, r25
 786:	0e 5f       	subi	r16, 0xFE	; 254
 788:	1f 4f       	sbci	r17, 0xFF	; 255
 78a:	f3 2d       	mov	r31, r3
 78c:	ff 76       	andi	r31, 0x6F	; 111
 78e:	3f 2e       	mov	r3, r31
 790:	97 ff       	sbrs	r25, 7
 792:	09 c0       	rjmp	.+18     	; 0x7a6 <vfprintf+0x212>
 794:	90 95       	com	r25
 796:	80 95       	com	r24
 798:	70 95       	com	r23
 79a:	61 95       	neg	r22
 79c:	7f 4f       	sbci	r23, 0xFF	; 255
 79e:	8f 4f       	sbci	r24, 0xFF	; 255
 7a0:	9f 4f       	sbci	r25, 0xFF	; 255
 7a2:	f0 68       	ori	r31, 0x80	; 128
 7a4:	3f 2e       	mov	r3, r31
 7a6:	2a e0       	ldi	r18, 0x0A	; 10
 7a8:	30 e0       	ldi	r19, 0x00	; 0
 7aa:	a3 01       	movw	r20, r6
 7ac:	0e 94 fd 04 	call	0x9fa	; 0x9fa <__ultoa_invert>
 7b0:	88 2e       	mov	r8, r24
 7b2:	86 18       	sub	r8, r6
 7b4:	45 c0       	rjmp	.+138    	; 0x840 <vfprintf+0x2ac>
 7b6:	85 37       	cpi	r24, 0x75	; 117
 7b8:	31 f4       	brne	.+12     	; 0x7c6 <vfprintf+0x232>
 7ba:	23 2d       	mov	r18, r3
 7bc:	2f 7e       	andi	r18, 0xEF	; 239
 7be:	b2 2e       	mov	r11, r18
 7c0:	2a e0       	ldi	r18, 0x0A	; 10
 7c2:	30 e0       	ldi	r19, 0x00	; 0
 7c4:	25 c0       	rjmp	.+74     	; 0x810 <vfprintf+0x27c>
 7c6:	93 2d       	mov	r25, r3
 7c8:	99 7f       	andi	r25, 0xF9	; 249
 7ca:	b9 2e       	mov	r11, r25
 7cc:	8f 36       	cpi	r24, 0x6F	; 111
 7ce:	c1 f0       	breq	.+48     	; 0x800 <vfprintf+0x26c>
 7d0:	18 f4       	brcc	.+6      	; 0x7d8 <vfprintf+0x244>
 7d2:	88 35       	cpi	r24, 0x58	; 88
 7d4:	79 f0       	breq	.+30     	; 0x7f4 <vfprintf+0x260>
 7d6:	b5 c0       	rjmp	.+362    	; 0x942 <__stack+0x43>
 7d8:	80 37       	cpi	r24, 0x70	; 112
 7da:	19 f0       	breq	.+6      	; 0x7e2 <vfprintf+0x24e>
 7dc:	88 37       	cpi	r24, 0x78	; 120
 7de:	21 f0       	breq	.+8      	; 0x7e8 <vfprintf+0x254>
 7e0:	b0 c0       	rjmp	.+352    	; 0x942 <__stack+0x43>
 7e2:	e9 2f       	mov	r30, r25
 7e4:	e0 61       	ori	r30, 0x10	; 16
 7e6:	be 2e       	mov	r11, r30
 7e8:	b4 fe       	sbrs	r11, 4
 7ea:	0d c0       	rjmp	.+26     	; 0x806 <vfprintf+0x272>
 7ec:	fb 2d       	mov	r31, r11
 7ee:	f4 60       	ori	r31, 0x04	; 4
 7f0:	bf 2e       	mov	r11, r31
 7f2:	09 c0       	rjmp	.+18     	; 0x806 <vfprintf+0x272>
 7f4:	34 fe       	sbrs	r3, 4
 7f6:	0a c0       	rjmp	.+20     	; 0x80c <vfprintf+0x278>
 7f8:	29 2f       	mov	r18, r25
 7fa:	26 60       	ori	r18, 0x06	; 6
 7fc:	b2 2e       	mov	r11, r18
 7fe:	06 c0       	rjmp	.+12     	; 0x80c <vfprintf+0x278>
 800:	28 e0       	ldi	r18, 0x08	; 8
 802:	30 e0       	ldi	r19, 0x00	; 0
 804:	05 c0       	rjmp	.+10     	; 0x810 <vfprintf+0x27c>
 806:	20 e1       	ldi	r18, 0x10	; 16
 808:	30 e0       	ldi	r19, 0x00	; 0
 80a:	02 c0       	rjmp	.+4      	; 0x810 <vfprintf+0x27c>
 80c:	20 e1       	ldi	r18, 0x10	; 16
 80e:	32 e0       	ldi	r19, 0x02	; 2
 810:	f8 01       	movw	r30, r16
 812:	b7 fe       	sbrs	r11, 7
 814:	07 c0       	rjmp	.+14     	; 0x824 <vfprintf+0x290>
 816:	60 81       	ld	r22, Z
 818:	71 81       	ldd	r23, Z+1	; 0x01
 81a:	82 81       	ldd	r24, Z+2	; 0x02
 81c:	93 81       	ldd	r25, Z+3	; 0x03
 81e:	0c 5f       	subi	r16, 0xFC	; 252
 820:	1f 4f       	sbci	r17, 0xFF	; 255
 822:	06 c0       	rjmp	.+12     	; 0x830 <vfprintf+0x29c>
 824:	60 81       	ld	r22, Z
 826:	71 81       	ldd	r23, Z+1	; 0x01
 828:	80 e0       	ldi	r24, 0x00	; 0
 82a:	90 e0       	ldi	r25, 0x00	; 0
 82c:	0e 5f       	subi	r16, 0xFE	; 254
 82e:	1f 4f       	sbci	r17, 0xFF	; 255
 830:	a3 01       	movw	r20, r6
 832:	0e 94 fd 04 	call	0x9fa	; 0x9fa <__ultoa_invert>
 836:	88 2e       	mov	r8, r24
 838:	86 18       	sub	r8, r6
 83a:	fb 2d       	mov	r31, r11
 83c:	ff 77       	andi	r31, 0x7F	; 127
 83e:	3f 2e       	mov	r3, r31
 840:	36 fe       	sbrs	r3, 6
 842:	0d c0       	rjmp	.+26     	; 0x85e <vfprintf+0x2ca>
 844:	23 2d       	mov	r18, r3
 846:	2e 7f       	andi	r18, 0xFE	; 254
 848:	a2 2e       	mov	r10, r18
 84a:	89 14       	cp	r8, r9
 84c:	58 f4       	brcc	.+22     	; 0x864 <vfprintf+0x2d0>
 84e:	34 fe       	sbrs	r3, 4
 850:	0b c0       	rjmp	.+22     	; 0x868 <vfprintf+0x2d4>
 852:	32 fc       	sbrc	r3, 2
 854:	09 c0       	rjmp	.+18     	; 0x868 <vfprintf+0x2d4>
 856:	83 2d       	mov	r24, r3
 858:	8e 7e       	andi	r24, 0xEE	; 238
 85a:	a8 2e       	mov	r10, r24
 85c:	05 c0       	rjmp	.+10     	; 0x868 <vfprintf+0x2d4>
 85e:	b8 2c       	mov	r11, r8
 860:	a3 2c       	mov	r10, r3
 862:	03 c0       	rjmp	.+6      	; 0x86a <vfprintf+0x2d6>
 864:	b8 2c       	mov	r11, r8
 866:	01 c0       	rjmp	.+2      	; 0x86a <vfprintf+0x2d6>
 868:	b9 2c       	mov	r11, r9
 86a:	a4 fe       	sbrs	r10, 4
 86c:	0f c0       	rjmp	.+30     	; 0x88c <vfprintf+0x2f8>
 86e:	fe 01       	movw	r30, r28
 870:	e8 0d       	add	r30, r8
 872:	f1 1d       	adc	r31, r1
 874:	80 81       	ld	r24, Z
 876:	80 33       	cpi	r24, 0x30	; 48
 878:	21 f4       	brne	.+8      	; 0x882 <vfprintf+0x2ee>
 87a:	9a 2d       	mov	r25, r10
 87c:	99 7e       	andi	r25, 0xE9	; 233
 87e:	a9 2e       	mov	r10, r25
 880:	09 c0       	rjmp	.+18     	; 0x894 <vfprintf+0x300>
 882:	a2 fe       	sbrs	r10, 2
 884:	06 c0       	rjmp	.+12     	; 0x892 <vfprintf+0x2fe>
 886:	b3 94       	inc	r11
 888:	b3 94       	inc	r11
 88a:	04 c0       	rjmp	.+8      	; 0x894 <vfprintf+0x300>
 88c:	8a 2d       	mov	r24, r10
 88e:	86 78       	andi	r24, 0x86	; 134
 890:	09 f0       	breq	.+2      	; 0x894 <vfprintf+0x300>
 892:	b3 94       	inc	r11
 894:	a3 fc       	sbrc	r10, 3
 896:	11 c0       	rjmp	.+34     	; 0x8ba <vfprintf+0x326>
 898:	a0 fe       	sbrs	r10, 0
 89a:	06 c0       	rjmp	.+12     	; 0x8a8 <vfprintf+0x314>
 89c:	b2 14       	cp	r11, r2
 89e:	88 f4       	brcc	.+34     	; 0x8c2 <vfprintf+0x32e>
 8a0:	28 0c       	add	r2, r8
 8a2:	92 2c       	mov	r9, r2
 8a4:	9b 18       	sub	r9, r11
 8a6:	0e c0       	rjmp	.+28     	; 0x8c4 <vfprintf+0x330>
 8a8:	b2 14       	cp	r11, r2
 8aa:	60 f4       	brcc	.+24     	; 0x8c4 <vfprintf+0x330>
 8ac:	b6 01       	movw	r22, r12
 8ae:	80 e2       	ldi	r24, 0x20	; 32
 8b0:	90 e0       	ldi	r25, 0x00	; 0
 8b2:	0e 94 c1 04 	call	0x982	; 0x982 <fputc>
 8b6:	b3 94       	inc	r11
 8b8:	f7 cf       	rjmp	.-18     	; 0x8a8 <vfprintf+0x314>
 8ba:	b2 14       	cp	r11, r2
 8bc:	18 f4       	brcc	.+6      	; 0x8c4 <vfprintf+0x330>
 8be:	2b 18       	sub	r2, r11
 8c0:	02 c0       	rjmp	.+4      	; 0x8c6 <vfprintf+0x332>
 8c2:	98 2c       	mov	r9, r8
 8c4:	21 2c       	mov	r2, r1
 8c6:	a4 fe       	sbrs	r10, 4
 8c8:	10 c0       	rjmp	.+32     	; 0x8ea <vfprintf+0x356>
 8ca:	b6 01       	movw	r22, r12
 8cc:	80 e3       	ldi	r24, 0x30	; 48
 8ce:	90 e0       	ldi	r25, 0x00	; 0
 8d0:	0e 94 c1 04 	call	0x982	; 0x982 <fputc>
 8d4:	a2 fe       	sbrs	r10, 2
 8d6:	17 c0       	rjmp	.+46     	; 0x906 <__stack+0x7>
 8d8:	a1 fc       	sbrc	r10, 1
 8da:	03 c0       	rjmp	.+6      	; 0x8e2 <vfprintf+0x34e>
 8dc:	88 e7       	ldi	r24, 0x78	; 120
 8de:	90 e0       	ldi	r25, 0x00	; 0
 8e0:	02 c0       	rjmp	.+4      	; 0x8e6 <vfprintf+0x352>
 8e2:	88 e5       	ldi	r24, 0x58	; 88
 8e4:	90 e0       	ldi	r25, 0x00	; 0
 8e6:	b6 01       	movw	r22, r12
 8e8:	0c c0       	rjmp	.+24     	; 0x902 <__stack+0x3>
 8ea:	8a 2d       	mov	r24, r10
 8ec:	86 78       	andi	r24, 0x86	; 134
 8ee:	59 f0       	breq	.+22     	; 0x906 <__stack+0x7>
 8f0:	a1 fe       	sbrs	r10, 1
 8f2:	02 c0       	rjmp	.+4      	; 0x8f8 <vfprintf+0x364>
 8f4:	8b e2       	ldi	r24, 0x2B	; 43
 8f6:	01 c0       	rjmp	.+2      	; 0x8fa <vfprintf+0x366>
 8f8:	80 e2       	ldi	r24, 0x20	; 32
 8fa:	a7 fc       	sbrc	r10, 7
 8fc:	8d e2       	ldi	r24, 0x2D	; 45
 8fe:	b6 01       	movw	r22, r12
 900:	90 e0       	ldi	r25, 0x00	; 0
 902:	0e 94 c1 04 	call	0x982	; 0x982 <fputc>
 906:	89 14       	cp	r8, r9
 908:	38 f4       	brcc	.+14     	; 0x918 <__stack+0x19>
 90a:	b6 01       	movw	r22, r12
 90c:	80 e3       	ldi	r24, 0x30	; 48
 90e:	90 e0       	ldi	r25, 0x00	; 0
 910:	0e 94 c1 04 	call	0x982	; 0x982 <fputc>
 914:	9a 94       	dec	r9
 916:	f7 cf       	rjmp	.-18     	; 0x906 <__stack+0x7>
 918:	8a 94       	dec	r8
 91a:	f3 01       	movw	r30, r6
 91c:	e8 0d       	add	r30, r8
 91e:	f1 1d       	adc	r31, r1
 920:	80 81       	ld	r24, Z
 922:	b6 01       	movw	r22, r12
 924:	90 e0       	ldi	r25, 0x00	; 0
 926:	0e 94 c1 04 	call	0x982	; 0x982 <fputc>
 92a:	81 10       	cpse	r8, r1
 92c:	f5 cf       	rjmp	.-22     	; 0x918 <__stack+0x19>
 92e:	22 20       	and	r2, r2
 930:	09 f4       	brne	.+2      	; 0x934 <__stack+0x35>
 932:	42 ce       	rjmp	.-892    	; 0x5b8 <vfprintf+0x24>
 934:	b6 01       	movw	r22, r12
 936:	80 e2       	ldi	r24, 0x20	; 32
 938:	90 e0       	ldi	r25, 0x00	; 0
 93a:	0e 94 c1 04 	call	0x982	; 0x982 <fputc>
 93e:	2a 94       	dec	r2
 940:	f6 cf       	rjmp	.-20     	; 0x92e <__stack+0x2f>
 942:	f6 01       	movw	r30, r12
 944:	86 81       	ldd	r24, Z+6	; 0x06
 946:	97 81       	ldd	r25, Z+7	; 0x07
 948:	02 c0       	rjmp	.+4      	; 0x94e <__stack+0x4f>
 94a:	8f ef       	ldi	r24, 0xFF	; 255
 94c:	9f ef       	ldi	r25, 0xFF	; 255
 94e:	2b 96       	adiw	r28, 0x0b	; 11
 950:	e2 e1       	ldi	r30, 0x12	; 18
 952:	0c 94 a9 05 	jmp	0xb52	; 0xb52 <__epilogue_restores__>

00000956 <strnlen_P>:
 956:	fc 01       	movw	r30, r24
 958:	05 90       	lpm	r0, Z+
 95a:	61 50       	subi	r22, 0x01	; 1
 95c:	70 40       	sbci	r23, 0x00	; 0
 95e:	01 10       	cpse	r0, r1
 960:	d8 f7       	brcc	.-10     	; 0x958 <strnlen_P+0x2>
 962:	80 95       	com	r24
 964:	90 95       	com	r25
 966:	8e 0f       	add	r24, r30
 968:	9f 1f       	adc	r25, r31
 96a:	08 95       	ret

0000096c <strnlen>:
 96c:	fc 01       	movw	r30, r24
 96e:	61 50       	subi	r22, 0x01	; 1
 970:	70 40       	sbci	r23, 0x00	; 0
 972:	01 90       	ld	r0, Z+
 974:	01 10       	cpse	r0, r1
 976:	d8 f7       	brcc	.-10     	; 0x96e <strnlen+0x2>
 978:	80 95       	com	r24
 97a:	90 95       	com	r25
 97c:	8e 0f       	add	r24, r30
 97e:	9f 1f       	adc	r25, r31
 980:	08 95       	ret

00000982 <fputc>:
 982:	0f 93       	push	r16
 984:	1f 93       	push	r17
 986:	cf 93       	push	r28
 988:	df 93       	push	r29
 98a:	fb 01       	movw	r30, r22
 98c:	23 81       	ldd	r18, Z+3	; 0x03
 98e:	21 fd       	sbrc	r18, 1
 990:	03 c0       	rjmp	.+6      	; 0x998 <fputc+0x16>
 992:	8f ef       	ldi	r24, 0xFF	; 255
 994:	9f ef       	ldi	r25, 0xFF	; 255
 996:	2c c0       	rjmp	.+88     	; 0x9f0 <fputc+0x6e>
 998:	22 ff       	sbrs	r18, 2
 99a:	16 c0       	rjmp	.+44     	; 0x9c8 <fputc+0x46>
 99c:	46 81       	ldd	r20, Z+6	; 0x06
 99e:	57 81       	ldd	r21, Z+7	; 0x07
 9a0:	24 81       	ldd	r18, Z+4	; 0x04
 9a2:	35 81       	ldd	r19, Z+5	; 0x05
 9a4:	42 17       	cp	r20, r18
 9a6:	53 07       	cpc	r21, r19
 9a8:	44 f4       	brge	.+16     	; 0x9ba <fputc+0x38>
 9aa:	a0 81       	ld	r26, Z
 9ac:	b1 81       	ldd	r27, Z+1	; 0x01
 9ae:	9d 01       	movw	r18, r26
 9b0:	2f 5f       	subi	r18, 0xFF	; 255
 9b2:	3f 4f       	sbci	r19, 0xFF	; 255
 9b4:	31 83       	std	Z+1, r19	; 0x01
 9b6:	20 83       	st	Z, r18
 9b8:	8c 93       	st	X, r24
 9ba:	26 81       	ldd	r18, Z+6	; 0x06
 9bc:	37 81       	ldd	r19, Z+7	; 0x07
 9be:	2f 5f       	subi	r18, 0xFF	; 255
 9c0:	3f 4f       	sbci	r19, 0xFF	; 255
 9c2:	37 83       	std	Z+7, r19	; 0x07
 9c4:	26 83       	std	Z+6, r18	; 0x06
 9c6:	14 c0       	rjmp	.+40     	; 0x9f0 <fputc+0x6e>
 9c8:	8b 01       	movw	r16, r22
 9ca:	ec 01       	movw	r28, r24
 9cc:	fb 01       	movw	r30, r22
 9ce:	00 84       	ldd	r0, Z+8	; 0x08
 9d0:	f1 85       	ldd	r31, Z+9	; 0x09
 9d2:	e0 2d       	mov	r30, r0
 9d4:	09 95       	icall
 9d6:	89 2b       	or	r24, r25
 9d8:	e1 f6       	brne	.-72     	; 0x992 <fputc+0x10>
 9da:	d8 01       	movw	r26, r16
 9dc:	16 96       	adiw	r26, 0x06	; 6
 9de:	8d 91       	ld	r24, X+
 9e0:	9c 91       	ld	r25, X
 9e2:	17 97       	sbiw	r26, 0x07	; 7
 9e4:	01 96       	adiw	r24, 0x01	; 1
 9e6:	17 96       	adiw	r26, 0x07	; 7
 9e8:	9c 93       	st	X, r25
 9ea:	8e 93       	st	-X, r24
 9ec:	16 97       	sbiw	r26, 0x06	; 6
 9ee:	ce 01       	movw	r24, r28
 9f0:	df 91       	pop	r29
 9f2:	cf 91       	pop	r28
 9f4:	1f 91       	pop	r17
 9f6:	0f 91       	pop	r16
 9f8:	08 95       	ret

000009fa <__ultoa_invert>:
 9fa:	fa 01       	movw	r30, r20
 9fc:	aa 27       	eor	r26, r26
 9fe:	28 30       	cpi	r18, 0x08	; 8
 a00:	51 f1       	breq	.+84     	; 0xa56 <__ultoa_invert+0x5c>
 a02:	20 31       	cpi	r18, 0x10	; 16
 a04:	81 f1       	breq	.+96     	; 0xa66 <__ultoa_invert+0x6c>
 a06:	e8 94       	clt
 a08:	6f 93       	push	r22
 a0a:	6e 7f       	andi	r22, 0xFE	; 254
 a0c:	6e 5f       	subi	r22, 0xFE	; 254
 a0e:	7f 4f       	sbci	r23, 0xFF	; 255
 a10:	8f 4f       	sbci	r24, 0xFF	; 255
 a12:	9f 4f       	sbci	r25, 0xFF	; 255
 a14:	af 4f       	sbci	r26, 0xFF	; 255
 a16:	b1 e0       	ldi	r27, 0x01	; 1
 a18:	3e d0       	rcall	.+124    	; 0xa96 <__ultoa_invert+0x9c>
 a1a:	b4 e0       	ldi	r27, 0x04	; 4
 a1c:	3c d0       	rcall	.+120    	; 0xa96 <__ultoa_invert+0x9c>
 a1e:	67 0f       	add	r22, r23
 a20:	78 1f       	adc	r23, r24
 a22:	89 1f       	adc	r24, r25
 a24:	9a 1f       	adc	r25, r26
 a26:	a1 1d       	adc	r26, r1
 a28:	68 0f       	add	r22, r24
 a2a:	79 1f       	adc	r23, r25
 a2c:	8a 1f       	adc	r24, r26
 a2e:	91 1d       	adc	r25, r1
 a30:	a1 1d       	adc	r26, r1
 a32:	6a 0f       	add	r22, r26
 a34:	71 1d       	adc	r23, r1
 a36:	81 1d       	adc	r24, r1
 a38:	91 1d       	adc	r25, r1
 a3a:	a1 1d       	adc	r26, r1
 a3c:	20 d0       	rcall	.+64     	; 0xa7e <__ultoa_invert+0x84>
 a3e:	09 f4       	brne	.+2      	; 0xa42 <__ultoa_invert+0x48>
 a40:	68 94       	set
 a42:	3f 91       	pop	r19
 a44:	2a e0       	ldi	r18, 0x0A	; 10
 a46:	26 9f       	mul	r18, r22
 a48:	11 24       	eor	r1, r1
 a4a:	30 19       	sub	r19, r0
 a4c:	30 5d       	subi	r19, 0xD0	; 208
 a4e:	31 93       	st	Z+, r19
 a50:	de f6       	brtc	.-74     	; 0xa08 <__ultoa_invert+0xe>
 a52:	cf 01       	movw	r24, r30
 a54:	08 95       	ret
 a56:	46 2f       	mov	r20, r22
 a58:	47 70       	andi	r20, 0x07	; 7
 a5a:	40 5d       	subi	r20, 0xD0	; 208
 a5c:	41 93       	st	Z+, r20
 a5e:	b3 e0       	ldi	r27, 0x03	; 3
 a60:	0f d0       	rcall	.+30     	; 0xa80 <__ultoa_invert+0x86>
 a62:	c9 f7       	brne	.-14     	; 0xa56 <__ultoa_invert+0x5c>
 a64:	f6 cf       	rjmp	.-20     	; 0xa52 <__ultoa_invert+0x58>
 a66:	46 2f       	mov	r20, r22
 a68:	4f 70       	andi	r20, 0x0F	; 15
 a6a:	40 5d       	subi	r20, 0xD0	; 208
 a6c:	4a 33       	cpi	r20, 0x3A	; 58
 a6e:	18 f0       	brcs	.+6      	; 0xa76 <__ultoa_invert+0x7c>
 a70:	49 5d       	subi	r20, 0xD9	; 217
 a72:	31 fd       	sbrc	r19, 1
 a74:	40 52       	subi	r20, 0x20	; 32
 a76:	41 93       	st	Z+, r20
 a78:	02 d0       	rcall	.+4      	; 0xa7e <__ultoa_invert+0x84>
 a7a:	a9 f7       	brne	.-22     	; 0xa66 <__ultoa_invert+0x6c>
 a7c:	ea cf       	rjmp	.-44     	; 0xa52 <__ultoa_invert+0x58>
 a7e:	b4 e0       	ldi	r27, 0x04	; 4
 a80:	a6 95       	lsr	r26
 a82:	97 95       	ror	r25
 a84:	87 95       	ror	r24
 a86:	77 95       	ror	r23
 a88:	67 95       	ror	r22
 a8a:	ba 95       	dec	r27
 a8c:	c9 f7       	brne	.-14     	; 0xa80 <__ultoa_invert+0x86>
 a8e:	00 97       	sbiw	r24, 0x00	; 0
 a90:	61 05       	cpc	r22, r1
 a92:	71 05       	cpc	r23, r1
 a94:	08 95       	ret
 a96:	9b 01       	movw	r18, r22
 a98:	ac 01       	movw	r20, r24
 a9a:	0a 2e       	mov	r0, r26
 a9c:	06 94       	lsr	r0
 a9e:	57 95       	ror	r21
 aa0:	47 95       	ror	r20
 aa2:	37 95       	ror	r19
 aa4:	27 95       	ror	r18
 aa6:	ba 95       	dec	r27
 aa8:	c9 f7       	brne	.-14     	; 0xa9c <__ultoa_invert+0xa2>
 aaa:	62 0f       	add	r22, r18
 aac:	73 1f       	adc	r23, r19
 aae:	84 1f       	adc	r24, r20
 ab0:	95 1f       	adc	r25, r21
 ab2:	a0 1d       	adc	r26, r0
 ab4:	08 95       	ret

00000ab6 <__divmodsi4>:
 ab6:	05 2e       	mov	r0, r21
 ab8:	97 fb       	bst	r25, 7
 aba:	1e f4       	brtc	.+6      	; 0xac2 <__divmodsi4+0xc>
 abc:	00 94       	com	r0
 abe:	0e 94 72 05 	call	0xae4	; 0xae4 <__negsi2>
 ac2:	57 fd       	sbrc	r21, 7
 ac4:	07 d0       	rcall	.+14     	; 0xad4 <__divmodsi4_neg2>
 ac6:	0e 94 c4 05 	call	0xb88	; 0xb88 <__udivmodsi4>
 aca:	07 fc       	sbrc	r0, 7
 acc:	03 d0       	rcall	.+6      	; 0xad4 <__divmodsi4_neg2>
 ace:	4e f4       	brtc	.+18     	; 0xae2 <__divmodsi4_exit>
 ad0:	0c 94 72 05 	jmp	0xae4	; 0xae4 <__negsi2>

00000ad4 <__divmodsi4_neg2>:
 ad4:	50 95       	com	r21
 ad6:	40 95       	com	r20
 ad8:	30 95       	com	r19
 ada:	21 95       	neg	r18
 adc:	3f 4f       	sbci	r19, 0xFF	; 255
 ade:	4f 4f       	sbci	r20, 0xFF	; 255
 ae0:	5f 4f       	sbci	r21, 0xFF	; 255

00000ae2 <__divmodsi4_exit>:
 ae2:	08 95       	ret

00000ae4 <__negsi2>:
 ae4:	90 95       	com	r25
 ae6:	80 95       	com	r24
 ae8:	70 95       	com	r23
 aea:	61 95       	neg	r22
 aec:	7f 4f       	sbci	r23, 0xFF	; 255
 aee:	8f 4f       	sbci	r24, 0xFF	; 255
 af0:	9f 4f       	sbci	r25, 0xFF	; 255
 af2:	08 95       	ret

00000af4 <__muluhisi3>:
 af4:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__umulhisi3>
 af8:	a5 9f       	mul	r26, r21
 afa:	90 0d       	add	r25, r0
 afc:	b4 9f       	mul	r27, r20
 afe:	90 0d       	add	r25, r0
 b00:	a4 9f       	mul	r26, r20
 b02:	80 0d       	add	r24, r0
 b04:	91 1d       	adc	r25, r1
 b06:	11 24       	eor	r1, r1
 b08:	08 95       	ret

00000b0a <__mulshisi3>:
 b0a:	b7 ff       	sbrs	r27, 7
 b0c:	0c 94 7a 05 	jmp	0xaf4	; 0xaf4 <__muluhisi3>

00000b10 <__mulohisi3>:
 b10:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <__muluhisi3>
 b14:	82 1b       	sub	r24, r18
 b16:	93 0b       	sbc	r25, r19
 b18:	08 95       	ret

00000b1a <__prologue_saves__>:
 b1a:	2f 92       	push	r2
 b1c:	3f 92       	push	r3
 b1e:	4f 92       	push	r4
 b20:	5f 92       	push	r5
 b22:	6f 92       	push	r6
 b24:	7f 92       	push	r7
 b26:	8f 92       	push	r8
 b28:	9f 92       	push	r9
 b2a:	af 92       	push	r10
 b2c:	bf 92       	push	r11
 b2e:	cf 92       	push	r12
 b30:	df 92       	push	r13
 b32:	ef 92       	push	r14
 b34:	ff 92       	push	r15
 b36:	0f 93       	push	r16
 b38:	1f 93       	push	r17
 b3a:	cf 93       	push	r28
 b3c:	df 93       	push	r29
 b3e:	cd b7       	in	r28, 0x3d	; 61
 b40:	de b7       	in	r29, 0x3e	; 62
 b42:	ca 1b       	sub	r28, r26
 b44:	db 0b       	sbc	r29, r27
 b46:	0f b6       	in	r0, 0x3f	; 63
 b48:	f8 94       	cli
 b4a:	de bf       	out	0x3e, r29	; 62
 b4c:	0f be       	out	0x3f, r0	; 63
 b4e:	cd bf       	out	0x3d, r28	; 61
 b50:	09 94       	ijmp

00000b52 <__epilogue_restores__>:
 b52:	2a 88       	ldd	r2, Y+18	; 0x12
 b54:	39 88       	ldd	r3, Y+17	; 0x11
 b56:	48 88       	ldd	r4, Y+16	; 0x10
 b58:	5f 84       	ldd	r5, Y+15	; 0x0f
 b5a:	6e 84       	ldd	r6, Y+14	; 0x0e
 b5c:	7d 84       	ldd	r7, Y+13	; 0x0d
 b5e:	8c 84       	ldd	r8, Y+12	; 0x0c
 b60:	9b 84       	ldd	r9, Y+11	; 0x0b
 b62:	aa 84       	ldd	r10, Y+10	; 0x0a
 b64:	b9 84       	ldd	r11, Y+9	; 0x09
 b66:	c8 84       	ldd	r12, Y+8	; 0x08
 b68:	df 80       	ldd	r13, Y+7	; 0x07
 b6a:	ee 80       	ldd	r14, Y+6	; 0x06
 b6c:	fd 80       	ldd	r15, Y+5	; 0x05
 b6e:	0c 81       	ldd	r16, Y+4	; 0x04
 b70:	1b 81       	ldd	r17, Y+3	; 0x03
 b72:	aa 81       	ldd	r26, Y+2	; 0x02
 b74:	b9 81       	ldd	r27, Y+1	; 0x01
 b76:	ce 0f       	add	r28, r30
 b78:	d1 1d       	adc	r29, r1
 b7a:	0f b6       	in	r0, 0x3f	; 63
 b7c:	f8 94       	cli
 b7e:	de bf       	out	0x3e, r29	; 62
 b80:	0f be       	out	0x3f, r0	; 63
 b82:	cd bf       	out	0x3d, r28	; 61
 b84:	ed 01       	movw	r28, r26
 b86:	08 95       	ret

00000b88 <__udivmodsi4>:
 b88:	a1 e2       	ldi	r26, 0x21	; 33
 b8a:	1a 2e       	mov	r1, r26
 b8c:	aa 1b       	sub	r26, r26
 b8e:	bb 1b       	sub	r27, r27
 b90:	fd 01       	movw	r30, r26
 b92:	0d c0       	rjmp	.+26     	; 0xbae <__udivmodsi4_ep>

00000b94 <__udivmodsi4_loop>:
 b94:	aa 1f       	adc	r26, r26
 b96:	bb 1f       	adc	r27, r27
 b98:	ee 1f       	adc	r30, r30
 b9a:	ff 1f       	adc	r31, r31
 b9c:	a2 17       	cp	r26, r18
 b9e:	b3 07       	cpc	r27, r19
 ba0:	e4 07       	cpc	r30, r20
 ba2:	f5 07       	cpc	r31, r21
 ba4:	20 f0       	brcs	.+8      	; 0xbae <__udivmodsi4_ep>
 ba6:	a2 1b       	sub	r26, r18
 ba8:	b3 0b       	sbc	r27, r19
 baa:	e4 0b       	sbc	r30, r20
 bac:	f5 0b       	sbc	r31, r21

00000bae <__udivmodsi4_ep>:
 bae:	66 1f       	adc	r22, r22
 bb0:	77 1f       	adc	r23, r23
 bb2:	88 1f       	adc	r24, r24
 bb4:	99 1f       	adc	r25, r25
 bb6:	1a 94       	dec	r1
 bb8:	69 f7       	brne	.-38     	; 0xb94 <__udivmodsi4_loop>
 bba:	60 95       	com	r22
 bbc:	70 95       	com	r23
 bbe:	80 95       	com	r24
 bc0:	90 95       	com	r25
 bc2:	9b 01       	movw	r18, r22
 bc4:	ac 01       	movw	r20, r24
 bc6:	bd 01       	movw	r22, r26
 bc8:	cf 01       	movw	r24, r30
 bca:	08 95       	ret

00000bcc <__umulhisi3>:
 bcc:	a2 9f       	mul	r26, r18
 bce:	b0 01       	movw	r22, r0
 bd0:	b3 9f       	mul	r27, r19
 bd2:	c0 01       	movw	r24, r0
 bd4:	a3 9f       	mul	r26, r19
 bd6:	70 0d       	add	r23, r0
 bd8:	81 1d       	adc	r24, r1
 bda:	11 24       	eor	r1, r1
 bdc:	91 1d       	adc	r25, r1
 bde:	b2 9f       	mul	r27, r18
 be0:	70 0d       	add	r23, r0
 be2:	81 1d       	adc	r24, r1
 be4:	11 24       	eor	r1, r1
 be6:	91 1d       	adc	r25, r1
 be8:	08 95       	ret

00000bea <_exit>:
 bea:	f8 94       	cli

00000bec <__stop_program>:
 bec:	ff cf       	rjmp	.-2      	; 0xbec <__stop_program>
